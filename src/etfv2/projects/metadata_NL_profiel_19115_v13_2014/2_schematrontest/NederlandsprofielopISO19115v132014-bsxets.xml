<?xml version="1.0" encoding="UTF-8"?>
<etf:ExecutableTestSuite
  xmlns="http://www.interactive-instruments.de/etf/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:etf="http://www.interactive-instruments.de/etf/2.0"
  xmlns:ii="http://www.interactive-instruments.de"
  id="EID0e237782-a386-11e7-d211-09173f13e4c5"
  xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 http://resources.etf-validator.net/schema/v2/service/service.xsd">
  <itemHash>bQ==</itemHash>
  <remoteResource>https://github.com/interactive-instruments/etf-ets-repository</remoteResource>
  <localPath>/auto</localPath>
  <label>Schematron schematron</label>
  <description>...</description>
  <reference>../example-bsxets.xq</reference>
  <version>1.0.0</version>
  <author>See original schematron file:/home/thijs/code/Geonovum/ETF/github/etf-test-projects-nl/src/metadata/Nederlands%20profiel%20op%20ISO%2019115%20v13%202014/schematron.sch</author>
  <creationDate>2017-12-08T14:25:04.233+01:00</creationDate>
  <lastEditor>ETF Schematron to ETF Executable Test Suite Transformer</lastEditor>
  <lastUpdateDate>2017-12-08T14:25:04.233+01:00</lastUpdateDate>
  <tags><tag ref="EIDec1b3956-b1f9-4359-814e-7590877f4eb2"/></tags><testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/><translationTemplateBundle ref="EID0e237782-a386-11e7-d284-09173f13e4c5"/>
  <ParameterList name="ETF Standard Parameters for XML test objects">
    <parameter name="files_to_test" required="true">
      <defaultValue>.*</defaultValue><description ref="TR.filesToTest"/>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
    <parameter name="tests_to_execute" required="false">
      <defaultValue>.*</defaultValue><description ref="TR.testsToExecute"/>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
  </ParameterList>
  <supportedTestObjectTypes><testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e"/></supportedTestObjectTypes>
  <testModules>
    <TestModule id="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5">
      <label>Validatie tegen het Nederlands metadata profiel op ISO 19115 voor geografie v 1.3.1</label>
      <description>...</description><parent ref="EID0e237782-a386-11e7-d211-09173f13e4c5"/>
      <testCases>
        <TestCase id="EID3361468d-dc1b-11e7-d2e5-09173f13e4c5">
          <label>Algemene metadata regels</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID33614594-dc1b-11e7-d418-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID3361468d-dc1b-11e7-d2e5-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33614691-dc1b-11e7-d2e5-09173f13e4c5">
                  <label>Schema locatie</label>
                  <description>Het ISO 19139 XML document mist een verplichte schema locatie. De schema locatie http://schemas.opengis.net/iso/19139/20060504/gmd/gmd.xsd moet aanwezig zijn.</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:contains-seq(local:normalize-space-seq(@xsi:schemaLocation), 'http://schemas.opengis.net/iso/19139/20060504/gmd/gmd.xsd')) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.1', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.1"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ddc-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Metadata ID (ISO nr. 2)</label>
                  <description>Er is geen Metadata ID (ISO nr. 2) opgegeven.</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$fileIdentifier) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.2', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.2"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614de4-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Metadata taal (ISO nr. 3)</label>
                  <description>De metadata taal (ISO nr. 3) ontbreekt of heeft een verkeerde waarde. Dit hoort een waarde en verwijzing naar de codelijst te zijn.</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$mdLanguage) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.3', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.3"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614dea-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Metadata hierarchieniveau (ISO nr. 6)</label>
                  <description>Metadata hierarchieniveau (ISO nr. 6) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$hierarchyLevel) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.4', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.4"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614df1-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Beschrijving hierarchisch niveau (ISO nr. 7)</label>
                  <description>Beschrijving hierarchisch niveau (ISO nr. 7) ontbreekt. Dit is verplicht als hierarchieniveau = 'series'.</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:not-seq($hierarchyLevel_value = 'series' and local:not-seq($hierarchyLevelName))) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors',
                    count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.5', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.5"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614df7-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Naam organisatie metadata (ISO nr. 376)</label>
                  <description>Naam organisatie metadata (ISO nr. 376) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$mdResponsibleParty_Organisation) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order
                    by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.6', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.6"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614dff-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Rol organisatie metadata (ISO nr. 379)</label>
                  <description>Rol organisatie metadata (ISO nr. 379) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$mdResponsibleParty_Role) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.7', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.7"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614e0a-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Rol organisatie metadata (ISO nr. 379)</label>
                  <description>Rol organisatie metadata (ISO nr. 379) ontbreekt of heeft een verkeerde waarde, deze dient voor INSPIRE contactpunt te zijn</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:not-seq($conformity_Spec_Title_Exsists) or ($conformity_Spec_Title_Exsists and $mdResponsibleParty_Role_INSPIRE)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.8', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.8"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614e0f-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>E-mail organisatie metadata (ISO nr. 386)</label>
                  <description>E-mail organisatie metadata (ISO nr. 386) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$mdResponsibleParty_Mail) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.9', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.9"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614e17-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Metadata datum (ISO nr. 9)</label>
                  <description>Metadata datum (ISO nr. 9) ontbreekt of heeft het verkeerde formaat (YYYY-MM-DD)</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/((local:number-seq(local:substring-seq(local:substring-before-seq($dateStamp,'-'),1,4)) &gt; 1000 ))) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.10', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.10"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614e20-dc1b-11e7-d2e1-09173f13e4c5">
                  <label>Metadatastandaard naam (ISO nr. 10)</label>
                  <description>Metadatastandaard naam (ISO nr. 10) ontbreekt of is niet correct ingevuld, Metadatastandaard naam dient de waarde 'ISO 19115' te hebben</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$metadataStandardName = 'ISO 19115') return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors
                    order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.11', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.11"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614e28-dc1b-11e7-d2e2-09173f13e4c5">
                  <label>Versie metadatastandaard (ISO nr. 11)</label>
                  <description>Versie metadatastandaard (ISO nr. 11) ontbreekt of is niet correct ingevuld, Metadatastandaard versie dient de waarde 'Nederlands metadata profiel op ISO 19115 voor geografie 1.3' te bevatten</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:contains-seq($metadataStandardVersion, 'PROFIEL OP ISO 19115')) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)),
                    for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.12', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.12"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614e30-dc1b-11e7-d2e2-09173f13e4c5">
                  <label>Metadata karakterset (ISO nr. 4)</label>
                  <description>Metadata karakterset (ISO nr. 4) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:not-seq($metadataCharacterset) or $metadataCharacterset_value) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)),
                    for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.13', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.13"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614eb8-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>Dataset titel (ISO nr. 360)</label>
                  <description>Dataset titel (ISO nr. 360) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$datasetTitle) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.14', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.14"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ec0-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>Datum van de bron(ISO nr. 394) en Datatype (ISO nr.395)</label>
                  <description>Datum van de bron(ISO nr. 394) of Datatype (ISO nr.395) ontbreken of heeft het verkeerde formaat (YYYY-MM-DD)</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$publicationDate or $creationDate or $revisionDate) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.15', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.15"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ec7-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>Samenvatting (ISO nr. 25)</label>
                  <description>Samenvatting (ISO nr. 25) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$abstract) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.16', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.16"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ecf-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>Status (ISO nr. 28)</label>
                  <description>Status (ISO nr. 28) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$status) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file)
                    let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.17', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.17"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ed5-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>Verantwoordelijke organisatie bron (ISO nr. 376)</label>
                  <description>Verantwoordelijke organisatie bron (ISO nr. 376) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$responsibleParty_Organisation) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.18', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.18"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ede-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>Rol verantwoordelijke organisatie bron (ISO nr. 379)</label>
                  <description>Rol verantwoordelijke organisatie bron (ISO nr. 379) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$responsibleParty_Role) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.19', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.19"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ee4-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>E-mail verantwoordelijke organisatie bron (ISO nr. 386)</label>
                  <description>E-mail verantwoordelijke organisatie bron (ISO nr. 386) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$responsibleParty_Mail) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.20', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.20"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614eec-dc1b-11e7-d2e3-09173f13e4c5">
                  <label>Trefwoorden (ISO nr. 53)</label>
                  <description>Trefwoorden (ISO nr. 53) ontbreken</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$keyword) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file)
                    let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.21', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.21"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614efb-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Specificatie (ISO nr. 360)</label>
                  <description>Specificatie (ISO nr. 360) mist de verplichte waarde voor INSPIRE datasets, Als dit geen INSPIRE dataset is verwijder dan de thesaurus GEMET -INSPIRE themes, voor INSPIRE datasets in specificatie opnemen; VERORDENING (EU) Nr. 1089/2010
                    VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:not-seq($thesaurus_INSPIRE_Exsists) or ($thesaurus_INSPIRE_Exsists and $conformity_Spec_Title_Exsists)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.22', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.22"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f00-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Unieke Identifier van de bron (ISO nr. 207)</label>
                  <description>Unieke Identifier van de bron (ISO nr. 207) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$identifier) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.23', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.23"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f0d-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Dataset karakterset (ISO nr. 40)</label>
                  <description>Dataset karakterset (ISO nr. 40) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:not-seq($characterset) or $characterset_value) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.24', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.24"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f14-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Onderwerp(ISO nr. 41)</label>
                  <description>Onderwerp(ISO nr. 41) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$topicCategory) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.25', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.25"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f1a-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Minimum x-coordinaat (ISO nr. 344)</label>
                  <description>Minimum x-coördinaat (ISO nr. 344) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/(-180.00 &lt; $west) and ( $west &lt; 180.00) or ( $west = 0.00 ) or ( $west = -180.00 ) or ( $west = 180.00 )) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.26', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.26"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f22-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Maximum x-coordinaat (ISO nr. 345)</label>
                  <description>Maximum x-coördinaat (ISO nr. 345) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/(-180.00 &lt; $east) and ($east &lt; 180.00) or ( $east = 0.00 ) or ( $east = -180.00 ) or ( $east = 180.00 )) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.27', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.27"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f2b-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Minimum y-coordinaat (ISO nr. 346)</label>
                  <description>Minimum y-coördinaat (ISO nr. 346) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/(-90.00 &lt; $south) and ($south &lt; $north) or (-90.00 = $south) or ($south = $north)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors',
                    count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.28', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.28"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f33-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Maximum y-coordinaat (ISO nr. 347)</label>
                  <description>Maximum y-coördinaat (ISO nr. 347) ontbreekt of heeft een verkeerde waarde</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/($south &lt; $north) and ($north &lt; 90.00) or ($south = $north) or ($north = 90.00)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors',
                    count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.29', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.29"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f3e-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Gebruiksbeperkingen (ISO nr. 68)</label>
                  <description>Gebruiksbeperkingen (ISO nr. 68) ontbreken</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$useLimitation) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.30', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.30"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f46-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>(Juridische) toegangsrestricties (ISO nr. 70) en Overige beperkingen (ISO nr 72)</label>
                  <description>(Juridische) toegangsrestricties (ISO nr. 70) en Overige beperkingen (ISO nr 72) dient ingevuld te zijn</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$accessConstraints_value and $otherConstraints ) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.31', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.31"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f49-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>(Juridische) toegangsrestricties (ISO nr. 70)</label>
                  <description>(Juridische) toegangsrestricties (ISO nr. 70) dient de waarde 'anders' te hebben in combinatie met een publiek domein, CC0 of geogedeelt licentie bij overige beperkingen (ISO nr. 72)</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$accessConstraints_value) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.32', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.32"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f4c-dc1b-11e7-d2e4-09173f13e4c5">
                  <label>Overige beperkingen (ISO nr 72)</label>
                  <description>Het element overige beperkingen (ISO nr. 72) dient twee maal binnen dezelfde toegangsrestricties voor te komen; één met de beschrijving en één met de URL naar de publiek domein, CC0 of geogedeelt licentie,als (juridische)
                    toegangsrestricties (ISO nr. 70) de waarde 'anders' heeft</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/local:not-seq($accessConstraints_value = 'otherRestrictions') or ($accessConstraints_value = 'otherRestrictions' and $otherConstraint1 and $otherConstraint2)) return $i return (if ($filesWithErrors) then
                    'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.33', map
                    { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.33"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f5f-dc1b-11e7-d2e5-09173f13e4c5">
                  <label>Toepassingsschaal (ISO nr. 57) Resolutie (ISO nr. 61)</label>
                  <description>Toepassingsschaal (ISO nr. 57) of Resolutie (ISO nr. 61) is verplicht als hij gespecificeerd kan worden.</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$spatialResolution) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.34', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.34"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f62-dc1b-11e7-d2e5-09173f13e4c5">
                  <label>Code referentiesysteem (ISO nr. 207) en verantwoordelijke organisatie voor namespace referentiesysteem (ISO nr. 208.1)</label>
                  <description>Code referentiesysteem (ISO nr. 207) ontbreekt en verantwoordelijke organisatie voor namespace referentiesysteem (ISO nr. 208.1) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$referenceSystemInfo) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.35', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.35"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f86-dc1b-11e7-d2e5-09173f13e4c5">
                  <label>Algemene beschrijving herkomst (ISO nr. 83)</label>
                  <description>Algemene beschrijving herkomst (ISO nr. 83) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$statement) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by
                    local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.36', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.36"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614f8e-dc1b-11e7-d2e5-09173f13e4c5">
                  <label>Niveau kwaliteitsbeschrijving (ISO nr.139)</label>
                  <description>Niveau kwaliteitsbeschrijving (ISO nr.139) ontbreekt</description><parent ref="EID33614594-dc1b-11e7-d418-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db/gmd:MD_Metadata let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $fileIdentifier := $i/(local:normalize-space-seq(gmd:fileIdentifier/gco:CharacterString)) let $mdLanguage :=
                    $i/((gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')) let $mdLanguage_value := $i/(local:string-seq(gmd:language/*/@codeListValue)) let $hierarchyLevel := $i/((gmd:hierarchyLevel[1]/*/@codeListValue = 'dataset' or
                    gmd:hierarchyLevel[1]/*/@codeListValue = 'series')) let $hierarchyLevel_value := $i/(local:string-seq(gmd:hierarchyLevel[1]/*/@codeListValue)) let $hierarchyLevelName := $i/(local:normalize-space-seq(gmd:hierarchyLevelName[1]/gco:CharacterString))
                    let $mdResponsibleParty_Organisation := $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $mdResponsibleParty_Role :=
                    $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or
                    gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue =
                    'author') let $mdResponsibleParty_Role_INSPIRE := $i/(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' ) let $mdResponsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $dateStamp :=
                    $i/(local:normalize-space-seq(local:string-seq(gmd:dateStamp/gco:Date))) let $metadataStandardName := $i/(translate(local:normalize-space-seq(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)) let $metadataStandardVersion :=
                    $i/(translate(local:normalize-space-seq(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)) let $metadataCharacterset := $i/(local:string-seq(gmd:characterSet/*/@codeListValue)) let $metadataCharacterset_value :=
                    $i/(gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or
                    @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or
                    @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or
                    @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $datasetTitle :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $publicationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/gmd:CI_Date/gmd:date/gco:Date)) let $creationDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/gmd:CI_Date/gmd:date/gco:Date)) let $revisionDateString :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/*[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/gmd:CI_Date/gmd:date/gco:Date)) let $publicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($publicationDateString,'-'),1,4)) &gt; 1000 ))) let $creationDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($creationDateString,'-'),1,4)) &gt; 1000
                    ))) let $revisionDate := $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($revisionDateString,'-'),1,4)) &gt; 1000 ))) let $abstract :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:abstract/gco:CharacterString)) let $status := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:status/*[@codeListValue = 'completed' or @codeListValue =
                    'historicalArchive' or @codeListValue = 'obsolete' or @codeListValue = 'onGoing' or @codeListValue = 'planned' or @codeListValue = 'required' or @codeListValue = 'underDevelopment']) let $responsibleParty_Organisation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:organisationName/gco:CharacterString)) let $responsibleParty_Role :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:role/*[@codeListValue = 'resourceProvider' or @codeListValue = 'custodian' or @codeListValue = 'owner' or @codeListValue = 'user' or @codeListValue
                    = 'distributor' or @codeListValue = 'owner' or @codeListValue = 'originator' or @codeListValue = 'pointOfContact' or @codeListValue = 'principalInvestigator' or @codeListValue = 'processor' or @codeListValue = 'publisher' or @codeListValue =
                    'author']) let $responsibleParty_Mail :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:pointOfContact[1]/gmd:CI_ResponsibleParty/gmd:contactInfo/gmd:CI_Contact/gmd:address[1]/gmd:CI_Address/gmd:electronicMailAddress[1]/gco:CharacterString)) let $keyword
                    := $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:keyword[1]/gco:CharacterString)) let $identifier :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString)) let $spatialRepresentationType :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialRepresentationType/*[@codeListValue='vector' or @codeListValue='grid' or @codeListValue='textTable' or @codeListValue='tin' or @codeListValue='stereoModel' or @codeListValue='video'])
                    let $language := $i/((gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'dut' or gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue = 'eng')) let $language_value :=
                    $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:language/*/@codeListValue)) let $characterset := $i/(local:string-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*/@codeListValue)) let
                    $characterset_value := $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue
                    ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue
                    ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or
                    @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']) let $topicCategory :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:topicCategory/*[text() = 'farming' or text() = 'biota' or text() = 'boundaries' or text() = 'climatologyMeteorologyAtmosphere' or text() = 'economy' or text() = 'elevation' or text() =
                    'environment' or text() = 'geoscientificInformation' or text() = 'health' or text() = 'imageryBaseMapsEarthCover' or text() = 'intelligenceMilitary' or text() = 'inlandWaters' or text() = 'location' or text() = 'oceans' or text() = 'planningCadastre'
                    or text() = 'society' or text() = 'structure' or text() = 'transportation' or text() = 'utilitiesCommunication']) let $useLimitation :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)) let $otherConstraint1 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)) let $otherConstraint2 :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)) let $otherConstraints :=
                    $i/(local:concat-seq($otherConstraint1,$otherConstraint2)) let $accessConstraints_value :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:accessConstraints/*[@codeListValue = 'otherRestrictions']/@codeListValue)) let $west :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:westBoundLongitude/gco:Decimal)) let $east :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:eastBoundLongitude/gco:Decimal)) let $north :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:northBoundLatitude/gco:Decimal)) let $south :=
                    $i/(local:number-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:geographicElement[1]/gmd:EX_GeographicBoundingBox/gmd:southBoundLatitude/gco:Decimal)) let $begin_beginPosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:beginPosition)) let $begin_begintimePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:begin/*/gml:timePosition)) let $begin_timePosition :=
                    $i/(local:normalize-space-seq(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:temporalElement/gmd:EX_TemporalExtent/gmd:extent/*/gml:timePosition)) let $spatialResolution :=
                    $i/(gmd:identificationInfo/gmd:MD_DataIdentification/gmd:spatialResolution) let $referenceSystemInfo := $i/(gmd:referenceSystemInfo) let $distributionFormatName :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:name/gco:CharacterString)) let $distributionFormatVersion :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:version/gco:CharacterString)) let $distributionFormatSpecification :=
                    $i/(local:normalize-space-seq(gmd:distributionInfo/gmd:MD_Distribution/gmd:distributionFormat/gmd:MD_Format/gmd:specification/gco:CharacterString)) let $dataQualityInfo := $i/(gmd:dataQualityInfo[1]/gmd:DQ_DataQuality) let $statement :=
                    $i/(local:normalize-space-seq($dataQualityInfo/gmd:lineage/gmd:LI_Lineage/gmd:statement/gco:CharacterString)) let $level := $i/(local:string-seq($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'dataset' or . = 'series' or . =
                    'featureType'])) where local:not-seq($i/$level) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file)
                    let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.37', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.37"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID33614f99-dc1b-11e7-d2e5-09173f13e4c5">
          <label>INSPIRE Online toegang tot de bron</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID33614595-dc1b-11e7-d517-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID33614f99-dc1b-11e7-d2e5-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33614f9f-dc1b-11e7-d2e5-09173f13e4c5">
                  <label>URL (ISO nr. 397)</label>
                  <description>URL (ISO nr. 397) onbreekt, voor INSPIRE is de link naar de gerelateerde services (view en download) verplicht.</description><parent ref="EID33614595-dc1b-11e7-d517-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine/gmd:CI_OnlineResource let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $all_transferOptions_URL := $i/(ancestor::gmd:MD_DigitalTransferOptions/gmd:onLine/gmd:CI_OnlineResource/gmd:linkage) where
                    local:not-seq($i/local:not-seq($conformity_Spec_Title_Exsists) or ($conformity_Spec_Title_Exsists and $all_transferOptions_URL[local:normalize-space-seq(*/text())])) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.1', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.1"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID33614fa8-dc1b-11e7-d2e5-09173f13e4c5">
          <label>Online toegang tot de bron</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID33614596-dc1b-11e7-d617-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID33614fa8-dc1b-11e7-d2e5-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33614fbb-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Protocol (ISO nr. 398) en URL (ISO nr. 397)</label>
                  <description>Protocol (ISO nr. 398) is verplicht als URL (ISO nr. 397) is ingevuld.</description><parent ref="EID33614596-dc1b-11e7-d617-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
                    let $thesaurus1 := $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $transferOptions_URL := $i/(local:normalize-space-seq(gmd:CI_OnlineResource/gmd:linkage/gmd:URL)) let $transferOptions_Protocol
                    := $i/(gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() =
                    'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS' or text() =
                    'website' or text() = 'OGC:WMTS' or text() = 'dataset' or text() = 'download' or text() = 'INSPIRE Atom']) let $transferOptions_Protocol_isOGCService := $i/(gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() =
                    'OGC:WCS']) let $transferOptions_Name := $i/(local:normalize-space-seq(gmd:CI_OnlineResource/gmd:name/gco:CharacterString)) where local:not-seq($i/local:not-seq($transferOptions_URL) or ($transferOptions_URL and $transferOptions_Protocol)) return $i
                    return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return
                    local:addMessage('TR.schtron.Schematron.schematron.err.1.3.1', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.3.1"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614fbe-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>URL (ISO nr. 397) en Protocol (ISO nr. 398)</label>
                  <description>Protocol (ISO nr. 398) alleen opnemen als URL (ISO nr. 397) is ingevuld.</description><parent ref="EID33614596-dc1b-11e7-d617-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
                    let $thesaurus1 := $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $transferOptions_URL := $i/(local:normalize-space-seq(gmd:CI_OnlineResource/gmd:linkage/gmd:URL)) let $transferOptions_Protocol
                    := $i/(gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() =
                    'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS' or text() =
                    'website' or text() = 'OGC:WMTS' or text() = 'dataset' or text() = 'download' or text() = 'INSPIRE Atom']) let $transferOptions_Protocol_isOGCService := $i/(gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() =
                    'OGC:WCS']) let $transferOptions_Name := $i/(local:normalize-space-seq(gmd:CI_OnlineResource/gmd:name/gco:CharacterString)) where local:not-seq($i/local:not-seq($transferOptions_Protocol) or ($transferOptions_Protocol and $transferOptions_URL))
                    return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return
                    local:addMessage('TR.schtron.Schematron.schematron.err.1.3.2', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.3.2"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614fcc-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Naam (ISO nr. 400)</label>
                  <description>Naam (ISO nr. 400) is verplicht als Protocol (ISO nr. 398) de waarde OGC:WMS, OGC:WFS of OGC:WCS heeft.</description><parent ref="EID33614596-dc1b-11e7-d617-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
                    let $thesaurus1 := $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $transferOptions_URL := $i/(local:normalize-space-seq(gmd:CI_OnlineResource/gmd:linkage/gmd:URL)) let $transferOptions_Protocol
                    := $i/(gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() =
                    'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS' or text() =
                    'website' or text() = 'OGC:WMTS' or text() = 'dataset' or text() = 'download' or text() = 'INSPIRE Atom']) let $transferOptions_Protocol_isOGCService := $i/(gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() =
                    'OGC:WCS']) let $transferOptions_Name := $i/(local:normalize-space-seq(gmd:CI_OnlineResource/gmd:name/gco:CharacterString)) where local:not-seq($i/local:not-seq($transferOptions_Protocol_isOGCService) or ($transferOptions_Protocol_isOGCService and
                    $transferOptions_Name)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return
                    local:addMessage('TR.schtron.Schematron.schematron.err.1.3.3', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.3.3"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID33614fd7-dc1b-11e7-d2e6-09173f13e4c5">
          <label>Conformiteit specificaties</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID33614597-dc1b-11e7-d749-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID33614fd7-dc1b-11e7-d2e6-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33614ff9-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Verklaring (ISO nr. 131) en Specificatie (ISO nr. 360)</label>
                  <description>Verklaring (ISO nr. 131) is verplicht als een specificatie is opgegeven.</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_SpecTitle) or ($conformity_SpecTitle and $conformity_Explanation)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)),
                    for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.1', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.1"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614ffc-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Datum (ISO nr. 394) en Specificatie (ISO nr. 360)</label>
                  <description>Datum (ISO nr. 394) is verplicht als een specificatie is opgegeven.</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_SpecTitle and local:not-seq($conformity_Date))) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.2', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.2"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33614fff-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Datumtype (ISO nr. 395) en Specificatie (ISO nr. 360)</label>
                  <description>Datumtype (ISO nr. 395) is verplicht als een specificatie is opgegeven.</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_SpecTitle and local:not-seq($conformity_Datetype))) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.3', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.3"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33615002-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Conformiteit (ISO nr. 132) en Specificatie (ISO nr. 360)</label>
                  <description>Conformiteit (ISO nr. 132) is verplicht als een specificatie is opgegeven.</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_SpecTitle) or ($conformity_SpecTitle and $conformity_Pass)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for
                    $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.4', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.4"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33615007-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Verklaring (ISO nr. 131)</label>
                  <description>Verklaring (ISO nr. 131) hoort leeg als geen specificatie is opgegeven</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_Explanation) or ($conformity_Explanation and $conformity_SpecTitle)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors',
                    count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.5', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.5"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID3361500b-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Datum (ISO nr. 394)</label>
                  <description>Datum (ISO nr. 394) hoort leeg als geen specificatie is opgegeven..</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_Date and local:not-seq($conformity_SpecTitle))) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.6', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.6"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID3361500e-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Datumtype (ISO nr. 395)</label>
                  <description>Datumtype (ISO nr. 395) hoort leeg als geen specificatie is opgegeven..</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_Datetype and local:not-seq($conformity_SpecTitle))) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.7', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.7"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID33615011-dc1b-11e7-d2e6-09173f13e4c5">
                  <label>Conformiteit (ISO nr. 132</label>
                  <description>Conformiteit (ISO nr. 132) hoort leeg als geen specificatie is opgegeven..</description><parent ref="EID33614597-dc1b-11e7-d749-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $conformity_SpecTitle := $i/(local:normalize-space-seq(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Explanation := $i/(local:normalize-space-seq(gmd:explanation/gco:CharacterString)) let $conformity_DateString := $i/(local:string-seq(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)) let $conformity_Date :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($conformity_DateString,'-'),1,4)) &gt; 1000 ))) let $conformity_Datetype := $i/(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or
                    @codeListValue='publication' or @codeListValue='revision']) let $conformity_SpecCreationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date) let
                    $conformity_SpecPublicationDate := $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date) let $conformity_SpecRevisionDate :=
                    $i/(gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date) let $conformity_Pass := $i/(local:normalize-space-seq(gmd:pass/gco:Boolean)) where
                    local:not-seq($i/local:not-seq($conformity_Pass) or ($conformity_Pass and $conformity_SpecTitle)) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.8', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.8"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID33615031-dc1b-11e7-d2e7-09173f13e4c5">
          <label>Resolutie en toepassingschaal</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID33614598-dc1b-11e7-d812-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID33615031-dc1b-11e7-d2e7-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33615037-dc1b-11e7-d2e7-09173f13e4c5">
                  <label>Toepassingsschaal (ISO nr. 57) of Resolutie (ISO nr. 61)</label>
                  <description>Toepassingsschaal (ISO nr. 57) of Resolutie (ISO nr. 61) ontbreekt, vul een van deze in</description><parent ref="EID33614598-dc1b-11e7-d812-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:identificationInfo/gmd:MD_DataIdentification let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $distance := $i/(gmd:spatialResolution/gmd:MD_Resolution/gmd:distance/*/text()) let $denominator :=
                    $i/(gmd:spatialResolution/gmd:MD_Resolution/gmd:equivalentScale/gmd:MD_RepresentativeFraction/gmd:denominator/*/text()) where local:not-seq($i/$denominator or $distance ) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.1', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.1"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID3361503a-dc1b-11e7-d2e7-09173f13e4c5">
                  <label>Toepassingsschaal (ISO nr. 57) en Resolutie (ISO nr. 61)</label>
                  <description>Toepassingsschaal (ISO nr. 57) of Resolutie (ISO nr. 61) invullen, niet beide</description><parent ref="EID33614598-dc1b-11e7-d812-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:identificationInfo/gmd:MD_DataIdentification let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $distance := $i/(gmd:spatialResolution/gmd:MD_Resolution/gmd:distance/*/text()) let $denominator :=
                    $i/(gmd:spatialResolution/gmd:MD_Resolution/gmd:equivalentScale/gmd:MD_RepresentativeFraction/gmd:denominator/*/text()) where local:not-seq($i/local:not-seq($denominator and $distance) ) return $i return (if ($filesWithErrors) then 'FAILED' else
                    'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.2', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.2"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID33615040-dc1b-11e7-d2e7-09173f13e4c5">
          <label>Toepassingsschaal</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID33614599-dc1b-11e7-d918-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID33615040-dc1b-11e7-d2e7-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33615044-dc1b-11e7-d2e7-09173f13e4c5">
                  <label>Toepassingsschaal (ISO nr. 57)</label>
                  <description>Toepassingsschaal (ISO nr. 57) heeft een verkeerde waarde, toepassingsschaal is niet numeriek of is leeg.</description><parent ref="EID33614599-dc1b-11e7-d918-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:spatialResolution/gmd:MD_Resolution/gmd:equivalentScale/gmd:MD_RepresentativeFraction/gmd:denominator/gco:Integer let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
                    let $thesaurus1 := $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $denominator := $i/(text()) where local:not-seq($i/local:not-seq(local:string-seq(local:number-seq($denominator))='NaN')) return
                    $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return
                    local:addMessage('TR.schtron.Schematron.schematron.err.1.6.1', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.6.1"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3361504f-dc1b-11e7-d2e7-09173f13e4c5">
          <label>Resolutie</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID3361459a-dc1b-11e7-d101-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID3361504f-dc1b-11e7-d2e7-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33615055-dc1b-11e7-d2e7-09173f13e4c5">
                  <label>Resolutie (ISO nr. 61)</label>
                  <description>Resolutie (ISO nr. 61) heeft een verkeerde waarde, resolutie is niet numeriek of is leeg</description><parent ref="EID3361459a-dc1b-11e7-d101-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:spatialResolution/gmd:MD_Resolution/gmd:distance/gco:Distance let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $distance := $i/(text()) let $distance_UOM := $i/(@uom= 'meters' ) where
                    local:not-seq($i/local:not-seq(local:string-seq(local:number-seq($distance))='NaN')) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in
                    $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.7.1', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.7.1"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID3361505d-dc1b-11e7-d2e7-09173f13e4c5">
                  <label>Resolutie (ISO nr. 61) meeteenheid</label>
                  <description>Resolutie (ISO nr. 61) heeft geen of een verkeerde waarde voor Unit of measure, de waarde moet meters zijn.</description><parent ref="EID3361459a-dc1b-11e7-d101-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:spatialResolution/gmd:MD_Resolution/gmd:distance/gco:Distance let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $distance := $i/(text()) let $distance_UOM := $i/(@uom= 'meters' ) where local:not-seq($i/$distance_UOM) return $i return (if
                    ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return
                    local:addMessage('TR.schtron.Schematron.schematron.err.1.7.2', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.7.2"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3361506a-dc1b-11e7-d2e7-09173f13e4c5">
          <label>Referentiesysteem</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID3361459b-dc1b-11e7-d112-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID3361506a-dc1b-11e7-d2e7-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID33615072-dc1b-11e7-d2e7-09173f13e4c5">
                  <label>Code referentiesysteem (ISO nr. 207)</label>
                  <description>Code referentiesysteem (ISO nr. 207) ontbreekt</description><parent ref="EID3361459b-dc1b-11e7-d112-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:referenceSystemInfo/gmd:MD_ReferenceSystem let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $referenceSystemInfo_Code :=
                    $i/(local:normalize-space-seq(gmd:referenceSystemIdentifier/gmd:RS_Identifier/gmd:code/gco:CharacterString)) let $referenceSystemInfo_Organisation :=
                    $i/(local:normalize-space-seq(gmd:referenceSystemIdentifier/gmd:RS_Identifier/gmd:codeSpace/gco:CharacterString)) where local:not-seq($i/$referenceSystemInfo_Code) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.8.1', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.8.1"/></etf:translationTemplates>
                </TestAssertion>
                <TestAssertion id="EID3361507b-dc1b-11e7-d2e7-09173f13e4c5">
                  <label>Verantwoordelijke organisatie voor namespace referentiesysteem (ISO nr. 208.1)</label>
                  <description>Verantwoordelijke organisatie voor namespace referentiesysteem (ISO nr. 208.1) ontbreekt</description><parent ref="EID3361459b-dc1b-11e7-d112-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:referenceSystemInfo/gmd:MD_ReferenceSystem let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $referenceSystemInfo_Code :=
                    $i/(local:normalize-space-seq(gmd:referenceSystemIdentifier/gmd:RS_Identifier/gmd:code/gco:CharacterString)) let $referenceSystemInfo_Organisation :=
                    $i/(local:normalize-space-seq(gmd:referenceSystemIdentifier/gmd:RS_Identifier/gmd:codeSpace/gco:CharacterString)) where local:not-seq($i/$referenceSystemInfo_Organisation) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED',
                    local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.8.2', map { 'filename':
                    local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.8.2"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID33615086-dc1b-11e7-d2e8-09173f13e4c5">
          <label>Thesaurus</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID3361459c-dc1b-11e7-d121-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID33615086-dc1b-11e7-d2e8-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID336150a6-dc1b-11e7-d2e8-09173f13e4c5">
                  <label>thesaurus datum (ISO nr.394) en datumtype (ISO nr. 395)</label>
                  <description>Een thesaurus datum (ISO nr.394) en datumtype (ISO nr. 395) is verplicht als Thesaurus title (ISO nr. 360) is opgegeven. Datum formaat moet YYYY-MM-DD zijn.</description><parent ref="EID3361459c-dc1b-11e7-d121-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase :=
                    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $all_thesaurus_Titles :=
                    $i/(ancestor::gmd:MD_DataIdentification/gmd:descriptiveKeywords/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title) let $thesaurus_Title := $i/(local:normalize-space-seq(gmd:title/gco:CharacterString)) let $thesaurus_publicationDateSring :=
                    $i/(local:string-seq(gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)) let $thesaurus_creationDateString :=
                    $i/(local:string-seq(gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)) let $thesaurus_revisionDateString :=
                    $i/(local:string-seq(gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)) let $thesaurus_PublicationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($thesaurus_publicationDateSring,'-'),1,4)) &gt; 1000 ))) let $thesaurus_CreationDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($thesaurus_creationDateString,'-'),1,4)) &gt; 1000 ))) let $thesaurus_RevisionDate :=
                    $i/(((local:number-seq(local:substring-seq(local:substring-before-seq($thesaurus_revisionDateString,'-'),1,4)) &gt; 1000 ))) where local:not-seq($i/local:not-seq($thesaurus_Title and local:not-seq($thesaurus_CreationDate or $thesaurus_PublicationDate
                    or $thesaurus_RevisionDate))) return $i return (if ($filesWithErrors) then 'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file
                    return local:addMessage('TR.schtron.Schematron.schematron.err.1.9.1', map { 'filename': local:filename($root) }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.9.1"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID336150aa-dc1b-11e7-d2e8-09173f13e4c5">
          <label>INSPIRE Thesaurus trefwoorden</label>
          <description>...</description><parent ref="EID3361466c-dc1b-11e7-d2e2-09173f13e4c5"/>
          <testSteps>
            <TestStep id="EID3361459d-dc1b-11e7-d131-09173f13e4c5">
              <label>IGNORE</label>
              <description>IGNORE</description><parent ref="EID336150aa-dc1b-11e7-d2e8-09173f13e4c5"/>
              <statementForExecution>not applicable</statementForExecution><testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID336150b0-dc1b-11e7-d2e8-09173f13e4c5">
                  <label>INSPIRE Trefwoorden (ISO nr. 53)</label>
                  <description>Deze keywords moeten uit GEMET- INSPIRE themes thesaurus komen. gevonden keywords:</description><parent ref="EID3361459d-dc1b-11e7-d131-09173f13e4c5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>

                    let $filesWithErrors := for $i in $db//gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords [normalize-space(gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title) = 'GEMET - INSPIRE themes, version 1.0']
                    /gmd:MD_Keywords/gmd:keyword let $lowercase := 'abcdefghijklmnopqrstuvwxyz' let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' let $thesaurus1 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus2 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus3 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus4 :=
                    $db//(local:normalize-space-seq(/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)) let $thesaurus :=
                    $db//(local:concat-seq(local:string-seq($thesaurus1),local:string-seq($thesaurus2),local:string-seq($thesaurus3),local:string-seq($thesaurus4))) let $thesaurus_INSPIRE_Exsists := $db//(local:contains-seq($thesaurus,'GEMET - INSPIRE themes, version
                    1.0')) let $conformity_Spec_Title1 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title2 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title3 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title4 :=
                    $db//(local:normalize-space-seq(//gmd:MD_Metadata/gmd:dataQualityInfo[1]/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)) let
                    $conformity_Spec_Title_All := $db//(local:concat-seq(local:string-seq($conformity_Spec_Title1),local:string-seq($conformity_Spec_Title2),local:string-seq($conformity_Spec_Title3),local:string-seq($conformity_Spec_Title4))) let
                    $conformity_Spec_Title_Exsists := $db//(local:contains-seq($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de
                    interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')) let $quote := $i/("'") where local:not-seq($i/((local:normalize-space-seq(.)='Administratieve eenheden' ) or
                    (local:normalize-space-seq(.)='Adressen' ) or (local:normalize-space-seq(.)='Atmosferische omstandigheden' ) or (local:normalize-space-seq(.)='Beschermde gebieden' ) or (local:normalize-space-seq(.)='Biogeografische gebieden' ) or
                    (local:normalize-space-seq(.)='Bodem') or (local:normalize-space-seq(.)='Bodemgebruik') or (local:normalize-space-seq(.)='Energiebronnen') or (local:normalize-space-seq(.)='Faciliteiten voor landbouw en aquacultuur') or
                    (local:normalize-space-seq(.)='Faciliteiten voor productie en industrie') or (local:normalize-space-seq(.)=local:concat-seq('Gebieden met natuurrisico',$quote,'s')) or (local:normalize-space-seq(.)='Gebiedsbeheer, gebieden waar beperkingen gelden,
                    gereguleerde gebieden en rapportage-eenheden') or (local:normalize-space-seq(.)='Gebouwen') or (local:normalize-space-seq(.)='Geografisch rastersysteem') or (local:normalize-space-seq(.)='Geografische namen') or
                    (local:normalize-space-seq(.)='Geologie') or (local:normalize-space-seq(.)='Habitats en biotopen') or (local:normalize-space-seq(.)='Hoogte') or (local:normalize-space-seq(.)='Hydrografie') or (local:normalize-space-seq(.)='Kadastrale percelen') or
                    (local:normalize-space-seq(.)='Landgebruik') or (local:normalize-space-seq(.)='Menselijke gezondheid en veiligheid') or (local:normalize-space-seq(.)='Meteorologische geografische kenmerken') or
                    (local:normalize-space-seq(.)='Milieubewakingsvoorzieningen') or (local:normalize-space-seq(.)='Minerale bronnen') or (local:normalize-space-seq(.)='Nutsdiensten en overheidsdiensten') or (local:normalize-space-seq(.)='Oceanografische geografische
                    kenmerken') or (local:normalize-space-seq(.)='Orthobeeldvorming') or (local:normalize-space-seq(.)='Spreiding van de bevolking — demografie') or (local:normalize-space-seq(.)='Spreiding van soorten') or (local:normalize-space-seq(.)='Statistische
                    eenheden') or (local:normalize-space-seq(.)='Systemen voor verwijzing door middel van coördinaten') or (local:normalize-space-seq(.)='Vervoersnetwerken') or (local:normalize-space-seq(.)='Zeegebieden'))) return $i return (if ($filesWithErrors) then
                    'FAILED' else 'PASSED', local:error-statistics('TR.filesWithErrors', count($filesWithErrors)), for $file in $filesWithErrors order by local:filename($file) let $root := $file return local:addMessage('TR.schtron.Schematron.schematron.err.1.10.1', map
                    { 'filename': local:filename($root) , '.': . }))
                  </expression><testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <etf:translationTemplates><etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.10.1"/></etf:translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
  </testModules>
</etf:ExecutableTestSuite>
