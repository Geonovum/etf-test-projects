<?xml version="1.0" encoding="UTF-8"?>
<etf:ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:etf="http://www.interactive-instruments.de/etf/2.0"
                         xmlns:ii="http://www.interactive-instruments.de"
                         id="EIDf21f2832-0a5b-11e8-d212-09173f13e4c5"
                         xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 http://resources.etf-validator.net/schema/v2/service/service.xsd">
   <itemHash>bQ==</itemHash>
   <remoteResource>https://github.com/interactive-instruments/etf-ets-repository</remoteResource>
   <localPath>/auto</localPath>
   <label>Schematron tests voor metadata Nederlands profiel op ISO 19119 v12 INSPIRE 2016</label>
   <description>Schematron tests voor metadata Nederlands profiel op ISO 19119 v12 INSPIRE 2016</description>
   <reference>../../generic/ets-generic-bsxets.xq</reference>
   <version>2.0.0</version>
   <author>Geonovum</author>
   <creationDate>2017-09-12T20:50:53.937+02:00</creationDate>
   <lastEditor>Geonovum</lastEditor>
   <lastUpdateDate>2018-12-14T10:50:53.937+02:00</lastUpdateDate>
   <tags>
      <tag ref="EID293bc2ff-307c-428e-9538-35f4a06a8985"/>
   </tags>
   <testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
   <translationTemplateBundle ref="EID880b027c-181d-4a96-a801-07091528f9bf"/>
   <ParameterList name="ETF Standard Parameters for XML test objects">
      <parameter name="files_to_test" required="true">
         <defaultValue>.*</defaultValue>
         <description ref="TR.filesToTest"/>
         <allowedValues>.*</allowedValues>
         <type>string</type>
      </parameter>
      <parameter name="tests_to_execute" required="false">
         <defaultValue>.*</defaultValue>
         <description ref="TR.testsToExecute"/>
         <allowedValues>.*</allowedValues>
         <type>string</type>
      </parameter>
      <parameter name="xml_namespaces" required="false">
         <defaultValue>declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; </defaultValue>
         <description ref="TR.xmlNamespaces"/>
         <allowedValues>.*</allowedValues>
         <type>string</type>
      </parameter>
   </ParameterList>
   <supportedTestObjectTypes>
      <testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e"/>
   </supportedTestObjectTypes>
   <testModules>
      <TestModule id="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5">
         <label>Validatie tegen het Nederlands metadata profiel op ISO 19119 voor services v 1.2.1</label>
         <description>...</description>
         <parent ref="EIDf21f2832-0a5b-11e8-d212-09173f13e4c5"/>
         <testCases>
            <TestCase id="EIDd9d4ac01-25e2-11e8-d2e7-09173f13e4c5">
               <label>Algemene metadata regels</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4ac01-25e2-11e8-d2e7-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4ac05-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Schema locatie service metadata</label>
                           <description>Het ISO 19139 XML document mist een verplichte schema locatie. De schema locatie met namespace http://www.isotc211.org/2005/gmd http://schemas.opengis.net/csw/2.0.2/profiles/apiso/1.0.0/apiso.xsd moet aanwezig zijn. Zie https://www.pdok.nl/nl/ngr/faq#schemalocatie</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(@xsi:schemaLocation), 'http://www.isotc211.org/2005/gmd http://schemas.opengis.net/csw/2.0.2/profiles/apiso/1.0.0/apiso.xsd')", map { '': $nodeInFile}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.1', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b34b-25e2-11e8-d2e1-09173f13e4c5">
                           <label>Metadata ID (ISO nr. 2)</label>
                           <description>Metadata ID (ISO nr. 2) ontbreekt of heeft een verkeerde waarde.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $fileIdentifier external; $fileIdentifier", map { '': $nodeInFile, 'fileIdentifier': $fileIdentifier}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.2', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.2"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b354-25e2-11e8-d2e1-09173f13e4c5">
                           <label>De metadata taal (ISO nr. 3)</label>
                           <description>De metadata taal (ISO nr. 3) ontbreekt of heeft een verkeerde waarde. Dit hoort een waarde en verwijzing naar de codelijst te zijn.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $mdLanguage external; $mdLanguage", map { '': $nodeInFile, 'mdLanguage': $mdLanguage}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.3', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.3"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b35a-25e2-11e8-d2e1-09173f13e4c5">
                           <label>Resource type (ISO nr. 6)</label>
                           <description>Resource type (ISO nr. 6) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $hierarchyLevel external; $hierarchyLevel", map { '': $nodeInFile, 'hierarchyLevel': $hierarchyLevel}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.4', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.4"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b360-25e2-11e8-d2e1-09173f13e4c5">
                           <label>Naam organisatie metadata (ISO nr. 376)</label>
                           <description>Naam organisatie metadata (ISO nr. 376) ontbreekt</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $mdResponsibleParty_Organisation external; $mdResponsibleParty_Organisation", map { '': $nodeInFile, 'mdResponsibleParty_Organisation': $mdResponsibleParty_Organisation}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.5', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.5"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b369-25e2-11e8-d2e1-09173f13e4c5">
                           <label>Rol organisatie metadata (ISO nr. 379)</label>
                           <description>Rol organisatie metadata (ISO nr. 379) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $mdResponsibleParty_Role external; $mdResponsibleParty_Role", map { '': $nodeInFile, 'mdResponsibleParty_Role': $mdResponsibleParty_Role}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.6', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.6"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b373-25e2-11e8-d2e1-09173f13e4c5">
                           <label>INSPIRE Rol organisatie metadata (ISO nr. 379)</label>
                           <description>Rol organisatie metadata (ISO nr. 379) ontbreekt of heeft een verkeerde waarde, deze dient voor INSPIRE contactpunt te zijn</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_Interoperability_Exsists external; declare variable $mdResponsibleParty_Role_INSPIRE external; not($conformity_Spec_Title_Interoperability_Exsists) or ($conformity_Spec_Title_Interoperability_Exsists and $mdResponsibleParty_Role_INSPIRE)", map { '': $nodeInFile, 'conformity_Spec_Title_Interoperability_Exsists': $conformity_Spec_Title_Interoperability_Exsists, 'mdResponsibleParty_Role_INSPIRE': $mdResponsibleParty_Role_INSPIRE}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.7', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.7"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b379-25e2-11e8-d2e1-09173f13e4c5">
                           <label>E-mail organisatie metadata (ISO nr. 386)</label>
                           <description>E-mail organisatie metadata (ISO nr. 386) ontbreekt</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $mdResponsibleParty_Mail external; $mdResponsibleParty_Mail", map { '': $nodeInFile, 'mdResponsibleParty_Mail': $mdResponsibleParty_Mail}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.8', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.8"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b381-25e2-11e8-d2e1-09173f13e4c5">
                           <label>Metadata datum (ISO nr. 9)</label>
                           <description>Metadata datum (ISO nr. 9) ontbreekt of heeft het verkeerde formaat (YYYY-MM-DD)</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dateStamp external; ((number(substring(substring-before($dateStamp,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'dateStamp': $dateStamp}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.9', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.9"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b389-25e2-11e8-d2e2-09173f13e4c5">
                           <label>Metadatastandaard naam (ISO nr. 10)</label>
                           <description>Metadatastandaard naam (ISO nr. 10) is niet correct ingevuld, Metadatastandaard naam dient de waarde 'ISO 19119' te hebben</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $metadataStandardName external; contains($metadataStandardName, 'ISO 19119')", map { '': $nodeInFile, 'metadataStandardName': $metadataStandardName}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.10', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.10"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b392-25e2-11e8-d2e2-09173f13e4c5">
                           <label>Versie metadatastandaard  (ISO nr. 11)</label>
                           <description>Versie metadatastandaard (ISO nr. 11) is niet correct ingevuld, Metadatastandaard versie dient de waarde 'Nederlands metadata profiel op ISO 19119 voor services 1.2' te bevatten</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $metadataStandardVersion external; contains($metadataStandardVersion, 'PROFIEL OP ISO 19119')", map { '': $nodeInFile, 'metadataStandardVersion': $metadataStandardVersion}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.11', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.11"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b39a-25e2-11e8-d2e2-09173f13e4c5">
                           <label>Metadata karakterset (ISO nr. 4)</label>
                           <description>Metadata karakterset (ISO nr. 4) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $metadataCharacterset external; declare variable $metadataCharacterset_value external; not($metadataCharacterset) or $metadataCharacterset_value", map { '': $nodeInFile, 'metadataCharacterset': $metadataCharacterset, 'metadataCharacterset_value': $metadataCharacterset_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.12', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.12"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b3d6-25e2-11e8-d2e2-09173f13e4c5">
                           <label>INSPIRE Specificaties (ISO nr. 360)</label>
                           <description>Specificatie (ISO nr. 360) mist de verplichte waarden voor INSPIRE services, Als dit geen INSPIRE service is verwijder dan de thesaurus GEMET -INSPIRE themes, voor INSPIRE service in specificatie opnemen; VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus_INSPIRE_Exsists external; declare variable $conformity_Spec_Title_Interoperability_Exsists external; not($thesaurus_INSPIRE_Exsists) or ($thesaurus_INSPIRE_Exsists and $conformity_Spec_Title_Interoperability_Exsists)", map { '': $nodeInFile, 'thesaurus_INSPIRE_Exsists': $thesaurus_INSPIRE_Exsists, 'conformity_Spec_Title_Interoperability_Exsists': $conformity_Spec_Title_Interoperability_Exsists}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.13', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.13"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b416-25e2-11e8-d2e3-09173f13e4c5">
                           <label>Service titel (ISO nr. 360)</label>
                           <description>Service titel (ISO nr. 360) ontbreekt</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $serviceTitle external; $serviceTitle", map { '': $nodeInFile, 'serviceTitle': $serviceTitle}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.14', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.14"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b41e-25e2-11e8-d2e3-09173f13e4c5">
                           <label>Datum van de bron (ISO nr. 394)</label>
                           <description>Datum van de bron (ISO nr. 394) ontbreekt of heeft het verkeerde formaat (YYYY-MM-DD)</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDate external; declare variable $creationDate external; declare variable $revisionDate external; declare variable $begin external; ($publicationDate or $creationDate or $revisionDate or $begin)", map { '': $nodeInFile, 'publicationDate': $publicationDate, 'creationDate': $creationDate, 'revisionDate': $revisionDate, 'begin': $begin}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.15', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.15"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b425-25e2-11e8-d2e3-09173f13e4c5">
                           <label>Samenvatting (ISO nr. 25)</label>
                           <description>Samenvatting (ISO nr. 25) ontbreekt</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $abstract external; $abstract", map { '': $nodeInFile, 'abstract': $abstract}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.16', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.16"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b42d-25e2-11e8-d2e3-09173f13e4c5">
                           <label>Verantwoordelijke organisatie bron (ISO nr. 376)</label>
                           <description>Verantwoordelijke organisatie bron (ISO nr. 376)) ontbreekt</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $responsibleParty_Organisation external; $responsibleParty_Organisation", map { '': $nodeInFile, 'responsibleParty_Organisation': $responsibleParty_Organisation}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.17', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.17"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b435-25e2-11e8-d2e3-09173f13e4c5">
                           <label>Rol verantwoordelijke organisatie bron (ISO nr. 379)</label>
                           <description>Rol verantwoordelijke organisatie bron (ISO nr. 379) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $responsibleParty_Role external; $responsibleParty_Role", map { '': $nodeInFile, 'responsibleParty_Role': $responsibleParty_Role}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.18', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.18"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b43c-25e2-11e8-d2e3-09173f13e4c5">
                           <label>E-mail verantwoordelijke organisatie bron (ISO nr. 386)</label>
                           <description>E-mail verantwoordelijke organisatie bron (ISO nr. 386) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $responsibleParty_Mail external; $responsibleParty_Mail", map { '': $nodeInFile, 'responsibleParty_Mail': $responsibleParty_Mail}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.19', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.19"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b444-25e2-11e8-d2e3-09173f13e4c5">
                           <label>Trefwoorden (ISO nr. 53)</label>
                           <description>Trefwoorden (ISO nr. 53) ontbreekt of heeft de verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $keyword external; $keyword", map { '': $nodeInFile, 'keyword': $keyword}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.20', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.20"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b44c-25e2-11e8-d2e3-09173f13e4c5">
                           <label>Rol organisatie SDS(ISO nr. 379)</label>
                           <description>Rol organisatie (ISO nr. 379) ontbreekt of heeft een verkeerde waarde, voor INSPIRE interoperable SDS in ieder geval de rol beheerder opnemen</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Interop external; declare variable $responsibleParty_Role external; not($conformity_Spec_Title_SDS_Interop) or ($conformity_Spec_Title_SDS_Interop and contains($responsibleParty_Role, 'custodian'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Interop': $conformity_Spec_Title_SDS_Interop, 'responsibleParty_Role': $responsibleParty_Role}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.21', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.21"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b450-25e2-11e8-d2e4-09173f13e4c5">
                           <label>Rol organisatie SDS harmo(ISO nr. 379)</label>
                           <description>Rol organisatie (ISO nr. 379) ontbreekt of heeft een verkeerde waarde, voor INSPIRE harmonised SDS in ieder geval de rol beheerder opnemen</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Harmo external; declare variable $responsibleParty_Role external; not($conformity_Spec_Title_SDS_Harmo) or ($conformity_Spec_Title_SDS_Harmo and contains($responsibleParty_Role, 'custodian'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Harmo': $conformity_Spec_Title_SDS_Harmo, 'responsibleParty_Role': $responsibleParty_Role}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.22', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.22"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b45c-25e2-11e8-d2e4-09173f13e4c5">
                           <label>INSPIRE Trefwoorden (ISO nr. 53)</label>
                           <description>Trefwoord (ISO nr. 53) voor INSPIRE servicetype ontbreekt of heeft de verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $keyword_INSPIRE external; $keyword_INSPIRE", map { '': $nodeInFile, 'keyword_INSPIRE': $keyword_INSPIRE}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.23', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.23"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b462-25e2-11e8-d2e4-09173f13e4c5">
                           <label>Gebruiksbeperkingen (ISO nr. 68)</label>
                           <description>Gebruiksbeperkingen (ISO nr. 68) ontbreken</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $useLimitation external; $useLimitation", map { '': $nodeInFile, 'useLimitation': $useLimitation}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.24', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.24"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b46c-25e2-11e8-d2e4-09173f13e4c5">
                           <label>(Juridische) toegangsrestricties (ISO nr. 70) en Overige beperkingen (ISO nr 72)</label>
                           <description>(Juridische) toegangsrestricties (ISO nr. 70) en Overige beperkingen (ISO nr 72) dient ingevuld te zijn</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraints external; declare variable $accessConstraints_value external; $accessConstraints_value and $otherConstraints", map { '': $nodeInFile, 'otherConstraints': $otherConstraints, 'accessConstraints_value': $accessConstraints_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.25', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.25"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b46f-25e2-11e8-d2e4-09173f13e4c5">
                           <label>(Juridische) toegangsrestricties (ISO nr. 70)</label>
                           <description>(Juridische) toegangsrestricties (ISO nr. 70) dient de waarde 'anders' te hebben in combinatie met een publiek domein, CC0 of geogedeelt licentie bij overige beperkingen (ISO nr. 72)</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $accessConstraints_value external; $accessConstraints_value", map { '': $nodeInFile, 'accessConstraints_value': $accessConstraints_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.26', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.26"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b472-25e2-11e8-d2e4-09173f13e4c5">
                           <label>Overige beperkingen (ISO nr 72) en (Juridische) toegangsrestricties (ISO nr. 70)</label>
                           <description>Het element overige beperkingen (ISO nr. 72) dient een URL naar de publiek domein, CC0 of geogedeelt licentie te hebben als (juridische) toegangsrestricties (ISO nr. 70) de waarde 'anders' heeft</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraints external; declare variable $accessConstraints_value external; not($accessConstraints_value = 'otherRestrictions') or ($accessConstraints_value = 'otherRestrictions' and $otherConstraints)", map { '': $nodeInFile, 'otherConstraints': $otherConstraints, 'accessConstraints_value': $accessConstraints_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.27', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.27"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b476-25e2-11e8-d2e4-09173f13e4c5">
                           <label>Overige beperkingen (ISO nr 72)</label>
                           <description>Het element overige beperkingen (ISO nr. 72) dient twee maal binnen dezelfde toegangsrestricties voor te komen; één met de beschrijving en één met de URL naar de publiek domein, CC0 of geogedeelt licentie,als (juridische) toegangsrestricties (ISO nr. 70) de waarde 'anders' heeft</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; declare variable $accessConstraints_value external; not($accessConstraints_value = 'otherRestrictions') or ($accessConstraints_value = 'otherRestrictions' and $otherConstraint1 and $otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2, 'accessConstraints_value': $accessConstraints_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.28', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.28"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4b8-25e2-11e8-d2e5-09173f13e4c5">
                           <label>DCP waarde</label>
                           <description>DCP ontbreekt of heeft de verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dcp_value external; $dcp_value = 'WebServices'", map { '': $nodeInFile, 'dcp_value': $dcp_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.29', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.29"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4c1-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Operatie naam</label>
                           <description>Operatie naam ontbreekt of heeft de verkeerde waarde.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $operationName external; $operationName", map { '': $nodeInFile, 'operationName': $operationName}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.30', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.30"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4cb-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Connect point linkage</label>
                           <description>Connect point linkage ontbreekt of heeft de verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; $connectPointString", map { '': $nodeInFile, 'connectPointString': $connectPointString}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.31', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.31"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4d4-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Resource locator en connectpoint Linkage 1</label>
                           <description>Resource locator heeft niet dezelfde waarde als connectpoint Linkage</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; declare variable $resourceLocatorString external; declare variable $connectPoint external; declare variable $resourceLocator external; not((not($connectPoint) and not($resourceLocator)) and not($resourceLocatorString=$connectPointString))", map { '': $nodeInFile, 'connectPointString': $connectPointString, 'resourceLocatorString': $resourceLocatorString, 'connectPoint': $connectPoint, 'resourceLocator': $resourceLocator}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.32', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.32"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4d7-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Resource locator en connectpoint Linkage 2</label>
                           <description>Resource locator heeft niet dezelfde waarde als connectpoint Linkage</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; declare variable $connectPoint external; declare variable $resourceLocator external; not(($connectPoint and not($resourceLocator)) and not($resourceLocatorString=$connectPoint))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString, 'connectPoint': $connectPoint, 'resourceLocator': $resourceLocator}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.33', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.33"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4da-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Resource locator en connectpoint Linkage 3</label>
                           <description>Resource locator heeft niet dezelfde waarde als connectpoint Linkage</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; declare variable $connectPoint external; declare variable $resourceLocator external; not(($resourceLocator and not($connectPoint)) and not($resourceLocator=$connectPointString))", map { '': $nodeInFile, 'connectPointString': $connectPointString, 'connectPoint': $connectPoint, 'resourceLocator': $resourceLocator}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.34', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.34"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4de-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Resource locator en connectpoint Linkage 4</label>
                           <description>Resource locator heeft niet dezelfde waarde als connectpoint Linkage</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPoint external; declare variable $resourceLocator external; not(($connectPoint and $resourceLocator) and not($resourceLocator=$connectPoint))", map { '': $nodeInFile, 'connectPoint': $connectPoint, 'resourceLocator': $resourceLocator}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.35', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.35"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4e1-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Resource locator</label>
                           <description>Resource locator is verplicht als er een link is naar de service</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; $resourceLocatorString", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.36', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.36"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4eb-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Protocol (ISO nr. 398)</label>
                           <description>Protocol (ISO nr. 398) is verplicht als Resource locator is ingevuld.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; declare variable $transferOptions_Protocol external; not($resourceLocatorString) or ($resourceLocatorString and $transferOptions_Protocol)", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString, 'transferOptions_Protocol': $transferOptions_Protocol}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.37', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.37"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4f6-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Service type</label>
                           <description>Service type ontbreekt of heeft de verkeerde waarde, gebruik view of download voor services die aan betreffende specificaties van INSPIRE voldoen, in andere gevallen de waarde other.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $serviceType external; $serviceType", map { '': $nodeInFile, 'serviceType': $serviceType}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.38', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.38"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b4ff-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Service type en network specificatie</label>
                           <description>Service type ontbreekt of heeft de verkeerde waarde, gebruik view of download voor services die aan betreffende specificaties van INSPIRE voldoen.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_Network_Exsists external; declare variable $serviceType_Networkservice external; not($conformity_Spec_Title_Network_Exsists) or ($conformity_Spec_Title_Network_Exsists and $serviceType_Networkservice)", map { '': $nodeInFile, 'conformity_Spec_Title_Network_Exsists': $conformity_Spec_Title_Network_Exsists, 'serviceType_Networkservice': $serviceType_Networkservice}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.39', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.39"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b502-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Service type en SDS specificatie</label>
                           <description>Service type ontbreekt of heeft de verkeerde waarde, gebruik de waarde other voor SDS services die aan betreffende specificaties van INSPIRE voldoen.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Exsists external; declare variable $serviceType_Other external; not($conformity_Spec_Title_SDS_Exsists) or ($conformity_Spec_Title_SDS_Exsists and $serviceType_Other)", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Exsists': $conformity_Spec_Title_SDS_Exsists, 'serviceType_Other': $serviceType_Other}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.40', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.40"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b508-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Network specificatie en Service type</label>
                           <description>Specificatie ontbreekt of heeft de verkeerde waarde, bij servicetype view of download bij INSPIRE services in specificatie verwijzen naar VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_Network_Exsists external; declare variable $serviceType_Networkservice external; not($serviceType_Networkservice) or ($serviceType_Networkservice and $conformity_Spec_Title_Network_Exsists)", map { '': $nodeInFile, 'conformity_Spec_Title_Network_Exsists': $conformity_Spec_Title_Network_Exsists, 'serviceType_Networkservice': $serviceType_Networkservice}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.41', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.41"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b50b-25e2-11e8-d2e5-09173f13e4c5">
                           <label>SDS specificatie en Service type</label>
                           <description>Specificatie ontbreekt of heeft de verkeerde waarde, bij servicetype other voor INSPIRE services in specificatie verwijzen naar invocable, interoperable of harmonised als de service een INSPIRE dataset gebruikt.</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Exsists external; declare variable $serviceType_Other external; not($serviceType_Other) or ($serviceType_Other and $conformity_Spec_Title_SDS_Exsists)", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Exsists': $conformity_Spec_Title_SDS_Exsists, 'serviceType_Other': $serviceType_Other}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.42', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.42"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b516-25e2-11e8-d2e5-09173f13e4c5">
                           <label>Beschrijving</label>
                           <description>beschrijving ontbreekt of heeft de verkeerde waarde, gebruik voor INSPIRE SDS de waarde accessPoint</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Exsists external; declare variable $description external; not($conformity_Spec_Title_SDS_Exsists) or ($conformity_Spec_Title_SDS_Exsists and $description = 'accessPoint')", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Exsists': $conformity_Spec_Title_SDS_Exsists, 'description': $description}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.43', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.43"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b51e-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Resource locator getCapabilities</label>
                           <description>Resource locator naar de service moet een getCapabilities request bevatten</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; declare variable $conformity_Spec_Title_SDS_Exsists external; declare variable $resourceLocatorString external; not($conformity_Spec_Title_SDS_Exsists) or ($conformity_Spec_Title_SDS_Exsists and contains(translate($resourceLocatorString, $lowercase, $uppercase),'GETCAPABILITIES'))", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase, 'conformity_Spec_Title_SDS_Exsists': $conformity_Spec_Title_SDS_Exsists, 'resourceLocatorString': $resourceLocatorString}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.44', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.44"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b525-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Coupling type</label>
                           <description>Coupling type ontbreekt of heeft de verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $couplingType external; $couplingType", map { '': $nodeInFile, 'couplingType': $couplingType}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.45', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.45"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b532-25e2-11e8-d2e6-09173f13e4c5">
                           <label>CoupledResouce met xlink en uuidref</label>
                           <description>CoupledResouce met xlink en uuidref is verplicht indien data aan de service is gekoppeld (coupled resource 'tight' of 'mixed').</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $couplingType_value external; declare variable $coupledResouceXlink external; declare variable $coupledResouceUUID external; not($couplingType_value='tight' or $couplingType_value='mixed') or (($couplingType_value='tight' or $couplingType_value='mixed') and  ($coupledResouceXlink and $coupledResouceUUID))", map { '': $nodeInFile, 'couplingType_value': $couplingType_value, 'coupledResouceXlink': $coupledResouceXlink, 'coupledResouceUUID': $coupledResouceUUID}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.46', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.46"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b537-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Geografisch gebied</label>
                           <description>Geografisch gebied is verplicht indien data aan de service is gekoppeld (coupled resource 'tight' of 'mixed').</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $geographicLocation external; declare variable $couplingType_value external; not($couplingType_value='tight' or $couplingType_value='mixed') or (($couplingType_value='tight' or $couplingType_value='mixed') and $geographicLocation)", map { '': $nodeInFile, 'geographicLocation': $geographicLocation, 'couplingType_value': $couplingType_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.47', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.47"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b53f-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Minimum x-coördinaat (ISO nr. 344)</label>
                           <description>Minimum x-coördinaat (ISO nr. 344) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $west external; declare variable $couplingType_value external; not($couplingType_value='tight' or $couplingType_value='mixed') or (($couplingType_value='tight' or $couplingType_value='mixed') and (-180.00 &lt; $west) and ( $west &lt; 180.00) or ( $west = 0.00 ) or ( $west = -180.00 ) or ( $west = 180.00 ))", map { '': $nodeInFile, 'west': $west, 'couplingType_value': $couplingType_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.48', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.48"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b548-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Maximum x-coördinaat (ISO nr. 345)</label>
                           <description>Maximum x-coördinaat (ISO nr. 345) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $east external; declare variable $couplingType_value external; not($couplingType_value='tight' or $couplingType_value='mixed') or (($couplingType_value='tight' or $couplingType_value='mixed') and (-180.00 &lt; $east) and ($east &lt; 180.00) or ( $east = 0.00 ) or ( $east = -180.00 ) or ( $east = 180.00 ))", map { '': $nodeInFile, 'east': $east, 'couplingType_value': $couplingType_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.49', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.49"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b550-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Minimum y-coördinaat (ISO nr. 346)</label>
                           <description>Minimum y-coördinaat (ISO nr. 346) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $north external; declare variable $south external; declare variable $couplingType_value external; not($couplingType_value='tight' or $couplingType_value='mixed') or (($couplingType_value='tight' or $couplingType_value='mixed') and (-90.00 &lt; $south) and ($south &lt; $north) or (-90.00 = $south) or ($south = $north))", map { '': $nodeInFile, 'north': $north, 'south': $south, 'couplingType_value': $couplingType_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.50', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.50"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b558-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Maximum y-coördinaat (ISO nr. 347)</label>
                           <description>Maximum y-coördinaat (ISO nr. 347) ontbreekt of heeft een verkeerde waarde</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $north external; declare variable $south external; declare variable $couplingType_value external; not($couplingType_value='tight' or $couplingType_value='mixed') or (($couplingType_value='tight' or $couplingType_value='mixed') and ($south &lt; $north) and ($north &lt; 90.00) or ($south = $north) or ($north = 90.00))", map { '': $nodeInFile, 'north': $north, 'south': $south, 'couplingType_value': $couplingType_value}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.51', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.51"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b569-25e2-11e8-d2e6-09173f13e4c5">
                           <label>Niveau kwaliteitsbeschrijving (ISO nr.139)</label>
                           <description>Niveau kwaliteitsbeschrijving (ISO nr.139) ontbreekt of heeft een verkeerde waarde. Alleen 'service' is toegestaan</description>
                           <parent ref="EIDd9d4aaf4-25e2-11e8-d415-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file/gmd:MD_Metadata
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $fileIdentifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:fileIdentifier/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdLanguage := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; (gmd:language/*/@codeListValue = 'dut' or gmd:language/*/@codeListValue = 'eng')", map { '': $nodeInFile})

                            let $mdLanguage_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:language/*/@codeListValue)", map { '': $nodeInFile})

                            let $hierarchyLevel := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:hierarchyLevel[1]/*/@codeListValue = 'service'", map { '': $nodeInFile})

                            let $hierarchyLevel_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:hierarchyLevel[1]/*/@codeListValue)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/*/gmd:role/*/@codeListValue = 'pointOfContact'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:contact[1]/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'resourceProvider' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'custodian' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'user' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'distributor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'owner' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'originator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'pointOfContact' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'principalInvestigator' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'processor' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'publisher' or gmd:contact/gmd:CI_ResponsibleParty/gmd:role/*/@codeListValue = 'author'", map { '': $nodeInFile})

                            let $mdResponsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:contact[1]/*/gmd:contactInfo/*/gmd:address/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $dateStamp := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:dateStamp/gco:Date))", map { '': $nodeInFile})

                            let $metadataStandardName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardName/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataStandardVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $lowercase external; declare variable $uppercase external; translate(normalize-space(gmd:metadataStandardVersion/gco:CharacterString), $lowercase, $uppercase)", map { '': $nodeInFile, 'lowercase': $lowercase, 'uppercase': $uppercase})

                            let $metadataCharacterset := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:characterSet/*/@codeListValue)", map { '': $nodeInFile})

                            let $metadataCharacterset_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:characterSet/*[@codeListValue ='ucs2' or @codeListValue ='ucs4' or @codeListValue ='utf7' or @codeListValue ='utf8' or @codeListValue ='utf16' or @codeListValue ='8859part1' or @codeListValue ='8859part2' or @codeListValue ='8859part3' or @codeListValue ='8859part4' or @codeListValue ='8859part5' or @codeListValue ='8859part6' or @codeListValue ='8859part7' or @codeListValue ='8859part8' or @codeListValue ='8859part9' or @codeListValue ='8859part10' or @codeListValue ='8859part11' or  @codeListValue ='8859part12' or @codeListValue ='8859part13' or @codeListValue ='8859part14' or @codeListValue ='8859part15' or @codeListValue ='8859part16' or @codeListValue ='jis' or @codeListValue ='shiftJIS' or @codeListValue ='eucJP' or @codeListValue ='usAscii' or @codeListValue ='ebcdic' or @codeListValue ='eucKR' or @codeListValue ='big5' or @codeListValue ='GB2312']", map { '': $nodeInFile})

                            let $serviceTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $publicationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:date[./*/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $publicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $publicationDateString external; ((number(substring(substring-before($publicationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'publicationDateString': $publicationDateString})

                            let $creationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $creationDateString external; ((number(substring(substring-before($creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'creationDateString': $creationDateString})

                            let $revisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $revisionDateString external; ((number(substring(substring-before($revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'revisionDateString': $revisionDateString})

                            let $abstract := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:abstract/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Organisation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:organisationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $responsibleParty_Role := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:role/*/@codeListValue[. = 'resourceProvider' or . = 'custodian' or . = 'owner' or . = 'user' or . = 'distributor' or . = 'owner' or . = 'originator' or . = 'pointOfContact' or . = 'principalInvestigator' or . = 'processor' or . = 'publisher' or . = 'author']", map { '': $nodeInFile})

                            let $responsibleParty_Mail := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:pointOfContact[1]/*/gmd:contactInfo/*/gmd:address[1]/*/gmd:electronicMailAddress[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $keyword_INSPIRE := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space((gmd:identificationInfo[1]/*/gmd:descriptiveKeywords/*/gmd:keyword/gco:CharacterString    [text() = 'infoFeatureAccessService'    or text() = 'infoMapAccessService'    or text() = 'infoCoverageAccessService'    or text() = 'infoSensorDescriptionService'    or text() = 'infoFeatureTypeService'    or text() = 'infoProductAccessService'    or text() = 'infoCatalogueService'    or text() = 'infoGazetteerService'    or text() = 'humanGeographicViewer'])[1])", map { '': $nodeInFile})

                            let $keyword := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:descriptiveKeywords[1]/*/gmd:keyword[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $identifier := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:citation/*/gmd:identifier/*/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $useLimitation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[1]/gmd:MD_Constraints/gmd:useLimitation[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[1]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraint2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/gmd:MD_LegalConstraints/gmd:otherConstraints[2]/gco:CharacterString)", map { '': $nodeInFile})

                            let $otherConstraints := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $otherConstraint1 external; declare variable $otherConstraint2 external; concat($otherConstraint1,$otherConstraint2)", map { '': $nodeInFile, 'otherConstraint1': $otherConstraint1, 'otherConstraint2': $otherConstraint2})

                            let $accessConstraints_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/gmd:resourceConstraints[2]/*/gmd:accessConstraints/*/@codeListValue[ . = 'otherRestrictions'])", map { '': $nodeInFile})

                            let $geographicLocation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement[1])", map { '': $nodeInFile})

                            let $west := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:westBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $east := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:eastBoundLongitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $north := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:northBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $south := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; number(gmd:identificationInfo[1]/*/srv:extent/*/gmd:geographicElement/*/gmd:southBoundLatitude[1]/gco:Decimal)", map { '': $nodeInFile})

                            let $begin_beginPosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:beginPosition[1])", map { '': $nodeInFile})

                            let $begin_begintimePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:begin/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin_timePosition := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo/*/srv:extent/*/gmd:temporalElement/*/gmd:extent/*/gml:timePosition[1])", map { '': $nodeInFile})

                            let $begin := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $begin_beginPosition external; declare variable $begin_begintimePosition external; declare variable $begin_timePosition external; $begin_beginPosition or $begin_begintimePosition or $begin_timePosition", map { '': $nodeInFile, 'begin_beginPosition': $begin_beginPosition, 'begin_begintimePosition': $begin_begintimePosition, 'begin_timePosition': $begin_timePosition})

                            let $dcp_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:DCP/*/@codeListValue))", map { '': $nodeInFile})

                            let $operationName := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:operationName/gco:CharacterString)", map { '': $nodeInFile})

                            let $connectPointString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:containsOperations[1]/*/srv:connectPoint/*/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $resourceLocatorString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:linkage/gmd:URL)", map { '': $nodeInFile})

                            let $connectPoint := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $connectPointString external; normalize-space(substring-before($connectPointString,'?'))", map { '': $nodeInFile, 'connectPointString': $connectPointString})

                            let $resourceLocator := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $resourceLocatorString external; normalize-space(substring-before($resourceLocatorString,'?'))", map { '': $nodeInFile, 'resourceLocatorString': $resourceLocatorString})

                            let $transferOptions_Protocol := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:CSW' or text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS' or text() = 'OGC:WCTS' or text() = 'OGC:WPS' or text() = 'UKST' or text() = 'OGC:WMC' or text() = 'OGC:KML' or text() = 'OGC:GML' or text() = 'OGC:WFS-G' or text() = 'OGC:SOS' or text() = 'OGC:SPS' or text() = 'OGC:SAS' or text() = 'OGC:WNS' or text() = 'OGC:ODS' or text() = 'OGC:OGS' or text() = 'OGC:OUS' or text() = 'OGC:OPS' or text() = 'OGC:ORS'  or text() = 'OGC:WMTS' or text() = 'INSPIRE Atom']", map { '': $nodeInFile})

                            let $transferOptions_Protocol_isOGCService := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:protocol/*[text() = 'OGC:WMS' or text() = 'OGC:WFS' or text() = 'OGC:WCS']", map { '': $nodeInFile})

                            let $description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine[1]/gmd:CI_OnlineResource/gmd:description/gco:CharacterString)", map { '': $nodeInFile})

                            let $serviceType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*/text()", map { '': $nodeInFile})

                            let $serviceType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'       or text() = 'download'       or text() = 'discovery'       or text() = 'transformation'        or text() = 'invoke'        or text() = 'other']", map { '': $nodeInFile})

                            let $serviceType_Networkservice := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'view'     or text() = 'download'     or text() = 'discovery'])", map { '': $nodeInFile})

                            let $serviceType_Other := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceType/*[text() = 'other'])", map { '': $nodeInFile})

                            let $serviceTypeVersion := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:identificationInfo[1]/*/srv:serviceTypeVersion/gco:CharacterString)", map { '': $nodeInFile})

                            let $couplingType_value := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue)", map { '': $nodeInFile})

                            let $couplingType := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:identificationInfo[1]/*/srv:couplingType/*/@codeListValue[. ='tight' or . ='mixed' or . ='loose']", map { '': $nodeInFile})

                            let $coupledResouceXlink := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@xlink:href))", map { '': $nodeInFile})

                            let $coupledResouceUUID := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(string(gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:operatesOn[1]/@uuidref))", map { '': $nodeInFile})

                            let $dataQualityInfo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:dataQualityInfo/gmd:DQ_DataQuality", map { '': $nodeInFile})

                            let $level := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $dataQualityInfo external; string($dataQualityInfo/gmd:scope/gmd:DQ_Scope/gmd:level/*/@codeListValue[. = 'service'])", map { '': $nodeInFile, 'dataQualityInfo': $dataQualityInfo})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $level external; $level", map { '': $nodeInFile, 'level': $level}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.1.52', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.1.52"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <TestCase id="EIDd9d4b574-25e2-11e8-d2e6-09173f13e4c5">
               <label>Conformiteit specificaties</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4b574-25e2-11e8-d2e6-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4b590-25e2-11e8-d2e7-09173f13e4c5">
                           <label>INSPIRE Specificatie (ISO nr. 360)</label>
                           <description>Specificatie (ISO nr. 360 ) ontbreekt.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; $conformity_SpecTitle", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.1', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b593-25e2-11e8-d2e7-09173f13e4c5">
                           <label>INSPIRE Verklaring (ISO nr. 131)</label>
                           <description>Verklaring (ISO nr. 131) ontbreekt.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Explanation external; $conformity_Explanation", map { '': $nodeInFile, 'conformity_Explanation': $conformity_Explanation}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.2', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.2"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b596-25e2-11e8-d2e7-09173f13e4c5">
                           <label>INSPIRE Specificatie datum (ISO nr. 394)</label>
                           <description>Specificatie datum (ISO nr. 394) ontbreekt.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Date external; $conformity_Date", map { '': $nodeInFile, 'conformity_Date': $conformity_Date}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.3', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.3"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b599-25e2-11e8-d2e7-09173f13e4c5">
                           <label>INSPIRE Specificatiedatum type (ISO nr. 395)</label>
                           <description>Specificatiedatum type (ISO nr. 395) ontbreekt.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Datetype external; $conformity_Datetype", map { '': $nodeInFile, 'conformity_Datetype': $conformity_Datetype}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.4', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.4"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b59c-25e2-11e8-d2e7-09173f13e4c5">
                           <label>INSPIRE Conformiteitindicatie met de specificatie  (ISO nr. 132)</label>
                           <description>Conformiteitindicatie met de specificatie (ISO nr. 132) ontbreekt.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Pass external; $conformity_Pass", map { '': $nodeInFile, 'conformity_Pass': $conformity_Pass}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.5', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.5"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5a4-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Verklaring (ISO nr. 131) en Specificatie (ISO nr. 360)</label>
                           <description>Verklaring (ISO nr. 131) is verplicht als een specificatie is opgegeven.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Explanation external; not($conformity_SpecTitle) or ($conformity_SpecTitle and $conformity_Explanation)", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Explanation': $conformity_Explanation}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.6', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.6"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5a7-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Datum (ISO nr. 394) en Specificatie (ISO nr. 360)</label>
                           <description>Datum (ISO nr. 394) is verplicht als een specificatie is opgegeven.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Date external; not($conformity_SpecTitle and not($conformity_Date))", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Date': $conformity_Date}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.7', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.7"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5aa-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Datumtype (ISO nr. 395) en Specificatie (ISO nr. 360)</label>
                           <description>Datumtype (ISO nr. 395) is verplicht als een specificatie is opgegeven.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Datetype external; not($conformity_SpecTitle and not($conformity_Datetype))", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Datetype': $conformity_Datetype}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.8', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.8"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5ad-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Conformiteit (ISO nr. 132) en Specificatie (ISO nr. 360)</label>
                           <description>Conformiteit (ISO nr. 132) is verplicht als een specificatie is opgegeven.</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Pass external; not($conformity_SpecTitle) or ($conformity_SpecTitle and $conformity_Pass)", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Pass': $conformity_Pass}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.9', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.9"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5b2-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Verklaring (ISO nr. 131)</label>
                           <description>Verklaring (ISO nr. 131) hoort leeg als geen specificatie is opgegeven</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Explanation external; not($conformity_Explanation) or ($conformity_Explanation and $conformity_SpecTitle)", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Explanation': $conformity_Explanation}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.10', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.10"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5b6-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Datum (ISO nr. 394)</label>
                           <description>Datum (ISO nr. 394) hoort leeg als geen specificatie is opgegeven..</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Date external; not($conformity_Date and not($conformity_SpecTitle))", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Date': $conformity_Date}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.11', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.11"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5b9-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Datumtype (ISO nr. 395)</label>
                           <description>Datumtype (ISO nr. 395) hoort leeg als geen specificatie is opgegeven..</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Datetype external; not($conformity_Datetype and not($conformity_SpecTitle))", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Datetype': $conformity_Datetype}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.12', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.12"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5bc-25e2-11e8-d2e7-09173f13e4c5">
                           <label>Conformiteit (ISO nr. 132)</label>
                           <description>Conformiteit (ISO nr. 132) hoort leeg als geen specificatie is opgegeven..</description>
                           <parent ref="EIDd9d4aaf5-25e2-11e8-d516-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_SpecTitle := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_Explanation := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:explanation/gco:CharacterString)", map { '': $nodeInFile})

                            let $conformity_DateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $conformity_Date := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_DateString external; ((number(substring(substring-before($conformity_DateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'conformity_DateString': $conformity_DateString})

                            let $conformity_Datetype := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/*[@codeListValue='creation' or @codeListValue='publication' or @codeListValue='revision']", map { '': $nodeInFile})

                            let $conformity_SpecCreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecPublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_SpecRevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; gmd:specification/gmd:CI_Citation/gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date", map { '': $nodeInFile})

                            let $conformity_Pass := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:pass/gco:Boolean)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_SpecTitle external; declare variable $conformity_Pass external; not($conformity_Pass) or ($conformity_Pass and $conformity_SpecTitle)", map { '': $nodeInFile, 'conformity_SpecTitle': $conformity_SpecTitle, 'conformity_Pass': $conformity_Pass}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.2.13', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.2.13"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <TestCase id="EIDd9d4b5d5-25e2-11e8-d2e7-09173f13e4c5">
               <label>alle INSPIRE specificaties</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aaf6-25e2-11e8-d645-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4b5d5-25e2-11e8-d2e7-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4b5ef-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE Specificatie (ISO nr. 360) titel interoperabiliteit</label>
                           <description>Specificatie (ISO nr. 360) ontbreekt of heeft de verkeerde waarde,verwijzen naar de VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens</description>
                           <parent ref="EIDd9d4aaf6-25e2-11e8-d645-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_conformity_Spec_Titles := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title", map { '': $nodeInFile})

                            let $all_conformity_Spec_Titles_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; normalize-space(string-join(($all_conformity_Spec_Titles), ','))", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_SDS_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles_join external; contains($all_conformity_Spec_Titles_join, 'invocable') or contains($all_conformity_Spec_Titles_join, 'interoperable') or contains($all_conformity_Spec_Titles_join, 'harmonised')", map { '': $nodeInFile, 'all_conformity_Spec_Titles_join': $all_conformity_Spec_Titles_join})

                            let $INSPIRE_network_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_interop_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})
                let $INSPIRE_network_Spec_Title := 'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten'
let $INSPIRE_interop_Spec_Title := 'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens'
let $INSPIRE_SDS_invoc := 'invocable'
let $INSPIRE_SDS_interop := 'interoperable'
let $INSPIRE_SDS_harmo := 'harmonised'

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $INSPIRE_interop_Spec_Title_exists external; $INSPIRE_interop_Spec_Title_exists", map { '': $nodeInFile, 'INSPIRE_interop_Spec_Title_exists': $INSPIRE_interop_Spec_Title_exists}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.3.1', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.3.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5f4-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE Specificatie (ISO nr. 360) titel SDS of netwerkdienst</label>
                           <description>Specificatie (ISO nr. 360) heeft geen verwijzingen naar of de verordening voor netwerkdiensten of een verwijzing naar SDS invocable, interoperable of harmonised. Vul één van deze in.</description>
                           <parent ref="EIDd9d4aaf6-25e2-11e8-d645-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_conformity_Spec_Titles := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title", map { '': $nodeInFile})

                            let $all_conformity_Spec_Titles_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; normalize-space(string-join(($all_conformity_Spec_Titles), ','))", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_SDS_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles_join external; contains($all_conformity_Spec_Titles_join, 'invocable') or contains($all_conformity_Spec_Titles_join, 'interoperable') or contains($all_conformity_Spec_Titles_join, 'harmonised')", map { '': $nodeInFile, 'all_conformity_Spec_Titles_join': $all_conformity_Spec_Titles_join})

                            let $INSPIRE_network_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_interop_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})
                let $INSPIRE_network_Spec_Title := 'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten'
let $INSPIRE_interop_Spec_Title := 'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens'
let $INSPIRE_SDS_invoc := 'invocable'
let $INSPIRE_SDS_interop := 'interoperable'
let $INSPIRE_SDS_harmo := 'harmonised'

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $INSPIRE_SDS_Spec_Title_exists external; declare variable $INSPIRE_network_Spec_Title_exists external; $INSPIRE_SDS_Spec_Title_exists or $INSPIRE_network_Spec_Title_exists", map { '': $nodeInFile, 'INSPIRE_SDS_Spec_Title_exists': $INSPIRE_SDS_Spec_Title_exists, 'INSPIRE_network_Spec_Title_exists': $INSPIRE_network_Spec_Title_exists}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.3.2', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.3.2"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b5f7-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE Specificatie (ISO nr. 360) titel SDS en netwerkdienst</label>
                           <description>Specificatie (ISO nr. 360) verwijzingen naar of de verordening voor netwerkdiensten of een verwijzing naar SDS invocable, interoperable of harmonised. Niet beide.</description>
                           <parent ref="EIDd9d4aaf6-25e2-11e8-d645-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_conformity_Spec_Titles := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title", map { '': $nodeInFile})

                            let $all_conformity_Spec_Titles_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; normalize-space(string-join(($all_conformity_Spec_Titles), ','))", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_SDS_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles_join external; contains($all_conformity_Spec_Titles_join, 'invocable') or contains($all_conformity_Spec_Titles_join, 'interoperable') or contains($all_conformity_Spec_Titles_join, 'harmonised')", map { '': $nodeInFile, 'all_conformity_Spec_Titles_join': $all_conformity_Spec_Titles_join})

                            let $INSPIRE_network_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_interop_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})
                let $INSPIRE_network_Spec_Title := 'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten'
let $INSPIRE_interop_Spec_Title := 'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens'
let $INSPIRE_SDS_invoc := 'invocable'
let $INSPIRE_SDS_interop := 'interoperable'
let $INSPIRE_SDS_harmo := 'harmonised'

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $INSPIRE_SDS_Spec_Title_exists external; declare variable $INSPIRE_network_Spec_Title_exists external; not($INSPIRE_SDS_Spec_Title_exists and $INSPIRE_network_Spec_Title_exists)", map { '': $nodeInFile, 'INSPIRE_SDS_Spec_Title_exists': $INSPIRE_SDS_Spec_Title_exists, 'INSPIRE_network_Spec_Title_exists': $INSPIRE_network_Spec_Title_exists}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.3.3', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.3.3"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b601-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE Specificatie (ISO nr. 360) titel technische specificatie</label>
                           <description>Specificatie (ISO nr. 360) verwijzing naar een technische specificatie van de service ontbreekt:</description>
                           <parent ref="EIDd9d4aaf6-25e2-11e8-d645-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_conformity_Spec_Titles := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title", map { '': $nodeInFile})

                            let $all_conformity_Spec_Titles_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; normalize-space(string-join(($all_conformity_Spec_Titles), ','))", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_SDS_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles_join external; contains($all_conformity_Spec_Titles_join, 'invocable') or contains($all_conformity_Spec_Titles_join, 'interoperable') or contains($all_conformity_Spec_Titles_join, 'harmonised')", map { '': $nodeInFile, 'all_conformity_Spec_Titles_join': $all_conformity_Spec_Titles_join})

                            let $INSPIRE_network_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})

                            let $INSPIRE_interop_Spec_Title_exists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_conformity_Spec_Titles external; $all_conformity_Spec_Titles[normalize-space(*/text()) =  'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens']", map { '': $nodeInFile, 'all_conformity_Spec_Titles': $all_conformity_Spec_Titles})
                let $INSPIRE_network_Spec_Title := 'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten'
let $INSPIRE_interop_Spec_Title := 'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens'
let $INSPIRE_SDS_invoc := 'invocable'
let $INSPIRE_SDS_interop := 'interoperable'
let $INSPIRE_SDS_harmo := 'harmonised'

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Exsists external; declare variable $all_conformity_Spec_Titles_join external; not($conformity_Spec_Title_SDS_Exsists) or ($conformity_Spec_Title_SDS_Exsists and count(($all_conformity_Spec_Titles_join)) lt 3)", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Exsists': $conformity_Spec_Title_SDS_Exsists, 'all_conformity_Spec_Titles_join': $all_conformity_Spec_Titles_join}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.3.4', map { 'filename': local:filename($nodeInFile) , 'all_conformity_Spec_Titles_join': $all_conformity_Spec_Titles_join })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.3.4"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <TestCase id="EIDd9d4b610-25e2-11e8-d2e8-09173f13e4c5">
               <label>Relatie met de dataset</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aaf7-25e2-11e8-d733-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4b610-25e2-11e8-d2e8-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4b612-25e2-11e8-d2e8-09173f13e4c5">
                           <label>Coupled resource uuidref attribuut</label>
                           <description>Coupled resource heeft geen uuidref attribuut bij het element operatesOn</description>
                           <parent ref="EIDd9d4aaf7-25e2-11e8-d733-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:identificationInfo/srv:SV_ServiceIdentification/srv:operatesOn
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(normalize-space(@uuidref))", map { '': $nodeInFile}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.1', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b615-25e2-11e8-d2e8-09173f13e4c5">
                           <label>Coupled resource xlink:href attribuut</label>
                           <description>Coupled resource heeft geen xlink:href attribuut bij het element operatesOn</description>
                           <parent ref="EIDd9d4aaf7-25e2-11e8-d733-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:identificationInfo/srv:SV_ServiceIdentification/srv:operatesOn
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(normalize-space(@xlink:href))", map { '': $nodeInFile}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.4.2', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.4.2"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <TestCase id="EIDd9d4b61b-25e2-11e8-d2e8-09173f13e4c5">
               <label>INSPIRE SDS alle service kwaliteit</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4b61b-25e2-11e8-d2e8-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4b62e-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE SDS service kwaliteit (ISO nr. 100 ) availability</label>
                           <description>De beschikbaarheid van de service is niet beschreven</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Interop external; declare variable $all_quality_measures_join external; not($conformity_Spec_Title_SDS_Interop) or ($conformity_Spec_Title_SDS_Interop and contains($all_quality_measures_join, 'availability'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Interop': $conformity_Spec_Title_SDS_Interop, 'all_quality_measures_join': $all_quality_measures_join}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.1', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b631-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE SDS service kwaliteit (ISO nr. 100) performance</label>
                           <description>De performance van de service is niet beschreven</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Interop external; declare variable $all_quality_measures_join external; not($conformity_Spec_Title_SDS_Interop) or ($conformity_Spec_Title_SDS_Interop and contains($all_quality_measures_join, 'performance'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Interop': $conformity_Spec_Title_SDS_Interop, 'all_quality_measures_join': $all_quality_measures_join}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.2', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.2"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b634-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE SDS service kwaliteit (ISO nr. 100 ) capacity</label>
                           <description>De capaciteit van de service is niet beschreven</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Interop external; declare variable $all_quality_measures_join external; not($conformity_Spec_Title_SDS_Interop) or ($conformity_Spec_Title_SDS_Interop and contains($all_quality_measures_join, 'capacity'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Interop': $conformity_Spec_Title_SDS_Interop, 'all_quality_measures_join': $all_quality_measures_join}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.3', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.3"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b638-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE SDS harmo service kwaliteit (ISO nr. 100 ) availability</label>
                           <description>De beschikbaarheid van de service is niet beschreven</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Harmo external; declare variable $all_quality_measures_join external; not($conformity_Spec_Title_SDS_Harmo) or ($conformity_Spec_Title_SDS_Harmo and contains($all_quality_measures_join, 'availability'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Harmo': $conformity_Spec_Title_SDS_Harmo, 'all_quality_measures_join': $all_quality_measures_join}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.4', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.4"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b63b-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE SDS harmo service kwaliteit (ISO nr. 100) performance</label>
                           <description>De performance van de service is niet beschreven</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Harmo external; declare variable $all_quality_measures_join external; not($conformity_Spec_Title_SDS_Harmo) or ($conformity_Spec_Title_SDS_Harmo and contains($all_quality_measures_join, 'performance'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Harmo': $conformity_Spec_Title_SDS_Harmo, 'all_quality_measures_join': $all_quality_measures_join}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.5', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.5"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b63e-25e2-11e8-d2e8-09173f13e4c5">
                           <label>INSPIRE SDS harmo service kwaliteit (ISO nr. 100 ) capacity</label>
                           <description>De capaciteit van de service is niet beschreven</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Harmo external; declare variable $all_quality_measures_join external; not($conformity_Spec_Title_SDS_Harmo) or ($conformity_Spec_Title_SDS_Harmo and contains($all_quality_measures_join, 'capacity'))", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Harmo': $conformity_Spec_Title_SDS_Harmo, 'all_quality_measures_join': $all_quality_measures_join}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.6', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.6"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b646-25e2-11e8-d2e9-09173f13e4c5">
                           <label>INSPIRE SDS service kwaliteit identificatie (ISO nr. 101 )</label>
                           <description>Identificatie van service kwaliteitsmeeting (ISO nr. 101) is verplicht als een meeting is opgegeven.</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $quality_name_Of_Measure external; declare variable $quality_measure_Identification external; not($quality_name_Of_Measure) or ($quality_name_Of_Measure and $quality_measure_Identification)", map { '': $nodeInFile, 'quality_name_Of_Measure': $quality_name_Of_Measure, 'quality_measure_Identification': $quality_measure_Identification}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.7', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.7"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b649-25e2-11e8-d2e9-09173f13e4c5">
                           <label>INSPIRE SDS service kwaliteit beschrijving (ISO nr. 102 )</label>
                           <description>Beschrijving van service kwaliteit (ISO nr. 102) is verplicht als een meeting is opgegeven.</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $quality_name_Of_Measure external; declare variable $quality_measure_Description external; not($quality_name_Of_Measure) or ($quality_name_Of_Measure and $quality_measure_Description)", map { '': $nodeInFile, 'quality_name_Of_Measure': $quality_name_Of_Measure, 'quality_measure_Description': $quality_measure_Description}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.8', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.8"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b64d-25e2-11e8-d2e9-09173f13e4c5">
                           <label>INSPIRE SDS service kwaliteit resultaat (ISO nr. 107 )</label>
                           <description>Resultaat van service kwaliteit (ISO nr. 107) is verplicht als een meeting is opgegeven.</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $quality_name_Of_Measure external; declare variable $quality_result external; not($quality_name_Of_Measure) or ($quality_name_Of_Measure and $quality_result)", map { '': $nodeInFile, 'quality_name_Of_Measure': $quality_name_Of_Measure, 'quality_result': $quality_result}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.9', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.9"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b650-25e2-11e8-d2e9-09173f13e4c5">
                           <label>INSPIRE SDS service kwaliteit eenheid waarde (ISO nr. 107 )</label>
                           <description>Voor resultaat van service kwaliteit (ISO nr. 107) is ook een eenheid verplicht als een meeting is opgegeven.</description>
                           <parent ref="EIDd9d4aaf8-25e2-11e8-d818-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $all_quality_measures := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; ancestor::gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_ConceptualConsistency/gmd:nameOfMeasure", map { '': $nodeInFile})

                            let $all_quality_measures_join := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $all_quality_measures external; normalize-space(string-join(($all_quality_measures), ','))", map { '': $nodeInFile, 'all_quality_measures': $all_quality_measures})

                            let $quality_name_Of_Measure := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:nameOfMeasure/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Identification := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureIdentification/gmd:MD_Identifier/gmd:code/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_measure_Description := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:measureDescription/gco:CharacterString)", map { '': $nodeInFile})

                            let $quality_result := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:value/gco:Record)", map { '': $nodeInFile})

                            let $quality_value_unit := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@xlink:href)", map { '': $nodeInFile})

                            let $quality_value_unit_Reason := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; contains(normalize-space(gmd:result/gmd:DQ_QuantitativeResult/gmd:valueUnit/@gco:nilReason),'inapplicable')", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $quality_name_Of_Measure external; declare variable $quality_value_unit external; declare variable $quality_value_unit_Reason external; not($quality_name_Of_Measure) or ($quality_name_Of_Measure and ($quality_value_unit or $quality_value_unit_Reason))", map { '': $nodeInFile, 'quality_name_Of_Measure': $quality_name_Of_Measure, 'quality_value_unit': $quality_value_unit, 'quality_value_unit_Reason': $quality_value_unit_Reason}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.5.10', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.5.10"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <TestCase id="EIDd9d4b658-25e2-11e8-d2e9-09173f13e4c5">
               <label>Referentiesysteem</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aaf9-25e2-11e8-d919-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4b658-25e2-11e8-d2e9-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4b65c-25e2-11e8-d2e9-09173f13e4c5">
                           <label>Code referentiesysteem (ISO nr. 207) SDS</label>
                           <description>Code referentiesysteem (ISO nr. 207) ontbreekt, dit moet voor INSPIRE interoperable SDS een URI, bv http://www.opengis.net/def/crs/EPSG/0/28992 zijn</description>
                           <parent ref="EIDd9d4aaf9-25e2-11e8-d919-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:referenceSystemInfo/gmd:MD_ReferenceSystem/gmd:referenceSystemIdentifier/gmd:RS_Identifier
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $referenceSystemInfo_Code := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:code/gco:CharacterString)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Interop external; declare variable $referenceSystemInfo_Code external; not($conformity_Spec_Title_SDS_Interop) or ($conformity_Spec_Title_SDS_Interop and $referenceSystemInfo_Code)", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Interop': $conformity_Spec_Title_SDS_Interop, 'referenceSystemInfo_Code': $referenceSystemInfo_Code}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.6.1', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.6.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                        <TestAssertion id="EIDd9d4b65f-25e2-11e8-d2e9-09173f13e4c5">
                           <label>Code referentiesysteem (ISO nr. 207) SDS harmo</label>
                           <description>Code referentiesysteem (ISO nr. 207) ontbreekt, dit moet voor INSPIRE harmonised SDS een URI, bv http://www.opengis.net/def/crs/EPSG/0/28992 zijn</description>
                           <parent ref="EIDd9d4aaf9-25e2-11e8-d919-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:referenceSystemInfo/gmd:MD_ReferenceSystem/gmd:referenceSystemIdentifier/gmd:RS_Identifier
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $referenceSystemInfo_Code := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:code/gco:CharacterString)", map { '': $nodeInFile})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_SDS_Harmo external; declare variable $referenceSystemInfo_Code external; not($conformity_Spec_Title_SDS_Harmo) or ($conformity_Spec_Title_SDS_Harmo and $referenceSystemInfo_Code)", map { '': $nodeInFile, 'conformity_Spec_Title_SDS_Harmo': $conformity_Spec_Title_SDS_Harmo, 'referenceSystemInfo_Code': $referenceSystemInfo_Code}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.6.2', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.6.2"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <TestCase id="EIDd9d4b66d-25e2-11e8-d2e9-09173f13e4c5">
               <label>Thesaurus</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aafa-25e2-11e8-d101-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4b66d-25e2-11e8-d2e9-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4b686-25e2-11e8-d2e9-09173f13e4c5">
                           <label>thesaurus datum (ISO nr.394) en datumtype (ISO nr. 395)</label>
                           <description>Als er gebruik wordt gemaakt van een thesaurus dient de datum (ISO nr.394) en datumtype (ISO nr. 395) opgegeven te worden. Datum formaat moet YYYY-MM-DD zijn.</description>
                           <parent ref="EIDd9d4aafa-25e2-11e8-d101-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords/*/gmd:thesaurusName/gmd:CI_Citation
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $thesaurus_Title := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(gmd:title/gco:CharacterString)", map { '': $nodeInFile})

                            let $thesaurus_publicationDateSring := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='publication']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $thesaurus_creationDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='creation']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $thesaurus_revisionDateString := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; string(gmd:date[./gmd:CI_Date/gmd:dateType/*/@codeListValue='revision']/*/gmd:date/gco:Date)", map { '': $nodeInFile})

                            let $thesaurus_PublicationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus_publicationDateSring external; ((number(substring(substring-before($thesaurus_publicationDateSring,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'thesaurus_publicationDateSring': $thesaurus_publicationDateSring})

                            let $thesaurus_CreationDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus_creationDateString external; ((number(substring(substring-before($thesaurus_creationDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'thesaurus_creationDateString': $thesaurus_creationDateString})

                            let $thesaurus_RevisionDate := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus_revisionDateString external; ((number(substring(substring-before($thesaurus_revisionDateString,'-'),1,4)) &gt; 1000 ))", map { '': $nodeInFile, 'thesaurus_revisionDateString': $thesaurus_revisionDateString})

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus_Title external; declare variable $thesaurus_PublicationDate external; declare variable $thesaurus_CreationDate external; declare variable $thesaurus_RevisionDate external; not($thesaurus_Title) or ($thesaurus_Title and ($thesaurus_CreationDate or $thesaurus_PublicationDate or $thesaurus_RevisionDate))", map { '': $nodeInFile, 'thesaurus_Title': $thesaurus_Title, 'thesaurus_PublicationDate': $thesaurus_PublicationDate, 'thesaurus_CreationDate': $thesaurus_CreationDate, 'thesaurus_RevisionDate': $thesaurus_RevisionDate}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.7.1', map { 'filename': local:filename($nodeInFile)  })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.7.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <TestCase id="EIDd9d4b690-25e2-11e8-d2e9-09173f13e4c5">
               <label>INSPIRE Thesaurus trefwoorden</label>
               <description>...</description>
               <parent ref="EIDd9d4abcc-25e2-11e8-d2e2-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EIDd9d4aafb-25e2-11e8-d112-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EIDd9d4b690-25e2-11e8-d2e9-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EIDd9d4b694-25e2-11e8-d2e9-09173f13e4c5">
                           <label>INSPIRE Trefwoorden (ISO nr. 53) uit thesaurus</label>
                           <description>Deze keywords komen niet overeen met GEMET- INSPIRE themes thesaurus. gevonden keywords:</description>
                           <parent ref="EIDd9d4aafb-25e2-11e8-d112-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>

let $errors := for $file in $db
return
for $nodeInFile in $file//gmd:MD_Metadata/gmd:identificationInfo[1]/*/gmd:descriptiveKeywords    [normalize-space(gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title) = 'GEMET - INSPIRE themes, version 1.0']    /gmd:MD_Keywords/gmd:keyword
let $lowercase := 'abcdefghijklmnopqrstuvwxyz'
let $uppercase := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

                            let $thesaurus1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[1]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[2]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[3]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(/gmd:MD_Metadata/gmd:identificationInfo/*/gmd:descriptiveKeywords[4]/gmd:MD_Keywords/gmd:thesaurusName/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $thesaurus := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus1 external; declare variable $thesaurus2 external; declare variable $thesaurus3 external; declare variable $thesaurus4 external; concat(string($thesaurus1),string($thesaurus2),string($thesaurus3),string($thesaurus4))", map { '': $file, 'thesaurus1': $thesaurus1, 'thesaurus2': $thesaurus2, 'thesaurus3': $thesaurus3, 'thesaurus4': $thesaurus4})

                            let $thesaurus_INSPIRE_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $thesaurus external; contains($thesaurus,'GEMET - INSPIRE themes, version 1.0')", map { '': $file, 'thesaurus': $thesaurus})

                            let $conformity_Spec_Title1 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[1]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title2 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[2]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title3 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[3]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title4 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[4]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title5 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[5]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title6 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[6]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title7 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[7]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title8 := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; normalize-space(//gmd:MD_Metadata/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report[8]/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult/gmd:specification/gmd:CI_Citation/gmd:title/gco:CharacterString)", map { '': $file})

                            let $conformity_Spec_Title_All := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title1 external; declare variable $conformity_Spec_Title2 external; declare variable $conformity_Spec_Title3 external; declare variable $conformity_Spec_Title4 external; declare variable $conformity_Spec_Title5 external; declare variable $conformity_Spec_Title6 external; declare variable $conformity_Spec_Title7 external; declare variable $conformity_Spec_Title8 external; concat(string($conformity_Spec_Title1),string($conformity_Spec_Title2),string($conformity_Spec_Title3),string($conformity_Spec_Title4),string($conformity_Spec_Title5),string($conformity_Spec_Title6),string($conformity_Spec_Title7),string($conformity_Spec_Title8))", map { '': $file, 'conformity_Spec_Title1': $conformity_Spec_Title1, 'conformity_Spec_Title2': $conformity_Spec_Title2, 'conformity_Spec_Title3': $conformity_Spec_Title3, 'conformity_Spec_Title4': $conformity_Spec_Title4, 'conformity_Spec_Title5': $conformity_Spec_Title5, 'conformity_Spec_Title6': $conformity_Spec_Title6, 'conformity_Spec_Title7': $conformity_Spec_Title7, 'conformity_Spec_Title8': $conformity_Spec_Title8})

                            let $conformity_Spec_Title_Interoperability_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EU) Nr. 1089/2010 VAN DE COMMISSIE van 23 november 2010 ter uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad betreffende de interoperabiliteit van verzamelingen ruimtelijke gegevens en van diensten met betrekking tot ruimtelijke gegevens')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_Network_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'VERORDENING (EG) Nr. 976/2009 VAN DE COMMISSIE van 19 oktober 2009 tot uitvoering van Richtlijn 2007/2/EG van het Europees Parlement en de Raad wat betreft de netwerkdiensten')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Exsists := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; (contains($conformity_Spec_Title_All,'invocable') or contains($conformity_Spec_Title_All,'interoperable') or contains($conformity_Spec_Title_All,'harmonised'))", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Invoc := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'invocable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Interop := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'interoperable')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})

                            let $conformity_Spec_Title_SDS_Harmo := xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $conformity_Spec_Title_All external; contains($conformity_Spec_Title_All,'harmonised')", map { '': $file, 'conformity_Spec_Title_All': $conformity_Spec_Title_All})
                let $quote := "'"

where not(xquery:eval("declare namespace gmd='http://www.isotc211.org/2005/gmd'; declare namespace gco='http://www.isotc211.org/2005/gco'; declare namespace srv='http://www.isotc211.org/2005/srv'; declare namespace xlink='http://www.w3.org/1999/xlink'; declare namespace gml='http://www.opengis.net/gml'; declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance'; declare variable $quote external; ((normalize-space(.)='Administratieve eenheden' )           or (normalize-space(.)='Adressen' )           or (normalize-space(.)='Atmosferische omstandigheden' )           or (normalize-space(.)='Beschermde gebieden' )           or (normalize-space(.)='Biogeografische gebieden' )           or (normalize-space(.)='Bodem')            or (normalize-space(.)='Bodemgebruik')            or (normalize-space(.)='Energiebronnen')            or (normalize-space(.)='Faciliteiten voor landbouw en aquacultuur')            or (normalize-space(.)='Faciliteiten voor productie en industrie')            or (normalize-space(.)=concat('Gebieden met natuurrisico',$quote,'s'))            or (normalize-space(.)='Gebiedsbeheer, gebieden waar beperkingen gelden, gereguleerde gebieden en rapportage-eenheden')            or (normalize-space(.)='Gebouwen')            or (normalize-space(.)='Geografisch rastersysteem')            or (normalize-space(.)='Geografische namen')            or (normalize-space(.)='Geologie')            or (normalize-space(.)='Habitats en biotopen')            or (normalize-space(.)='Hoogte')            or (normalize-space(.)='Hydrografie')            or (normalize-space(.)='Kadastrale percelen')            or (normalize-space(.)='Landgebruik')            or (normalize-space(.)='Menselijke gezondheid en veiligheid')            or (normalize-space(.)='Meteorologische geografische kenmerken')            or (normalize-space(.)='Milieubewakingsvoorzieningen')            or (normalize-space(.)='Minerale bronnen')            or (normalize-space(.)='Nutsdiensten en overheidsdiensten')            or (normalize-space(.)='Oceanografische geografische kenmerken')            or (normalize-space(.)='Orthobeeldvorming')            or (normalize-space(.)='Spreiding van de bevolking — demografie')            or (normalize-space(.)='Spreiding van soorten')            or (normalize-space(.)='Statistische eenheden')            or (normalize-space(.)='Systemen voor verwijzing door middel van coördinaten')            or (normalize-space(.)='Vervoersnetwerken')            or (normalize-space(.)='Zeegebieden'))", map { '': $nodeInFile, 'quote': $quote}))
order by local:filename($nodeInFile)
return local:addMessage('TR.schtron.Schematron.schematron.err.1.8.1', map { 'filename': local:filename($nodeInFile) , '.': . })


                                                            return
                                                            (if ($errors) then 'FAILED' else 'PASSED',
                                                            local:error-statistics('TR.errors', count($errors)), $errors)
                                                        </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <etf:translationTemplates>
                              <etf:translationTemplate ref="TR.schtron.Schematron.schematron.err.1.8.1"/>
                           </etf:translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
         </testCases>
      </TestModule>
   </testModules>
</etf:ExecutableTestSuite>
