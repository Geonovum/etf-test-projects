<?xml version="1.0" encoding="UTF-8"?>
<etf:ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:etf="http://www.interactive-instruments.de/etf/2.0"
    id="EIDeb562f9f-00b0-4390-ae21-92145f2efa6b"
    xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 http://resources.etf-validator.net/schema/v2/service/service.xsd">
    <itemHash>bQ==</itemHash>
    <remoteResource>https://github.com/interactive-instruments/etf-ets-repository</remoteResource>
    <localPath>/auto</localPath>
    <label>Schema validatie voor metadata Nederlands profiel op ISO 19115 v13 2014</label>
    <description>Schema validatie voor metadata Nederlands profiel op ISO 19115 v13 2014</description>
    <reference>../../generic/ets-generic-bsxets.xq</reference>
    <version>2.0.0</version>
    <author>Geonovum</author>
    <creationDate>2017-09-12T20:50:53.937+02:00</creationDate>
    <lastEditor>Geonovum</lastEditor>
    <lastUpdateDate>2018-12-14T10:50:53.937+02:00</lastUpdateDate>
    <tags>
        <tag ref="EID70b94738-08db-47f0-baf1-5f312f88f2e3"/>
    </tags>
    <testDriver ref="EIDeb562f9f-00b0-4390-ae21-92145f2efa6b"/>
    <translationTemplateBundle ref="EID5417cef6-c926-4390-a033-299a8d0c19fe"/>
    <ParameterList name="ETF Standard Parameters for XML test objects">
        <parameter name="files_to_test" required="true">
            <defaultValue>.*</defaultValue>
            <description ref="TR.filesToTest"/>
            <allowedValues>.*</allowedValues>
            <type>string</type>
        </parameter>
        <parameter name="tests_to_execute" required="false">
            <defaultValue>.*</defaultValue>
            <description ref="TR.testsToExecute"/>
            <allowedValues>.*</allowedValues>
            <type>string</type>
        </parameter>
    </ParameterList>
  <supportedTestObjectTypes><testObjectType ref="EIDeb562f9f-00b0-4390-ae21-92145f2efa6b"/></supportedTestObjectTypes>
    <testModules>
        <TestModule id="EID9dd36c8c-b5fe-4667-8dee-a8289133f7ad">
            <label>IGNORE</label>
            <description>IGNORE</description>
            <parent ref="EID4a065dbd-dfbd-4428-8228-5e835523cc05"/>
            <testCases>
                <TestCase id="EID86a5621b-79be-4f6f-829d-87a0b6e19247">
                    <label>Schema validation</label>
                    <description>...</description>
                    <parent ref="EID9dd36c8c-b5fe-4667-8dee-a8289133f7ad"/>
                    <testSteps>
                        <TestStep id="EIDeb77f204-24fb-4d0a-a209-4a003ef8c35b">
                            <label>IGNORE</label>
                            <description>IGNORE</description>
                            <parent ref="EID9dd36c8c-b5fe-4667-8dee-a8289133f7ad"/>
                            <statementForExecution>not applicable</statementForExecution>
                            <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                            <testAssertions>
                                <TestAssertion id="EID52eadd27-bd59-487f-8f2a-35c4c8eee62c">
                                    <!--Schema.valid.XSD-->
                                    <label>XML Schema validation</label>
                                    <description/>
                                    <parent ref="EIDeb77f204-24fb-4d0a-a209-4a003ef8c35b"/>
                                    <expectedResult>NOT_APPLICABLE</expectedResult>
                                    <!-- Test Driver validates against xsi:schemaLocation and passes the errors as $validationErrors -->
                                    <!--expression>if (not($validationErrors)) then 'PASSED' else ('FAILED', for $error in $validationErrors return (local:addMessage('TR.validationError', map { 'text': $error })))</expression-->
                                    <!-- Use a static schema file, dummyschema.xsd (see  http://docs.basex.org/wiki/Validation_Module#validate:xsd-info ) -->
                                    <expression>
                                        let $allErrors := (
                                            for $file in $db
                                            return
                                                let $start := prof:current-ms()
                                                let $infos := validate:xsd-info($file, 'http://schemas.opengis.net/iso/19139/20060504/gmd/gmd.xsd' )
                                                let $duration := prof:current-ms()-$start
                                                let $logentry := local:log('Validating file ' || local:filename($file) || ': ' || $duration || ' ms')
                                                let $errors := count($infos)
                                                return
                                                if ($errors &gt; 0) then
                                                    (local:addMessage('TR.invalidSchema', map { 'filename': local:filename($file), 'count': string($errors) }),
                                                    for $info in $infos return local:addMessage('TR.xmlSchemaError', map { 'filename': local:filename($file), 'error': $info }))
                                                else ()
                                        )
                                        return
                                        (if ($allErrors) then 'FAILED' else 'PASSED',
                                        local:error-statistics('TR.filesWithErrors', count($allErrors[@ref eq 'TR.invalidSchema'])),
                                        $allErrors[position() le $limitErrors])
                                    </expression>
                                    <testItemType ref="EIDeb562f9f-00b0-4390-ae21-92145f2efa6b"/>
                                    <translationTemplates>
                                        <translationTemplate ref="TR.xmlSchemaError"/>
                                        <translationTemplate ref="TR.invalidSchema"/>
                                        <translationTemplate ref="TR.filesWithErrors"/>
                                        <translationTemplate ref="TR.xmlSchemaErrorRecord"/>
                                        <translationTemplate ref="TR.invalidSchemaRecord"/>
                                    </translationTemplates>
                                </TestAssertion>
                            </testAssertions>
                        </TestStep>
                    </testSteps>
                </TestCase>
            </testCases>
        </TestModule>
    </testModules>
</etf:ExecutableTestSuite>
