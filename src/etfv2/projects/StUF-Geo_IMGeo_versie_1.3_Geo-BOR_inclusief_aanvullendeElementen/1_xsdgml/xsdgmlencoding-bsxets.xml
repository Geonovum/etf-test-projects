<?xml version="1.0" encoding="UTF-8"?>
<etf:ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:etf="http://www.interactive-instruments.de/etf/2.0"
                         xmlns:ii="http://www.interactive-instruments.de"
                         id="EID822a3f0c-25ef-11e8-4452-09173f13e4c5"
                         xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 http://resources.etf-validator.net/schema/v2/service/service.xsd">
   <itemHash>bQ==</itemHash>
   <remoteResource>https://github.com/interactive-instruments/etf-ets-repository</remoteResource>
   <localPath>/auto</localPath>
   <label>Schema validatie StUF-Geo IMGeo versie 1.3 Geo-BOR inclusief aanvullende elementen</label>
   <description>Schema validatie voor StUF-Geo IMGeo versie 1.3 Geo-BOR inclusief aanvullende elementen</description>
   <reference>../../generic/ets-generic-bsxets.xq</reference>
   <version>1.3.1</version>
   <author>Geonovum</author>
   <creationDate>2018-02-07T12:00:00.000+02:00</creationDate>
   <lastEditor>Geonovum</lastEditor>
   <lastUpdateDate>2018-12-06T14:59:49.121+01:00</lastUpdateDate>
   <tags>
      <tag ref="EID1f3b85ac-1e82-4ec1-af30-75f340037dab"/>
   </tags>
   <testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
   <translationTemplateBundle ref="EID245c67e5-6d28-493e-9dc6-a23de3d81cc0"/>
   <ParameterList name="ETF Standard Parameters for XML test objects">
      <parameter name="files_to_test" required="true">
         <defaultValue>.*</defaultValue>
         <description ref="TR.filesToTest"/>
         <allowedValues>.*</allowedValues>
         <type>string</type>
      </parameter>
      <parameter name="tests_to_execute" required="false">
         <defaultValue>.*</defaultValue>
         <description ref="TR.testsToExecute"/>
         <allowedValues>.*</allowedValues>
         <type>string</type>
      </parameter>
   </ParameterList>
   <supportedTestObjectTypes>
      <!-- <testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
      <testObjectType ref="EID810fce18-4bf5-4c6c-a972-6962bbe3b76b"/> -->
      <testObjectType ref="EIDbec4dd69-72b9-498e-a693-88e3d59d2552"/>
      <testObjectType ref="EID14b4aa1d-6157-413d-8acc-f8a026d0d6dd"/>
   </supportedTestObjectTypes>
   <testModules>
      <TestModule id="EID822a3b1e-25ef-11e8-9490-09173f13e4c5">
         <label>XSD and GML profile validation</label>
         <description>XSD and GML profile</description>
         <parent ref="EID822a3f0c-25ef-11e8-4452-09173f13e4c5"/>
         <testCases>
            <TestCase id="EID822a433b-25ef-11e8-7701-09173f13e4c5">
               <label>Schema validation</label>
               <description>Schema validation</description>
               <parent ref="EID822a3b1e-25ef-11e8-9490-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EID822a40dd-25ef-11e8-1754-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EID822a3b1e-25ef-11e8-9490-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EID822a2e42-25ef-11e8-2114-09173f13e4c5">
                           <label>XML Schema validation</label>
                           <description/>
                           <parent ref="EID822a40dd-25ef-11e8-1754-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>
                                        let $allErrors := (
                                            for $file in $db
                                            return
                                                let $start := prof:current-ms()
                                                let $infos := validate:xsd-info($file, 'http://register.geostandaarden.nl/xmlschema/imgeo/1.3/imgeo0302/horizontaal/imgeo0302_msg_horizontaal.xsd' )
                                                let $duration := prof:current-ms()-$start
                                                let $logentry := local:log('Validating file ' || local:filename($file) || ': ' || $duration || ' ms')
                                                let $errors := count($infos)
                                                return
                                                if ($errors &gt; 0) then
                                                    (local:addMessage('TR.invalidSchema', map { 'filename': local:filename($file), 'count': string($errors) }),
                                                    for $info in $infos return local:addMessage('TR.xmlSchemaError', map { 'filename': local:filename($file), 'error': $info }))
                                                else ()
                                        )
                                        return
                                        (if ($allErrors) then 'FAILED' else 'PASSED',
                                        local:error-statistics('TR.filesWithErrors', count($allErrors[@ref eq 'TR.invalidSchema'])),
                                        $allErrors[position() le $limitErrors])
                                    </expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <translationTemplates>
                              <translationTemplate ref="TR.xmlSchemaError"/>
                              <translationTemplate ref="TR.invalidSchema"/>
                              <translationTemplate ref="TR.filesWithErrors"/>
                              <translationTemplate ref="TR.xmlSchemaErrorRecord"/>
                              <translationTemplate ref="TR.invalidSchemaRecord"/>
                           </translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase>
            <!-- <TestCase id="EID822a36c4-25ef-11e8-4151-09173f13e4c5">
               <label>GML profile encoding</label>
               <description>GML profile encoding</description>
               <parent ref="EID822a3b1e-25ef-11e8-9490-09173f13e4c5"/>
               <testSteps>
                  <TestStep id="EID822a41cf-25ef-11e8-1113-09173f13e4c5">
                     <label>IGNORE</label>
                     <description>IGNORE</description>
                     <parent ref="EID822a3b1e-25ef-11e8-9490-09173f13e4c5"/>
                     <statementForExecution>not applicable</statementForExecution>
                     <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
                     <testAssertions>
                        <TestAssertion id="EID822a1f3e-25ef-11e8-4289-09173f13e4c5">
                           <label>gml:name and gml:description</label>
                           <description>count(//gml:name)+count(//gml:description) = 0.</description>
                           <parent ref="EID822a41cf-25ef-11e8-1113-09173f13e4c5"/>
                           <expectedResult>NOT_APPLICABLE</expectedResult>
                           <expression>
    let $featuresWithErrors := $features[gml:name or gml:description][position() le $limitErrors]
    return
    (if ($featuresWithErrors) then 'FAILED' else 'PASSED',
    local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
    for $feature in $featuresWithErrors
    order by $feature/@gml:id
    return local:addMessage('TR.example.gmlNameOrDescriptionExists', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id)  }))
</expression>
                           <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                           <translationTemplates>
                              <translationTemplate ref="TR.example.gmlNameOrDescriptionExists"/>
                           </translationTemplates>
                        </TestAssertion>
                     </testAssertions>
                  </TestStep>
               </testSteps>
            </TestCase> -->
         </testCases>
      </TestModule>
   </testModules>
</etf:ExecutableTestSuite>
