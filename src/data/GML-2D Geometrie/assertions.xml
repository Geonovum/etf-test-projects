<Assertions>
<Group id="Other">
  <name>Tests</name>
  <version>0.1</version>
  <author>interactive instruments GmbH</author>
  <creationDate>2015-08-18T12:00:00.000+02:00</creationDate>
  <lastEditor>Clemens Portele</lastEditor>
  <lastUpdateDate>2015-08-18T12:00:00.000+02:00</lastUpdateDate>
</Group>
<Subgroup id="Other.Geometry">
  <name>Geometry tests</name>
</Subgroup>
<Assertion id="Other.Geometry.01" enabled="true" severity="error" mode="global">
<name>CRS</name>
<shortDescription>...</shortDescription>
<description>...</description>
<specReference>n/a</specReference>
<expression>
let $featuresWithErrors := $features[//@srsName[.!='http://www.opengis.net/def/crs/EPSG/0/28992']][position() le $limitErrors]
return
 (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $text := concat('CRS ',data(($feature//@srsName[.!='http://www.opengis.net/def/crs/EPSG/0/28992'])[1]),' is not http://www.opengis.net/def/crs/EPSG/0/28992.')
   return local:object-message($feature, $text))
</expression>
</Assertion>
<Assertion id="Other.Geometry.02" enabled="true" severity="error" mode="global">
<name>Valid GML geometry (2D)</name>
<shortDescription>Test geometry on being valid GML geometry for 2D</shortDescription>
<description>Test geometry on being valid GML geometry for 2D, all tests at once</description>
<specReference>GML 3</specReference>
<expression>
let $featuresWithErrors := $features[local:checkgeometry(., '111') != 'VVV'][position() le $limitErrors]
return
 (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   let $text := concat('invalid geometry test: ',local:checkgeometry($feature,'111'))
   return local:object-message($feature, $text))
</expression>
</Assertion>
</Assertions>
