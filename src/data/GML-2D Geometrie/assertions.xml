<Assertions>
<Group id="GML">
  <name>Geometry tests</name>
  <version>1.0</version>
  <author>interactive instruments GmbH, Geonovum</author>
  <creationDate>2015-08-18T12:00:00.000+02:00</creationDate>
  <lastEditor>Thijs Brentjens</lastEditor>
  <lastUpdateDate>2016-06-01T12:00:00.000+02:00</lastUpdateDate>
</Group>
<Subgroup id="GML.Geometry">
  <name>Geometry tests</name>
</Subgroup>
<!-- <Assertion id="GML.Geometry.01" enabled="true" severity="error" mode="global">
<name>CRS</name>
<shortDescription>...</shortDescription>
<description>...</description>
<specReference>n/a</specReference>
<expression>
let $featuresWithErrors := $features[//@srsName[.!='http://www.opengis.net/def/crs/EPSG/0/28992']][position() le $limitErrors]
return
 (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $text := concat('CRS ',data(($feature//@srsName[.!='http://www.opengis.net/def/crs/EPSG/0/28992'])[1]),' is not http://www.opengis.net/def/crs/EPSG/0/28992.')
   return local:object-message($feature, $text))
</expression>
</Assertion> -->
<Assertion id="GML.Geometry.01" enabled="true" severity="error" mode="global">
<name>Valid GML geometry (2D) General Validation</name>
<shortDescription>Test geometry on being valid GML geometry for 2D - General Validation</shortDescription>
<description>Test geometry on being valid GML geometry for 2D - General Validation</description>
<specReference>GML 3</specReference>
<expression>
let $featuresWithErrors := $features[local:checkgeometry(., '1') != 'VSS'][position() le $limitErrors]
return
 (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   let $text := concat('geometry is not valid: ',local:checkgeometry($feature,'1'))
   return local:object-message($feature, $text))
</expression>
</Assertion>
<Assertion id="GML.Geometry.02" enabled="true" severity="error" mode="global">
<name>Valid GML geometry (2D) Polygon Patch Connectivity</name>
<shortDescription>Test geometry on being valid GML geometry for 2D - Polygon Patch Connectivity</shortDescription>
<description>Test geometry on being valid GML geometry for 2D - Polygon Patch Connectivity</description>
<specReference>GML 3</specReference>
<expression>
let $featuresWithErrors := $features[local:checkgeometry(., '01') != 'SVS'][position() le $limitErrors]
return
 (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   let $text := concat('geometry is not valid: ',local:checkgeometry($feature,'01'))
   return local:object-message($feature, $text))
</expression>
</Assertion>
<Assertion id="GML.Geometry.03" enabled="true" severity="error" mode="global">
<name>Valid GML geometry (2D) Repetition of Position in CurveSegments</name>
<shortDescription>Test geometry on being valid GML geometry for 2D - Repetition of Position in CurveSegments</shortDescription>
<description>Test geometry on being valid GML geometry for 2D - Repetition of Position in CurveSegments</description>
<specReference>GML 3</specReference>
<expression>
let $featuresWithErrors := $features[local:checkgeometry(., '001') != 'SSV'][position() le $limitErrors]
return
 (local:statistics-info($featuresWithErrors),
  for $feature in $featuresWithErrors
   let $text := concat('geometry is not valid: ',local:checkgeometry($feature,'001'))
   return local:object-message($feature, $text))
</expression>
</Assertion>
</Assertions>
