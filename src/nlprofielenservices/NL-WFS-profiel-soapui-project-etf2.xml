<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Nederlands WFS profiel WFS 2_0_0 ISO19142 ETF2" resourceRoot="${projectDir}" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" id="174edf55-699b-446c-968c-1892a4d8d5bd" xmlns:con="http://eviware.com/soapui/config"><con:description><![CDATA[This test suite examines a web feature service against the requirements related to the Pre-Defined Dataset Download Service using ISO 19142 Web Feature Service and 19143 Filter Encoding in INSPIRE. This test suite only examines requirements that are specific to a Pre-Defined Dataset Download Service. <br/> <br/> The test suite is divided into three test modules. In the first module 'Initialization and basic checks', basic queries are send to the service to ensure the endpoints are available. Thereupon, metadata are gathered from the responses (i.e. available FeatureTypes, there namespaces, etc. ). The 'Capabilities' and the 'Stored Query' test modules contain the actual test cases, derived from the Abstract Test Cases. If a test case in the first module fails, the two other modules are skipped! <br/> <br/> There are a few test cases and test steps that are marked as 'technical test step' or 'technical test case' in the description. They are used to control the test execution flow of the steps. The description text of a technical test step indicates the test steps that are executed. If a technical test step fails, the other test steps, which have been called by the technical test step, should be checked first. To examine a reported issue, the assertion messages should be compared with the service responses which are included in the report. If the response contains an exception report, the request should be checked for 'incorrect' parameters (i.e. non-existing Feature Type ID). The test step description should refer to a point, from where the information has been gathered (i.e. from a previous request where the Feature Type ID was listed).  <br/> <br/> <b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/interactive-instruments/ets-repository/issues" target="_blank">in GitHub</a>. <br/> <br/> Known limitations are documented in the description of the applicable test case or test assertion. <br/> <br/> Source: <a href="http://inspire.ec.europa.eu/id/ats/download-service/3.1/wfs-pre-defined" target="_blank">Conformance Class 'Pre-defined WFS'</a>]]></con:description><con:settings><con:setting id="ProjectSettings@shadowPassword"/></con:settings>
<con:testSuite name="Initialization and basic checks" id="fbff121f-e4cb-468c-9d63-99c58dce0293">
    <con:description>Perform basic check to ensure all endpoints listed in the Capabilities are available, and initialize the Executable Test Suite with gathered information.

If this test case fails, all other test cases will be skipped!
Ensure that the schema locations and all endpoints can be queried!

Please note that for technical reasons this Executable Test Suite requires that schema locations must be accessible without any authentication mechanism.</con:description><con:settings>
      <con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">true</con:setting>
    </con:settings>
    <con:runType>SEQUENTIAL</con:runType>

    <con:properties><con:property><con:name>version</con:name><con:value>2.0.0</con:value></con:property><con:property><con:name>service</con:name><con:value>wfs</con:value></con:property></con:properties>

  <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Init TestProject" searchProperties="true" id="687acae4-af46-4afc-9b27-e352cfc0b446"><con:description>Technical test case. Initialize loggers and set credentials for the test run.</con:description><con:settings/><con:testStep name="Init TestProject" type="groovy" id="ab7f2160-7d2b-4313-88f5-a9ed08d77d5c">
        <con:settings/>
        <con:config><script>import de.interactive_instruments.xtf.*;
SOAPUI_I.init(log,context,testRunner);

// Also update credentials
TestSetup.init();

ProjectHelper ph = new ProjectHelper();

ph.getTestCase("AutoConfigure WFS").setPropertyValue("AutoConfigurationCompleted", "false");</script></con:config>
      </con:testStep><con:properties><con:property><con:name>qaf.ShortDescription</con:name><con:value/></con:property><con:property><con:name>qaf.Author</con:name><con:value>herrmann</con:value></con:property><con:property><con:name>qaf.CreationDate</con:name><con:value>2014-01-13T12:24:44.115+01:00</con:value></con:property><con:property><con:name>qaf.Version</con:name><con:value>1.0.0</con:value></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value/></con:property><con:property><con:name>qaf.ExpectedResults</con:name><con:value/></con:property><con:property><con:name>qaf.Status</con:name><con:value>IMPLEMENTED</con:value></con:property><con:property><con:name>qaf.LastUpdateDate</con:name><con:value>2014-01-13T14:10:42.862+01:00</con:value></con:property><con:property><con:name>etf.technicalStep</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Query Params" searchProperties="true" id="f7699a08-ecb3-4f93-afc9-650448302524" disabled="true"><con:description>Technical test case for updating query parameters</con:description><con:settings/><con:testStep type="groovy" name="UpdateQueryParams" id="8a9b24eb-721a-4a4f-8c00-bc47be24e65b"><con:settings/><con:config><script>// if any non-WMS parameters are found, add them to the GetCapabilities request
// author: Thijs Brentjens

import com.eviware.soapui.impl.wsdl.teststeps.*;

c = testRunner.getRunContext();

URL endpoint = new URL(c.expand('${#Project#serviceEndpoint}'));
if (endpoint.getQuery()) {
    def queryParams = endpoint.getQuery().split("&amp;");

    // default params for GetCapabilities:
    // filter out version
    def defaultParamsGetCaps = ["acceptversions","service","request","language"];

    for (p in queryParams) {
        for (d in defaultParamsGetCaps) {
            if (p.split("=")[0].toLowerCase() == d) {
                queryParams = queryParams - p;
            }
        }
        log.debug("Queryparams from serviceEndpoint cleaned. Aditional queryparams left: " + queryParams);
    }

    // For REST requests, add additional query parameters
    // Here for GetCapabilities only
    if (queryParams.length > 0) {
        // for GetCapabilities: update all requests with other parameters from the serviceEndpoint
        for( testSuite in testRunner.testCase.testSuite.project.getTestSuiteList() ) {
            for( testCase in testSuite.getTestCaseList() ) {
                for( testStep in testCase.getTestStepList() ) {
                    if( testStep instanceof HttpTestRequestStep ) {
                        // First: cleanup old extra params, if the tests have been saved with aditional params a previous time
                        if (testStep.getName()=="GetCapabilities") {
                            // first remove any other params
                            for (prop in testStep.getHttpRequest().getProperties()) {
                                    defaultParam = 0;
                                    log.debug("HTTP param: " + prop.getKey())
                                    for (d in defaultParamsGetCaps) {
                                    if (prop.getKey().toLowerCase() == d) {
                                        defaultParam = 1;
                                    }
                                }
                                // if not a defaultParam, remove it
                                if (defaultParam == 0) {
                                        testStep.getHttpRequest().removeProperty(prop.getKey());
                                        log.debug("Removed non-standard query parameter from the request: " + prop.getKey())
                                }
                            }
                            // now add the extra params from the query string
                            for (q in queryParams) {
                                    def pair = q.split("=");
                                    if (pair.length > 1) {
	                                    testStep.getHttpRequest().addProperty(pair[0]);
	                                    testStep.getHttpRequest().setPropertyValue(pair[0], pair[1]);
	                                    log.debug("Added non-standard query parameter for the Getcapabilities requests: " + pair[0] + "=" + pair[1])
	                       		}
                            }
                        }
                    }
                }
            }
        };
    }

}

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Service is available" searchProperties="true" id="6fbb0ce2-7722-4c65-af0e-effdacfa076e"><con:description>Check if the service is available.</con:description><con:settings/><con:testStep name="GetCapabilities" type="httprequest" id="91449969-a9b9-470a-8a6f-43cb001a0a0f">
        <con:settings/>
        <con:config method="GET" name="GetCapabilities" timeout="0" xsi:type="con:HttpRequest" sslKeystore="" id="9232945c-3ae9-43d8-b409-d13a84cee786" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:description>Implementation note: The GetCapabilities request includes both the "AcceptVersions" and the "version" parameters. Strictly, for WFS 2.0 / OWS Common 1.1, only the "AcceptVersions" parameter is specified. However, for backward compatibility, the "version" parameter, which has been used in earlier versions of the WFS standard, is still included as a deprecated parameter in OWS Common 1.1. OWS Common 1.1.0 states: "A server may also optionally implement the old-style version negotiation mechanism so that old clients that send GetCapabilities requests containing a 'version' parameter can be served." To cover both the old and the newer version negotiation approach, the request includes both parameters.</con:description><con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file"/><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#serviceEndpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="Response SLA Assertion" name="30 seconds timeout" id="f4835519-c036-4bdb-a8fa-641c29d2c8ff"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" name="Expect no exception" id="befdb812-5725-403d-bc81-678b76c63f29"/><con:assertion type="Valid HTTP Status Codes" id="6920c40a-e2ff-40c7-bbda-8531e4354b32" name="HTTP status code 200 is returned"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="569e5be5-a54e-436d-8328-d0328fb8c03f" name="Expect a Capabilities root element"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:WFS_Capabilities", "TR.missingCapabilitiesRootElement");</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="03534d3b-47a5-4f39-9231-812a0ae13b90" name="Expect Capabilites in version 2.0.0"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.equals("/wfs:WFS_Capabilities/@version", "Capabilities version", "2.0.0");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>


            <con:parameter>
              <con:name>REQUEST</con:name>
              <con:value>GetCapabilities</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>GetCapabilities</con:default>
              <con:description xsi:nil="true"/>
            </con:parameter>
          <con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="Transfer Capabilities, service and version" id="4a27fb04-e9aa-4cf0-ada2-f62f11abb8db"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Capabilities</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:targetType>capabilities</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>service</con:name><con:sourceType>service</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>service</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>version</con:name><con:sourceType>version</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>version</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>capabilities</con:name><con:value><![CDATA[<wfs:WFS_Capabilities version="2.0.0" xsi:schemaLocation="http://www.opengis.net/wfs/2.0 http://geodata.nationaalgeoregister.nl/schemas/wfs/2.0/wfs.xsd http://inspire.ec.europa.eu/schemas/inspire_dls/1.0 http://inspire.ec.europa.eu/schemas/inspire_dls/1.0/inspire_dls.xsd" updateSequence="1913" xmlns:wfs="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wfs/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:inspire_dls="http://inspire.ec.europa.eu/schemas/inspire_dls/1.0" xmlns:inspire_common="http://inspire.ec.europa.eu/schemas/common/1.0" xmlns:natura2000="http://natura2000.geonovum.nl">
   <ows:ServiceIdentification>
      <ows:Title>Natura2000</ows:Title>
      <ows:Abstract>Samenvatting: Natura 2000 is het samenhangend netwerk van beschermde natuurgebieden in de Europese Unie bestaande uit Vogelrichtlijn- en Habitatrichtlijngebieden. Natura 2000-gebieden zijn een samenvoeging van beide en de daarin gelegen beschermde natuurmonumenten. In Nederland gaat het om 163 gebieden waarvan drie mariene gebieden in de Exclusieve Economische Zone (EEZ) op de Noordzee (incl. een voorgenomen Vogelrichtlijngebied in de EEZ). De Vogelrichtlijngebieden zijn merendeels aangewezen in de periode 1986-2000. De Habitatrichtlijngebieden worden aangewezen met de aanwijzing van de betreffende Natura 2000-gebieden. Deze service bevat de grenzen van de definitief aangewezen gebieden en de grenzen conform het ontwerp-besluit van de meeste overige gebieden. Voor enkele Habitatrichtlijngebieden waarvoor nog geen ontwerp-besluiten zijn gepubliceerd, bevat deze service de grenzen zoals die aan de Europese Commissie gemeld zijn.</ows:Abstract>
      <ows:Keywords>
         <ows:Keyword>Natuur</ows:Keyword>
         <ows:Keyword>Habitatrichtlijn</ows:Keyword>
         <ows:Keyword>Vogelrichtlijn</ows:Keyword>
         <ows:Keyword>Natuurmonumenten</ows:Keyword>
         <ows:Keyword>Natura2000</ows:Keyword>
         <ows:Keyword>Beschermde gebieden</ows:Keyword>
      </ows:Keywords>
      <ows:ServiceType>WFS</ows:ServiceType>
      <ows:ServiceTypeVersion>2.0.0</ows:ServiceTypeVersion>
      <ows:Fees>NONE</ows:Fees>
      <ows:AccessConstraints>otherRestrictions;http://creativecommons.org/publicdomain/mark/1.0/deed.nl;Geen beperkingen</ows:AccessConstraints>
   </ows:ServiceIdentification>
   <ows:ServiceProvider>
      <ows:ProviderName>PDOK</ows:ProviderName>
      <ows:ServiceContact>
         <ows:IndividualName>KlantContactCenter PDOK</ows:IndividualName>
         <ows:PositionName>pointOfContact</ows:PositionName>
         <ows:ContactInfo>
            <ows:Phone>
               <ows:Voice/>
               <ows:Facsimile/>
            </ows:Phone>
            <ows:Address>
               <ows:DeliveryPoint/>
               <ows:City>Apeldoorn</ows:City>
               <ows:AdministrativeArea/>
               <ows:PostalCode/>
               <ows:Country>Nederland</ows:Country>
               <ows:ElectronicMailAddress>BeheerPDOK@kadaster.nl</ows:ElectronicMailAddress>
            </ows:Address>
         </ows:ContactInfo>
      </ows:ServiceContact>
   </ows:ServiceProvider>
   <ows:OperationsMetadata>
      <ows:Operation name="GetCapabilities">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="AcceptVersions">
            <ows:AllowedValues>
               <ows:Value>1.0.0</ows:Value>
               <ows:Value>1.1.0</ows:Value>
               <ows:Value>2.0.0</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="AcceptFormats">
            <ows:AllowedValues>
               <ows:Value>text/xml</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="DescribeFeatureType">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="GetFeature">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resultType">
            <ows:AllowedValues>
               <ows:Value>results</ows:Value>
               <ows:Value>hits</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
               <ows:Value>GML2</ows:Value>
               <ows:Value>KML</ows:Value>
               <ows:Value>application/gml+xml; version=3.2</ows:Value>
               <ows:Value>application/json</ows:Value>
               <ows:Value>application/vnd.google-earth.kml xml</ows:Value>
               <ows:Value>application/vnd.google-earth.kml+xml</ows:Value>
               <ows:Value>csv</ows:Value>
               <ows:Value>gml3</ows:Value>
               <ows:Value>gml32</ows:Value>
               <ows:Value>json</ows:Value>
               <ows:Value>text/xml; subtype=gml/2.1.2</ows:Value>
               <ows:Value>text/xml; subtype=gml/3.1.1</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Constraint name="PagingIsTransactionSafe">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </ows:Constraint>
         <ows:Constraint name="CountDefault">
            <ows:NoValues/>
            <ows:DefaultValue>15000</ows:DefaultValue>
         </ows:Constraint>
      </ows:Operation>
      <ows:Operation name="GetPropertyValue">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resolve">
            <ows:AllowedValues>
               <ows:Value>none</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="ListStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Operation name="DescribeStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Constraint name="ImplementsBasicWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTransactionalWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsLockingWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="KVPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="XMLEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="SOAPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsInheritance">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsRemoteResolve">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsResultPaging">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsStandardJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsSpatialJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTemporalJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsFeatureVersioning">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ManageStoredQueries">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="PagingIsTransactionSafe">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="QueryExpressions">
         <ows:AllowedValues>
            <ows:Value>wfs:Query</ows:Value>
            <ows:Value>wfs:StoredQuery</ows:Value>
         </ows:AllowedValues>
      </ows:Constraint>
      <ows:ExtendedCapabilities>
         <inspire_dls:ExtendedCapabilities>
            <inspire_common:MetadataUrl>
               <inspire_common:URL>http://www.nationaalgeoregister.nl/geonetwork/srv/eng/csw?service=CSW&amp;version=2.0.2&amp;request=GetRecordById&amp;outputschema=http://www.isotc211.org/2005/gmd&amp;elementsetname=full&amp;id=32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:URL>
               <inspire_common:MediaType>application/vnd.ogc.csw.GetRecordByIdResponse_xml</inspire_common:MediaType>
            </inspire_common:MetadataUrl>
            <inspire_common:SupportedLanguages>
               <inspire_common:DefaultLanguage>
                  <inspire_common:Language>eng</inspire_common:Language>
               </inspire_common:DefaultLanguage>
            </inspire_common:SupportedLanguages>
            <inspire_common:ResponseLanguage>
               <inspire_common:Language>eng</inspire_common:Language>
            </inspire_common:ResponseLanguage>
            <inspire_dls:SpatialDataSetIdentifier>
               <inspire_common:Code>32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:Code>
            </inspire_dls:SpatialDataSetIdentifier>
         </inspire_dls:ExtendedCapabilities>
      </ows:ExtendedCapabilities>
   </ows:OperationsMetadata>
   <FeatureTypeList>
      <FeatureType>
         <Name>natura2000:natura2000</Name>
         <Title>natura2000</Title>
         <Abstract>Natura2000 Beschermde gebieden</Abstract>
         <ows:Keywords>
            <ows:Keyword>Beschermde gebieden</ows:Keyword>
         </ows:Keywords>
         <DefaultCRS>urn:ogc:def:crs:EPSG::28992</DefaultCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4326</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4258</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3035</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3034</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3857</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25831</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25832</OtherCRS>
         <ows:WGS84BoundingBox>
            <ows:LowerCorner>2.682936644143043 50.72928077346555</ows:LowerCorner>
            <ows:UpperCorner>7.320942623544802 55.65692322166641</ows:UpperCorner>
         </ows:WGS84BoundingBox>
         <MetadataURL xlink:href="http://www.nationaalgeoregister.nl/geonetwork/srv/dut/xml.metadata.get?uuid=8829e5dd-c861-4639-a6c8-fdbb6e3440d2"/>
      </FeatureType>
   </FeatureTypeList>
   <fes:Filter_Capabilities>
      <fes:Conformance>
         <fes:Constraint name="ImplementsQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <!--Not functioning, only used for passing the 'OPTIONAL' test cases for INSPIRE-->
         <fes:Constraint name="ImplementsMinimumXPath">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsAdHocQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsFunctions">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsVersionNav">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSorting">
            <ows:AllowedValues>
               <ows:Value>ASC</ows:Value>
               <ows:Value>DESC</ows:Value>
            </ows:AllowedValues>
            <ows:DefaultValue>ASC</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsExtendedOperators">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
      </fes:Conformance>
      <fes:Id_Capabilities>
         <fes:ResourceIdentifier name="fes:ResourceId"/>
      </fes:Id_Capabilities>
      <fes:Scalar_Capabilities>
         <fes:LogicalOperators/>
         <fes:ComparisonOperators>
            <fes:ComparisonOperator name="PropertyIsLessThan"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThan"/>
            <fes:ComparisonOperator name="PropertyIsLessThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsNotEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsLike"/>
            <fes:ComparisonOperator name="PropertyIsBetween"/>
            <fes:ComparisonOperator name="PropertyIsNull"/>
            <fes:ComparisonOperator name="PropertyIsNil"/>
         </fes:ComparisonOperators>
      </fes:Scalar_Capabilities>
      <fes:Spatial_Capabilities>
         <fes:GeometryOperands>
            <fes:GeometryOperand name="gml:Envelope"/>
            <fes:GeometryOperand name="gml:Point"/>
            <fes:GeometryOperand name="gml:MultiPoint"/>
            <fes:GeometryOperand name="gml:LineString"/>
            <fes:GeometryOperand name="gml:MultiLineString"/>
            <fes:GeometryOperand name="gml:Polygon"/>
            <fes:GeometryOperand name="gml:MultiPolygon"/>
            <fes:GeometryOperand name="gml:MultiGeometry"/>
         </fes:GeometryOperands>
         <fes:SpatialOperators>
            <fes:SpatialOperator name="Disjoint"/>
            <fes:SpatialOperator name="Equals"/>
            <fes:SpatialOperator name="DWithin"/>
            <fes:SpatialOperator name="Beyond"/>
            <fes:SpatialOperator name="Intersects"/>
            <fes:SpatialOperator name="Touches"/>
            <fes:SpatialOperator name="Crosses"/>
            <fes:SpatialOperator name="Within"/>
            <fes:SpatialOperator name="Contains"/>
            <fes:SpatialOperator name="Overlaps"/>
            <fes:SpatialOperator name="BBOX"/>
         </fes:SpatialOperators>
      </fes:Spatial_Capabilities>
      <fes:Temporal_Capabilities>
         <fes:TemporalOperands>
            <fes:TemporalOperand name="gml:TimeInstant"/>
            <fes:TemporalOperand name="gml:TimePeriod"/>
         </fes:TemporalOperands>
         <fes:TemporalOperators>
            <fes:TemporalOperator name="After"/>
            <fes:TemporalOperator name="Before"/>
            <fes:TemporalOperator name="Begins"/>
            <fes:TemporalOperator name="BegunBy"/>
            <fes:TemporalOperator name="TContains"/>
            <fes:TemporalOperator name="During"/>
            <fes:TemporalOperator name="TEquals"/>
            <fes:TemporalOperator name="TOverlaps"/>
            <fes:TemporalOperator name="Meets"/>
            <fes:TemporalOperator name="OverlappedBy"/>
            <fes:TemporalOperator name="MetBy"/>
            <fes:TemporalOperator name="EndedBy"/>
         </fes:TemporalOperators>
      </fes:Temporal_Capabilities>
      <fes:Functions>
         <fes:Function name="abs">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:long</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_4">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="acos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AddCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Affine">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scalex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaley">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="shearx">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="sheary">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatey">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Aggregate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="aggregationAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="function">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="singlePass">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="groupByAttributes">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Area">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="area2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AreaGrid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="envelope">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asMultiGeometry">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="x">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="y">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandMerge">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverages">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transformChoice">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandSelect">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="SampleDimensions">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="VisibleSampleDimension">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BarnesSurface">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="valueAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataLimit">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="convergence">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="passes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="minObservations">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxObservationDistance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="noDataValue">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="queryBuffer">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="between">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="low">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="high">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundary">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundaryDimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="buffer">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BufferFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="attributeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="bufferWithSegments">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="numberOfSegments">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Categorize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="succeeding or preceding">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ceil">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="centroid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="classify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifer">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Clip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CollectGeometries">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Average">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Count">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="Collection_Max">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Median">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Min">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Sum">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Concatenate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="text">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="contains">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Contour">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="levels">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interval">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="simplify">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="smooth">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convert">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convexHull">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ConvolveCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernel">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelRadius">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="cos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Count">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CoverageClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CropCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cropShape">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="crosses">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateParse">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dateString">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="difference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="double2bool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="env">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="variable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="envelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="EqualInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExact">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExactTolerance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="tolarance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exp">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exteriorRing">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Feature">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="typeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FeatureClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="floor">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FormatDateTimezone">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="timezone">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geometry">
            <fes:Returns>gml:AbstractGeometryType</fes:Returns>
         </fes:Function>
         <fes:Function name="geometryType">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomFromWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomLength">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getGeometryN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getID">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="getX">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getY">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getz">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Grid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="vertexSpacing">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Heatmap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="radiusPixels">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="weightAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="id">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="IEEEremainder">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="if_then_else">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="condition">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="then">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="else">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="candidate">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="v">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in10">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in10">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in2">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in3">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in4">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in5">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in6">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in7">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in8">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in9">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="InclusionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2bbool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2ddouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorRingN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="n">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Interpolate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data value pairs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="IntersectionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="first attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="intersectionMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="percentagesEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="areasEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isClosed">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isCoverage">
            <fes:Returns>xs:boolean</fes:Returns>
         </fes:Function>
         <fes:Function name="isEmpty">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isInstanceOf">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isLike">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isNull">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isometric">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="extrusion">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isRing">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isSimple">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isValid">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Jenks">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="length">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="list">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="item">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="log">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSGeocode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSMeasure">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSSegment">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="mincircle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minimumdiameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minrectangle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="modulo">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="MultiplyCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="NormalizeCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="not">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="logicValue">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="notEqualTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="minus">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="decimal">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="separator">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numGeometries">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numInteriorRing">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numPoints">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="octagonalenvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="offset">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetX">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetY">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="overlaps">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="argumentName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="values">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseBoolean">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseInt">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseLong">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pi">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="PointBuffers">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="center">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distances">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="quadrantSegments">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pointN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PointStacker">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cellSize">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="normalize">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveLocation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PolygonExtraction">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="insideEdges">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pow">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="base">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="exponent">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="property">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PropertyExists">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Quantile">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Query">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="filter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="random">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="RangeLookup">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputPixelValues">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterAsPointCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="emisphere">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classification">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="source">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bands">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifier">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mask">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="useROIAccessor">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="statistics">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="minbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="numbins">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rangeData">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="localStats">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Recode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RectangularClip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relatePattern">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Reproject">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="forcedCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rescaleToPixels">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultUnit">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaleFactor">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="rescalingMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rint">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="roundDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ScaleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="xScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="xTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="setCRS">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="CRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Simplify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveTopology">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Snap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sqrt">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StandardDeviation">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strCapitalize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strConcat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="string2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEndsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="postfix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEqualsIgnoreCase">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="stringTemplate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="input">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="template">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLastIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLength">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strMatches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strReplace">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="search">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="replace">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="all">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strStartsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="prefix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstring">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="endIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstringStart">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToLowerCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToUpperCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="character">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strURLEncode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="encodeable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="formUrlEncode">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StyleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="style">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="symDifference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="tan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDegrees">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDirectPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ToEnvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toLineString">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="parameter">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toRadians">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="degree">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="touches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toXlinkHref">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="REFERENCE_VALUE">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Transform">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transform">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="TransparencyFill">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="union">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UnionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UniqueInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorToRaster">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="title">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="vertices">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Vocab">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="vocab">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="within">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
      </fes:Functions>
   </fes:Filter_Capabilities>
</wfs:WFS_Capabilities>]]></con:value></con:property><con:property><con:name>service</con:name><con:value>wfs</con:value></con:property><con:property><con:name>version</con:name><con:value>2.0.0</con:value></con:property><con:property><con:name>qaf.ShortDescription</con:name><con:value/></con:property><con:property><con:name>qaf.Author</con:name><con:value>herrmann</con:value></con:property><con:property><con:name>qaf.CreationDate</con:name><con:value>2014-01-13T12:24:44.124+01:00</con:value></con:property><con:property><con:name>qaf.Version</con:name><con:value>1.0.0</con:value></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value/></con:property><con:property><con:name>qaf.ExpectedResults</con:name><con:value/></con:property><con:property><con:name>qaf.Status</con:name><con:value>IMPLEMENTED</con:value></con:property><con:property><con:name>qaf.LastUpdateDate</con:name><con:value>2014-01-13T14:10:42.863+01:00</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetCapabilities is schema valid" searchProperties="true" id="fbb5f884-2f31-455d-b002-ecb9d21316d4" disabled="true"><con:description>Validate Capabilites response against xsi:schemaLocation.</con:description><con:settings/><con:testStep name="GetCapabilities" type="httprequest" id="197fa9da-ac8e-4590-baf6-9158e64fa02f">
        <con:settings/>
        <con:config method="GET" name="GetCapabilities" timeout="0" xsi:type="con:HttpRequest" id="c375379a-22cf-4ffc-815c-dac5c42e9066" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#serviceEndpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="OwsExceptionReportAssertion" name="Expect no exception" id="4fd8c644-0d75-44bc-854d-2fbc1ec5c4f6"/><con:assertion type="Valid HTTP Status Codes" id="687b5ff0-ce72-4e65-969c-cf26edfe62a5" name="HTTP status code 200 is returned"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="7888b0f9-2dd3-43a0-9a39-b10e47fcce09" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="6a42720a-992a-4f82-ab28-79222ce08829" name="xsi:schemaLocation attribute exists"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/*:WFS_Capabilities/@*:schemaLocation", "TR.missingSchemaLocation");</scriptText></con:configuration></con:assertion><con:assertion type="Simple Schema Validator" name="Response validates against schema" id="7ba7a86e-95d5-48ac-8232-6e8f15c01858"><con:configuration><pathToXSD>xsi:schemaLocation</pathToXSD></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>


            <con:parameter>
              <con:name>REQUEST</con:name>
              <con:value>GetCapabilities</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>GetCapabilities</con:default>
              <con:description xsi:nil="true"/>
            </con:parameter>
          <con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep><con:properties><con:property><con:name>qaf.ShortDescription</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.Author</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.CreationDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.Version</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.ExpectedResults</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.Status</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.LastUpdateDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Operation endpoints and featuretypes are available" searchProperties="true" id="85f7f7f5-ecab-4522-981d-a15f1dee45aa"><con:description>Check if the endpoints from the Capabilites are accesable and if basic requirements are met to query the service. The first found FeatureType and the first found OutputFormat from the Capabilities are taken for one GetFeature and one DescribeFeatureType request. This test case will most likely fail if FeatureTypes or OutputFormats are listed in the (manually edited) Capabilities document which the underlying service implementation is not capabile to serve.  </con:description><con:settings/><con:testStep type="properties" name="Transfer_Properties" id="09b3677c-71dc-4e63-914f-88a9dd3001ed"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>featureTypeName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>outputFormat</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>featureTypeNamespace</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>featureTypeNamespacePrefix</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep name="GetCapabilities" type="httprequest" id="3f1ec508-d9e5-4e8e-b2e7-8649fd8a739e">
        <con:settings/>
        <con:config method="GET" name="GetCapabilities" timeout="0" xsi:type="con:HttpRequest" id="9c7389bb-59db-40c1-b327-cb998ad46500" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:description>Request Capabilities, expect a Capabilites document is returned which lists at least one usable FeatureType.</con:description><con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#serviceEndpoint}</con:endpoint>
          <con:request/>
           <con:assertion type="Response SLA Assertion" name="30 seconds timeout" id="88a3544e-3576-4ef2-99cc-2e22c839eebe"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="88f234f8-90c1-44e8-b828-8ae59911aa7f" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="cd7f7f76-814e-455f-98ab-be5c39010347" name="At least one FeatureType is listed"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*;

import de.interactive_instruments.xtf.*;
ProjectHelper ph = new ProjectHelper();
// Thijs: try to parse the excludeFeatureTypes property. Throws an exception if not set, so make it an empty string then.
// TODO: can this be done nicer?
try {
    excludeFeatureTypes = Util.getProjectProperty("excludeFeatureTypes");
} catch (error) {
    excludeFeatureTypes = ""
}
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("(//wfs:FeatureTypeList/wfs:FeatureType[not(contains(',"+excludeFeatureTypes+",',concat(',',./wfs:Name,',')))]/wfs:Name)[1]");
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="51109c23-673c-46b4-b143-d1ae7eb5b40d" name="FeatureTypep prefixes can be resolved"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.notExists(" //wfs:FeatureType[1]/wfs:Name[not(namespace::*[name()=substring-before(//wfs:FeatureType[1]/wfs:Name, ':')])] ", "TR.featureTypeUnknownNamespace")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="810594fa-d3b3-414e-8cee-830f05980533" name="At least one OutputFormat is listed"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("//*:FeatureType[1]/*:OutputFormats/*:Format, /*:WFS_Capabilities/*:OperationsMetadata/*:Operation[@name='GetFeature']/*:Parameter[@name='outputFormat']/*:AllowedValues/*:Value", "TR.noOutputFormats");</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="9674d207-2852-4f0b-b343-0cff1b667bae" name="Root element is WFS_Capabilties"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:WFS_Capabilities", "TR.missingCapabilitiesRootElement");</scriptText></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="16c98dfd-7061-4e2b-812c-5ae28dab3a62" name="Service does not return an Exception report"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>


            <con:parameter>
              <con:name>REQUEST</con:name>
              <con:value>GetCapabilities</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>GetCapabilities</con:default>
              <con:description xsi:nil="true"/>
            </con:parameter>
          <con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="Select one FeatureType" id="3d6907c8-ffef-4761-a540-7e4e67170eca"><con:description>Extract FeatureType name, namespace, namespace prefix and an OutputFormat</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Extract name of FeatureType</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace ows='http://www.opengis.net/ows/1.1';
declare namespace xlink='http://www.w3.org/1999/xlink';

(//wfs:FeatureTypeList/wfs:FeatureType[not(contains(',${#Project#excludeFeatureTypes},',concat(',',./wfs:Name,',')))]/wfs:Name)[1]
</con:sourcePath><con:targetType>FirstFeatureTypeName</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" entitize="false"><con:name>Extract OutputFormat of FeatureType</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>if (exists(//*:FeatureType['${#Project#FirstFeatureTypeName}']/*:OutputFormats/*:Format))
then //*:FeatureType['${#Project#FirstFeatureTypeName}']/*:OutputFormats/*:Format
else  /*:WFS_Capabilities/*:OperationsMetadata/*:Operation[@name='GetFeature']/*:Parameter[@name='outputFormat']/*:AllowedValues/*:Value[1]</con:sourcePath><con:targetType>outputFormat</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="true" useXQuery="false" entitize="false" transferChildNodes="false" transferToAll="false" ignoreEmpty="true"><con:name>Extract namespace of FeatureType</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>//*:FeatureType['${#Project#FirstFeatureTypeName}']/*:Name/namespace::*[name()=substring-before(//*:FeatureType['${#Project#FirstFeatureTypeName}']/*:Name, ':')]</con:sourcePath><con:targetType>featureTypeNamespace</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>Extract namespace prefix</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>substring-before(//*:FeatureType['${#Project#FirstFeatureTypeName}']/*:Name, ':')</con:sourcePath><con:targetType>featureTypeNamespacePrefix</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Activate Operations" id="d1a8b303-0a4c-4a95-a014-6631e765e258"><con:description>Technical test step, which extracts the endpoints from the Capabilities and executes the test steps 'GetFeature' and 'DescribeFeatureType' with the first found FeatureTypeName, found in the Capabilities (previous test step 'GetCapabilities').</con:description><con:settings/><con:config><script>import de.interactive_instruments.xtf.*;
SOAPUI_I.init(log,context,testRunner);
import com.eviware.soapui.support.XmlHolder;

def ph = new ProjectHelper();

def operations = ['GetFeature', 'DescribeFeatureType', 'GetPropertyValue', 'ListStoredQueries', 'DescribeStoredQueries'];
def checkedOperations = ['GetFeature', 'DescribeFeatureType'];
ph.disableTestSteps(checkedOperations);

XmlHolder capResp = ph.getTestStepResult("GetCapabilities");

for(operation in operations) {
	String getEndpt=Util.getHttpGetOnlineResourceForOperation(capResp, operation);
	if(getEndpt!=null) {
		def testStep = testRunner.testCase.getTestStepByName(operation)
		if(testStep!=null) {
			testStep.setDisabled(false);
		}
		Util.setProjectProperty(testRunner, "endpt."+operation+".Get", getEndpt);
	}
	String postEndpt=Util.getHttpPostOnlineResourceForOperation(capResp, operation);
	if(postEndpt!=null) {
		Util.setProjectProperty(testRunner, "endpt."+operation+".Post", postEndpt);
	}
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetFeature" id="ba6663f9-895d-402a-bafa-e90749a028ef"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetFeature" id="b090b97d-9a18-4d14-b7af-b7d2a28456da" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Request the first found FeatureType from the Capabilities to check if the GetFeature endpoint is available. Called by 'Activate Operations'. Note</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.GetFeature.Get}</con:endpoint><con:request/><con:assertion type="OwsExceptionReportAssertion" name="Expect no exception" id="0045a266-6fee-4b74-bcab-ad5c0ea54d2b"/><con:assertion type="Valid HTTP Status Codes" id="63cc9735-795e-4c25-94ea-14580ffa7135" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="cb5c9a23-4f98-4cf0-982e-7736dd8294dc" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="178c5fab-1c33-437b-92bc-103283517d26" name="Root element is FeatureCollection"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*

Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:FeatureCollection", "TR.missingFeatureCollectionRootElement");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetFeature</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>RESULTTYPE</con:name><con:value>hits</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>TYPENAMES</con:name><con:value>${#Project#FirstFeatureTypeName}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>OUTPUTFORMAT</con:name><con:value>${Transfer_Properties#outputFormat}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>NAMESPACES</con:name><con:value>xmlns(${Transfer_Properties#featureTypeNamespacePrefix},${Transfer_Properties#featureTypeNamespace})</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="DescribeFeatureType" id="5e3c25a5-9399-4749-863f-b23b6f2dba2e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="DescribeFeatureType" id="2189d4c1-6f64-4be8-b28c-5828e1ff9b96" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Request the first found OutputFormat from the Capabilities to check if the DescribeFeatureType endpoint is available. This test step will most likely fail, if the Output Format is listed in the Capabilities but not supported by the implementing service. If the service is capable to serve the requested Output Format  but rejects the request, there might be an issue with the encoding of whitespaces ( %20 ) from the request. Called by 'Activate Operations'.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#endpt.GetFeature.Get}</con:endpoint><con:request/><con:assertion type="OwsExceptionReportAssertion" name="Expect no exception" id="db8b4839-cfcd-462d-8c7b-661d9fbb8983"/><con:assertion type="Valid HTTP Status Codes" id="bf2d8d12-39b3-424a-8919-756b7f95cdb5" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ea9c0cb8-6b3a-44f2-bacc-e3f10b1e8765" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b206debf-9011-452c-871b-3ee5b5d3dc9e" name="Root element is schema"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/*:schema", "TR.missingSchemaRootElement");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>DescribeFeatureType</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>OUTPUTFORMAT</con:name><con:value>application/gml+xml; version=3.2</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>qaf.ShortDescription</con:name><con:value/></con:property><con:property><con:name>qaf.Author</con:name><con:value>herrmann</con:value></con:property><con:property><con:name>qaf.CreationDate</con:name><con:value>2014-01-13T12:24:44.130+01:00</con:value></con:property><con:property><con:name>qaf.Version</con:name><con:value>1.0.0</con:value></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value/></con:property><con:property><con:name>qaf.ExpectedResults</con:name><con:value/></con:property><con:property><con:name>qaf.Status</con:name><con:value>IMPLEMENTED</con:value></con:property><con:property><con:name>qaf.LastUpdateDate</con:name><con:value>2014-01-13T14:10:42.866+01:00</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="2" name="AutoConfigure WFS" searchProperties="true" id="b28879eb-19fc-4bad-b0bb-6c7a6ace8e4c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>Technical test case. Parse GetCapabilities and DescribeFeatureType responses for meta data and check the number of available Features.
The gathered information are used in other technical (scripted) test cases. In most cases ALL other TestCases will fail if the TestSetup phase has not been completed.</con:description><con:settings><con:setting id="HttpSettings@socket_timeout">1800000</con:setting></con:settings>



      <con:properties><con:property><con:name>qaf.ShortDescription</con:name><con:value/></con:property><con:property><con:name>qaf.Author</con:name><con:value>herrmann</con:value></con:property><con:property><con:name>qaf.CreationDate</con:name><con:value>2014-01-13T12:24:44.129+01:00</con:value></con:property><con:property><con:name>qaf.Version</con:name><con:value>1.0.0</con:value></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value/></con:property><con:property><con:name>qaf.ExpectedResults</con:name><con:value/></con:property><con:property><con:name>qaf.Status</con:name><con:value>IMPLEMENTED</con:value></con:property><con:property><con:name>qaf.LastUpdateDate</con:name><con:value>2014-01-13T14:10:42.865+01:00</con:value></con:property><con:property><con:name>etf.technicalStep</con:name><con:value>true</con:value></con:property><con:property><con:name>AutoConfigurationCompleted</con:name><con:value>true</con:value></con:property></con:properties>

    <con:testStep type="properties" name="Transfer_Properties" id="9c33400a-30ee-4ca1-92a9-57157bf262e1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>featureTypeName</con:name><con:value>natura2000:natura2000</con:value></con:property><con:property><con:name>version</con:name><con:value>2.0.0</con:value></con:property><con:property><con:name>outputFormat</con:name><con:value>text/xml; subtype=gml/3.2</con:value></con:property><con:property><con:name>FT.NAMESPACES.X</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FT.NAMESPACES.GET</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FT.PROPERTY.NAME</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FT.NAME</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FT.PREFIX</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FT.NAMESPACE</con:name><con:value/></con:property><con:property><con:name>FT.NAMESPACES</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>featureTypeNamespaceWfs2</con:name><con:value>xmlns(natura2000,http://natura2000.geonovum.nl)</con:value></con:property></con:properties></con:config></con:testStep><con:testStep name="GetCapabilities" type="httprequest" id="5e825be0-997d-4d09-bf82-e6b9139682bf">
        <con:settings/>
        <con:config method="GET" name="GetCapabilities" timeout="0" xsi:type="con:HttpRequest" id="ec22ddeb-e78a-4721-95b7-507b7c97822c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#serviceEndpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="Response SLA Assertion" id="f27c27e4-4367-4b19-8aa1-e52c00f3622d" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="85dc4620-b2f8-4782-8849-e6aef2fe13e6" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" name="Service does not return an Exception report" id="29e5ab9e-3605-460d-bb8c-a91b5e5808f1"/><con:assertion type="GroovyScriptAssertion" name="Initialize Output Formats (technical assertion which fails if response is not schema valid)" id="a810d0ff-efb7-49c9-b147-168a237203dd"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import de.interactive_instruments.etf.suim.*

/*
 *
 * Technical assertion which is used to initialize Output Formats,
 * listed in the Capabilities.
 *
 * The assertion will fail if no Output Formats are found, which
 * is the case when the Capabilities are not schema valid.
 *
 * @etfDoc
 */

Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:WFS_Capabilities", "TR.missingCapabilitiesRootElement");
def holder = new XmlHolder(messageExchange.responseContentAsXml)

public class OutputFormat {

	private String outputFormat;
	private FormatType type;

	public OutputFormat() { }

	public OutputFormat(String outputFormat) {

		log.info(outputFormat);

		this.outputFormat = outputFormat;
		this.type = FormatType.UNKNOWN;

		if(outputFormat.indexOf("xml")!=-1 ||
			outputFormat.indexOf("gml")!=-1)
		{
			type=FormatType.XML;
		}else if(outputFormat.indexOf("json")!=-1) {
			type=FormatType.JSON;
		}else if(outputFormat.indexOf("text")!=-1) {
			type=FormatType.TEXT;
		}
	}

	public boolean equals(OutputFormat outputFormat) {
		return this.getFormat().equals(outputFormat.getFormat());
	}

	public String toString() {
		return this.outputFormat;
	}

	public String getFormat() {
		return this.outputFormat;
	}

	public boolean isParsable() {
		// JSON is parsable as XML in SoapUI
		return (type==FormatType.XML || FormatType.JSON);
	}

	public boolean isText() {
		return (type==FORMAT.TEXT);
	}

}

enum FormatType { UNKNOWN, TEXT, XML, JSON, IMAGE };





TreeMap&lt;String, OutputFormat[]> outputFormats = new TreeMap&lt;String, OutputFormat[]>();
String serviceTypeVersion;

void initOutputFormats(final XmlHolder capabilitiesXML) {

	final String operationNameXPath=
		"/*:WFS_Capabilities/*:OperationsMetadata/*:Operation/@name";

	serviceTypeVersion = capabilitiesXML.getNodeValue("/*:WFS_Capabilities/@version");


	for(operationName in capabilitiesXML.getNodeValues(operationNameXPath) ) {

			try {
				final List&lt;String> allOutputFormats =
					getOperationParameterValues(capabilitiesXML,
						operationName, "outputFormat");
				log.info("Output: "+allOutputFormats);
				final List&lt;OutputFormat> ofList = new ArrayList&lt;OutputFormat>();
				for(String o in allOutputFormats.sort()) {
					ofList.add(new OutputFormat(o));
				}
				outputFormats.put(operationName, ofList.toArray(new OutputFormat[0]));
			}catch(Exception e){
				//Operation does not Provide an outputFormat
				log.info("Exc: "+operationName);
			}
	}
}

	String[] getOperationParameterValues(final XmlHolder capabilitiesXML,
		final String operation,
		final String parameter)
	{

		final String operationXPath=
			"/*:WFS_Capabilities/*:OperationsMetadata/*:Operation[@name=\""+
			operation+"\"]";

		String allowedValue="";
		if(serviceTypeVersion=="2.0.0")
			allowedValue = "/*:AllowedValues";
		final String owsValueXPath="/*:Parameter[@name=\""+parameter+"\"]"+
			allowedValue+"/*:Value";

		String[] values = capabilitiesXML.getNodeValues(operationXPath+owsValueXPath);
		log.info(operationXPath+owsValueXPath)

		if(values.size()==0) {
			throw new Exception(this, "Unable to find \""+operation+"\"");
		}
		return values;
	}

initOutputFormats(holder);
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b1e1e274-1698-4121-956a-9dfb828182be" name="Root element is WFS_Capabilties"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:WFS_Capabilities", "TR.missingCapabilitiesRootElement");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>


            <con:parameter>
              <con:name>REQUEST</con:name>
              <con:value>GetCapabilities</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>GetCapabilities</con:default>
              <con:description xsi:nil="true"/>
            </con:parameter>
          <con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep><con:testStep name="Analyze WFS Capabilities" type="groovy" id="0f55e503-3a35-462d-83af-7397adf16be0">
        <con:description>Technical test step, used to analyze the service. Determines available OutputFormats, FeatureTypes, FeatureType properties and namespaces from the Capabilities document aggregated with information from DescribeFeatureType and GetFeature responses. Executes the test steps 'Get Schema Definition' and 'Get number of Features in DB' for each FeatureTypeName which were found in the Capabilities (previous test step 'GetCapabilities').</con:description><con:settings/>
        <con:config><script>import de.interactive_instruments.xtf.*;
import de.interactive_instruments.xtf.wfs.*;
SOAPUI_I.init(log,context,testRunner);

def ph = new ProjectHelper();
def cap = new Capabilities();

ph.getTestCase().setPropertyValue("AutoConfigurationCompleted", "false");

String autoConfiguration = "failed"
try {

	cap.setCapabilities(ph.getTestStepResult('GetCapabilities'));
	new ObjectSaver().save(cap);
	autoConfiguration = "completed"
	ph.getTestCase().setPropertyValue("AutoConfigurationCompleted", "true");

}catch(Exception e) {
	log.error(e);
	ph.getTestCase().setPropertyValue("AutoConfigurationCompleted",e.getMessage());
	autoConfiguration = e.getMessage()
}

assert "completed" == autoConfiguration, "Failed to initialize Executablte Test Suite"
</script></con:config>
      </con:testStep><con:testStep type="httprequest" name="Get Schema Definition" id="2911de8f-d001-415f-88d4-8d9da1be57fd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get Schema Definition" id="0c05e8a6-f0ca-4457-bd10-2db68e643ad1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Get the schema definition for one FeatureType. This test step will most likely fail, if the Output Format is listed in the Capabilities but not supported by the implementing service. If the service is capable to serve the requested Output Format  but rejects the request, there might be an issue with the encoding of whitespaces ( %20 ) from the request. For technical reasons the schema must be publicly accesible without authentication and the test step will fail if this is not the case! Called by 'Analyze WFS Capabilities'.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.DescribeFeatureType.Get}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="23a3c57b-db96-4570-a061-dec3596ebf12" name="SchemaLocations are publicly accessible without authentication"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import de.interactive_instruments.*
import de.interactive_instruments.etf.suim.TranslatableAssertionError

def holder = new XmlHolder( messageExchange.responseContentAsXml )

def schemaLocations = holder.getNodeValues('//@schemaLocation');

def Credentials credentials = null
/*
String user = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('authUser')
String passwd = messageExchange.modelItem.testStep.testCase.testSuite.project.getPropertyValue('authPwd')

if(!SUtils.isNullOrEmpty(user)) {
	credential = new Credentials(user, passwd)
}
*/

int getHttpResponseCode(String url, def credentials){
	def connection = UriUtils.openConnection( new URI(UriUtils.ensureUrlEncodedParams(url)), credentials )
	connection.setConnectTimeout(11000);
	connection.setReadTimeout(91000);
	connection.setRequestMethod("GET");
	return connection.getResponseCode()
}

assert schemaLocations != null, "Response does not contain xsi:schemaLocation attribute!"

if(schemaLocations!=null) {
	for(schemaLocation in schemaLocations) {
		log.info("Checking "+schemaLocation);
		int responseCode = getHttpResponseCode(schemaLocation,null);
		if(200 &lt;= responseCode &amp;&amp; responseCode >= 400) {
				throw new TranslatableAssertionError("TR.schemaNotAccessible", "url", schemaLocation, "code", String.valueOf(responseCode));	
		}
	}
}
</scriptText></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="68356fb5-21db-4fa1-9112-6c36d9d5e24f" name="Fail if service returns OWS Exception Report"/><con:assertion type="Response SLA Assertion" id="38e12665-b4f9-4257-8770-3b7f2f6ad2e7" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="99b08bb7-0b84-446c-a885-0e4f354657ce" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5f792684-1937-44ed-ba8e-144a69f19af4" name="Root element is schema"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/*:schema", "TR.missingSchemaRootElement");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>service</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>version</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>request</con:name><con:value>DescribeFeatureType</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outputFormat</con:name><con:value>${Transfer_Properties#outputFormat}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>#Project#endpt.DescribeFeatureType.Get</con:name><con:value>#Project#endpt.DescribeFeatureType.Get</con:value><con:style>TEMPLATE</con:style><con:default>#Project#endpt.DescribeFeatureType.Get</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get number of Features in DB" id="23e123ef-8675-41ee-9639-154c555c1c03"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Get number of Features in DB" id="9fde9996-0ec5-4840-b817-4209bc39fae0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Get the number of available Feature Types with a GetFeature request with RESULTTYPE=hits. Called by 'Analyze WFS Capabilities'.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.GetFeature.Get}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Expect no Exception" id="2b311676-82bb-48e9-b655-c7ae550565e6"><con:configuration><path>exists(/*:ServiceExceptionReport) or (/*:ExceptionReport)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreOrder>false</ignoreOrder><acceptValidXPath>false</acceptValidXPath></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="da2dbe1b-9c02-4a3d-b534-64b3418e2d2c" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="c069d70e-f813-4363-b3c5-8a4056a08fe2" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ae2f5738-cd76-4ebc-aea6-d5485d7142f3" name="Root element is FeatureCollection"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*

Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:FeatureCollection", "TR.missingFeatureCollectionRootElement");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetFeature</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>RESULTTYPE</con:name><con:value>hits</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>TYPENAMES</con:name><con:value>${Transfer_Properties#featureTypeName}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>OUTPUTFORMAT</con:name><con:value>${Transfer_Properties#outputFormat}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>NAMESPACES</con:name><con:value>${Transfer_Properties#featureTypeNamespaceWfs2}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>#Project#endpt.GetFeature.Get</con:name><con:value>#Project#endpt.GetFeature.Get</con:value><con:style>TEMPLATE</con:style><con:default>#Project#endpt.GetFeature.Get</con:default></con:parameter></con:parameters></con:config></con:testStep><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ObjectSaver" searchProperties="true" disabled="true" id="b96012ae-5290-49ca-9b50-81cfcff113fb">
      <con:description>Dieser Testfall wird lediglich für die Persistierung von XTF-OWSGTL Objekten genutzt und ist deaktiviert.</con:description><con:settings/>

    <con:testStep type="properties" name="TransientObjects" id="a0446417-ebf9-4b9d-81d2-2b8cf9919263"><con:description>This test step stores objects that can be accessed via the de.interactive_instruments.ObjectSaver class.</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" discardValuesOnSave="true" createMissingOnLoad="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>de.interactive_instruments.xtf.wfs.Capabilities</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="PersistentObjects" id="eaf53743-36e5-42ff-a6c6-5926d645b6ce"><con:description>This test step stores objects that can be accessed via the de.interactive_instruments.ObjectSaver class.</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" discardValuesOnSave="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>qaf.ShortDescription</con:name><con:value/></con:property><con:property><con:name>qaf.Author</con:name><con:value>herrmann</con:value></con:property><con:property><con:name>qaf.CreationDate</con:name><con:value>2014-01-13T12:24:44.132+01:00</con:value></con:property><con:property><con:name>qaf.Version</con:name><con:value>1.0.0</con:value></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value/></con:property><con:property><con:name>qaf.ExpectedResults</con:name><con:value/></con:property><con:property><con:name>qaf.Status</con:name><con:value>IMPLEMENTED</con:value></con:property><con:property><con:name>qaf.LastUpdateDate</con:name><con:value>2014-01-13T14:10:42.868+01:00</con:value></con:property><con:property><con:name>etf.technicalStep</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Basic checks passed and Capabilities still accessible" searchProperties="true" id="96964cba-9ef1-4188-9e87-47bca74559d4"><con:description>Check if the service is available and the Test initialisation phase has been completed successfully.</con:description><con:settings/><con:testStep name="GetCapabilities" type="httprequest" id="edfeb63b-e812-42fe-944e-f4be20f1c2a4">
        <con:settings/>
        <con:config method="GET" name="GetCapabilities" timeout="0" xsi:type="con:HttpRequest" sslKeystore="" id="1816fe01-0553-4d7e-b2cc-1601d4f6f4f2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:description>Requests the Capabilities document to check if the service is still up and running</con:description><con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file"/><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#serviceEndpoint}</con:endpoint>
          <con:request/>
           <con:assertion type="Response SLA Assertion" name="30 seconds timeout" id="f9bbd543-6c28-4304-b881-af43b00be430"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" name="Expect no exception" id="5a81e782-d2da-4662-89ee-4a5fd5863fa4"/><con:assertion type="XPath Match" name="Expect Capabilites in requested version" id="6d5d8bcb-08a7-4e8b-a29e-58a7e67bfe56"><con:configuration><path>/*/@version</path><content>${#TestSuite#version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5f404242-4047-461a-8221-b1f173be978a" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4e754185-b004-47a6-a231-95febc2e5b51" name="Root element is WFS_Capabilties"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:WFS_Capabilities", "TR.missingCapabilitiesRootElement");</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="cbaa6d68-b226-43fd-8851-3724846e3898" name="Expect Capabilites in version 2.0.0"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.equals("/wfs:WFS_Capabilities/@version", "Capabilities version", "2.0.0");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>


            <con:parameter>
              <con:name>REQUEST</con:name>
              <con:value>GetCapabilities</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>GetCapabilities</con:default>
              <con:description xsi:nil="true"/>
            </con:parameter>
          <con:parameter><con:name>SERVICE</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="Transfer Capabilities, service and version" id="88ba4d76-46a7-4639-b2eb-03f45c7320c3"><con:description>Technical test step. Transfer basic data.</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Capabilities</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:targetType>capabilities</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>service</con:name><con:sourceType>service</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>service</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>version</con:name><con:sourceType>version</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>version</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Check if TestSetup has been completed" id="4a566bc0-dd69-4d01-8bda-4c33a8759eb4"><con:description>Check if the  auto configuration test case in the TestSetup phase has been completed without errors. In most cases ALL other TestCases will fail if the TestSetup phase has not been completed.</con:description><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.*;
import de.interactive_instruments.xtf.*;
SOAPUI_I.init(log,context,testRunner);

ProjectHelper ph = new ProjectHelper();

String autoConfigurationCompleted = ph.getTestCase("AutoConfigure WFS").getPropertyValue("AutoConfigurationCompleted")

if(!"true".equals(autoConfigurationCompleted)) {
	throw new TranslatableAssertionError("TR.initializationAndBasicChecksFailed");
}</script></con:config></con:testStep><con:properties><con:property><con:name>capabilities</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<wfs:WFS_Capabilities version="2.0.0" xsi:schemaLocation="http://www.opengis.net/wfs/2.0 http://geodata.nationaalgeoregister.nl/schemas/wfs/2.0/wfs.xsd http://inspire.ec.europa.eu/schemas/inspire_dls/1.0 http://inspire.ec.europa.eu/schemas/inspire_dls/1.0/inspire_dls.xsd" updateSequence="1913" xmlns:wfs="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wfs/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:inspire_dls="http://inspire.ec.europa.eu/schemas/inspire_dls/1.0" xmlns:inspire_common="http://inspire.ec.europa.eu/schemas/common/1.0" xmlns:natura2000="http://natura2000.geonovum.nl">
   <ows:ServiceIdentification>
      <ows:Title>Natura2000</ows:Title>
      <ows:Abstract>Samenvatting: Natura 2000 is het samenhangend netwerk van beschermde natuurgebieden in de Europese Unie bestaande uit Vogelrichtlijn- en Habitatrichtlijngebieden. Natura 2000-gebieden zijn een samenvoeging van beide en de daarin gelegen beschermde natuurmonumenten. In Nederland gaat het om 163 gebieden waarvan drie mariene gebieden in de Exclusieve Economische Zone (EEZ) op de Noordzee (incl. een voorgenomen Vogelrichtlijngebied in de EEZ). De Vogelrichtlijngebieden zijn merendeels aangewezen in de periode 1986-2000. De Habitatrichtlijngebieden worden aangewezen met de aanwijzing van de betreffende Natura 2000-gebieden. Deze service bevat de grenzen van de definitief aangewezen gebieden en de grenzen conform het ontwerp-besluit van de meeste overige gebieden. Voor enkele Habitatrichtlijngebieden waarvoor nog geen ontwerp-besluiten zijn gepubliceerd, bevat deze service de grenzen zoals die aan de Europese Commissie gemeld zijn.</ows:Abstract>
      <ows:Keywords>
         <ows:Keyword>Natuur</ows:Keyword>
         <ows:Keyword>Habitatrichtlijn</ows:Keyword>
         <ows:Keyword>Vogelrichtlijn</ows:Keyword>
         <ows:Keyword>Natuurmonumenten</ows:Keyword>
         <ows:Keyword>Natura2000</ows:Keyword>
         <ows:Keyword>Beschermde gebieden</ows:Keyword>
      </ows:Keywords>
      <ows:ServiceType>WFS</ows:ServiceType>
      <ows:ServiceTypeVersion>2.0.0</ows:ServiceTypeVersion>
      <ows:Fees>NONE</ows:Fees>
      <ows:AccessConstraints>otherRestrictions;http://creativecommons.org/publicdomain/mark/1.0/deed.nl;Geen beperkingen</ows:AccessConstraints>
   </ows:ServiceIdentification>
   <ows:ServiceProvider>
      <ows:ProviderName>PDOK</ows:ProviderName>
      <ows:ServiceContact>
         <ows:IndividualName>KlantContactCenter PDOK</ows:IndividualName>
         <ows:PositionName>pointOfContact</ows:PositionName>
         <ows:ContactInfo>
            <ows:Phone>
               <ows:Voice/>
               <ows:Facsimile/>
            </ows:Phone>
            <ows:Address>
               <ows:DeliveryPoint/>
               <ows:City>Apeldoorn</ows:City>
               <ows:AdministrativeArea/>
               <ows:PostalCode/>
               <ows:Country>Nederland</ows:Country>
               <ows:ElectronicMailAddress>BeheerPDOK@kadaster.nl</ows:ElectronicMailAddress>
            </ows:Address>
         </ows:ContactInfo>
      </ows:ServiceContact>
   </ows:ServiceProvider>
   <ows:OperationsMetadata>
      <ows:Operation name="GetCapabilities">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="AcceptVersions">
            <ows:AllowedValues>
               <ows:Value>1.0.0</ows:Value>
               <ows:Value>1.1.0</ows:Value>
               <ows:Value>2.0.0</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="AcceptFormats">
            <ows:AllowedValues>
               <ows:Value>text/xml</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="DescribeFeatureType">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="GetFeature">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resultType">
            <ows:AllowedValues>
               <ows:Value>results</ows:Value>
               <ows:Value>hits</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
               <ows:Value>GML2</ows:Value>
               <ows:Value>KML</ows:Value>
               <ows:Value>application/gml+xml; version=3.2</ows:Value>
               <ows:Value>application/json</ows:Value>
               <ows:Value>application/vnd.google-earth.kml xml</ows:Value>
               <ows:Value>application/vnd.google-earth.kml+xml</ows:Value>
               <ows:Value>csv</ows:Value>
               <ows:Value>gml3</ows:Value>
               <ows:Value>gml32</ows:Value>
               <ows:Value>json</ows:Value>
               <ows:Value>text/xml; subtype=gml/2.1.2</ows:Value>
               <ows:Value>text/xml; subtype=gml/3.1.1</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Constraint name="PagingIsTransactionSafe">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </ows:Constraint>
         <ows:Constraint name="CountDefault">
            <ows:NoValues/>
            <ows:DefaultValue>15000</ows:DefaultValue>
         </ows:Constraint>
      </ows:Operation>
      <ows:Operation name="GetPropertyValue">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resolve">
            <ows:AllowedValues>
               <ows:Value>none</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="ListStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Operation name="DescribeStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Constraint name="ImplementsBasicWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTransactionalWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsLockingWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="KVPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="XMLEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="SOAPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsInheritance">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsRemoteResolve">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsResultPaging">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsStandardJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsSpatialJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTemporalJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsFeatureVersioning">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ManageStoredQueries">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="PagingIsTransactionSafe">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="QueryExpressions">
         <ows:AllowedValues>
            <ows:Value>wfs:Query</ows:Value>
            <ows:Value>wfs:StoredQuery</ows:Value>
         </ows:AllowedValues>
      </ows:Constraint>
      <ows:ExtendedCapabilities>
         <inspire_dls:ExtendedCapabilities>
            <inspire_common:MetadataUrl>
               <inspire_common:URL>http://www.nationaalgeoregister.nl/geonetwork/srv/eng/csw?service=CSW&amp;version=2.0.2&amp;request=GetRecordById&amp;outputschema=http://www.isotc211.org/2005/gmd&amp;elementsetname=full&amp;id=32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:URL>
               <inspire_common:MediaType>application/vnd.ogc.csw.GetRecordByIdResponse_xml</inspire_common:MediaType>
            </inspire_common:MetadataUrl>
            <inspire_common:SupportedLanguages>
               <inspire_common:DefaultLanguage>
                  <inspire_common:Language>eng</inspire_common:Language>
               </inspire_common:DefaultLanguage>
            </inspire_common:SupportedLanguages>
            <inspire_common:ResponseLanguage>
               <inspire_common:Language>eng</inspire_common:Language>
            </inspire_common:ResponseLanguage>
            <inspire_dls:SpatialDataSetIdentifier>
               <inspire_common:Code>32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:Code>
            </inspire_dls:SpatialDataSetIdentifier>
         </inspire_dls:ExtendedCapabilities>
      </ows:ExtendedCapabilities>
   </ows:OperationsMetadata>
   <FeatureTypeList>
      <FeatureType>
         <Name>natura2000:natura2000</Name>
         <Title>natura2000</Title>
         <Abstract>Natura2000 Beschermde gebieden</Abstract>
         <ows:Keywords>
            <ows:Keyword>Beschermde gebieden</ows:Keyword>
         </ows:Keywords>
         <DefaultCRS>urn:ogc:def:crs:EPSG::28992</DefaultCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4326</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4258</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3035</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3034</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3857</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25831</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25832</OtherCRS>
         <ows:WGS84BoundingBox>
            <ows:LowerCorner>2.682936644143043 50.72928077346555</ows:LowerCorner>
            <ows:UpperCorner>7.320942623544802 55.65692322166641</ows:UpperCorner>
         </ows:WGS84BoundingBox>
         <MetadataURL xlink:href="http://www.nationaalgeoregister.nl/geonetwork/srv/dut/xml.metadata.get?uuid=8829e5dd-c861-4639-a6c8-fdbb6e3440d2"/>
      </FeatureType>
   </FeatureTypeList>
   <fes:Filter_Capabilities>
      <fes:Conformance>
         <fes:Constraint name="ImplementsQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <!--Not functioning, only used for passing the 'OPTIONAL' test cases for INSPIRE-->
         <fes:Constraint name="ImplementsMinimumXPath">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsAdHocQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsFunctions">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsVersionNav">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSorting">
            <ows:AllowedValues>
               <ows:Value>ASC</ows:Value>
               <ows:Value>DESC</ows:Value>
            </ows:AllowedValues>
            <ows:DefaultValue>ASC</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsExtendedOperators">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
      </fes:Conformance>
      <fes:Id_Capabilities>
         <fes:ResourceIdentifier name="fes:ResourceId"/>
      </fes:Id_Capabilities>
      <fes:Scalar_Capabilities>
         <fes:LogicalOperators/>
         <fes:ComparisonOperators>
            <fes:ComparisonOperator name="PropertyIsLessThan"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThan"/>
            <fes:ComparisonOperator name="PropertyIsLessThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsNotEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsLike"/>
            <fes:ComparisonOperator name="PropertyIsBetween"/>
            <fes:ComparisonOperator name="PropertyIsNull"/>
            <fes:ComparisonOperator name="PropertyIsNil"/>
         </fes:ComparisonOperators>
      </fes:Scalar_Capabilities>
      <fes:Spatial_Capabilities>
         <fes:GeometryOperands>
            <fes:GeometryOperand name="gml:Envelope"/>
            <fes:GeometryOperand name="gml:Point"/>
            <fes:GeometryOperand name="gml:MultiPoint"/>
            <fes:GeometryOperand name="gml:LineString"/>
            <fes:GeometryOperand name="gml:MultiLineString"/>
            <fes:GeometryOperand name="gml:Polygon"/>
            <fes:GeometryOperand name="gml:MultiPolygon"/>
            <fes:GeometryOperand name="gml:MultiGeometry"/>
         </fes:GeometryOperands>
         <fes:SpatialOperators>
            <fes:SpatialOperator name="Disjoint"/>
            <fes:SpatialOperator name="Equals"/>
            <fes:SpatialOperator name="DWithin"/>
            <fes:SpatialOperator name="Beyond"/>
            <fes:SpatialOperator name="Intersects"/>
            <fes:SpatialOperator name="Touches"/>
            <fes:SpatialOperator name="Crosses"/>
            <fes:SpatialOperator name="Within"/>
            <fes:SpatialOperator name="Contains"/>
            <fes:SpatialOperator name="Overlaps"/>
            <fes:SpatialOperator name="BBOX"/>
         </fes:SpatialOperators>
      </fes:Spatial_Capabilities>
      <fes:Temporal_Capabilities>
         <fes:TemporalOperands>
            <fes:TemporalOperand name="gml:TimeInstant"/>
            <fes:TemporalOperand name="gml:TimePeriod"/>
         </fes:TemporalOperands>
         <fes:TemporalOperators>
            <fes:TemporalOperator name="After"/>
            <fes:TemporalOperator name="Before"/>
            <fes:TemporalOperator name="Begins"/>
            <fes:TemporalOperator name="BegunBy"/>
            <fes:TemporalOperator name="TContains"/>
            <fes:TemporalOperator name="During"/>
            <fes:TemporalOperator name="TEquals"/>
            <fes:TemporalOperator name="TOverlaps"/>
            <fes:TemporalOperator name="Meets"/>
            <fes:TemporalOperator name="OverlappedBy"/>
            <fes:TemporalOperator name="MetBy"/>
            <fes:TemporalOperator name="EndedBy"/>
         </fes:TemporalOperators>
      </fes:Temporal_Capabilities>
      <fes:Functions>
         <fes:Function name="abs">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:long</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_4">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="acos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AddCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Affine">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scalex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaley">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="shearx">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="sheary">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatey">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Aggregate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="aggregationAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="function">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="singlePass">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="groupByAttributes">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Area">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="area2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AreaGrid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="envelope">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asMultiGeometry">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="x">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="y">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandMerge">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverages">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transformChoice">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandSelect">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="SampleDimensions">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="VisibleSampleDimension">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BarnesSurface">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="valueAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataLimit">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="convergence">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="passes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="minObservations">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxObservationDistance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="noDataValue">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="queryBuffer">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="between">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="low">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="high">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundary">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundaryDimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="buffer">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BufferFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="attributeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="bufferWithSegments">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="numberOfSegments">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Categorize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="succeeding or preceding">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ceil">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="centroid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="classify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifer">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Clip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CollectGeometries">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Average">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Count">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="Collection_Max">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Median">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Min">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Sum">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Concatenate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="text">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="contains">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Contour">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="levels">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interval">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="simplify">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="smooth">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convert">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convexHull">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ConvolveCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernel">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelRadius">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="cos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Count">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CoverageClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CropCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cropShape">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="crosses">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateParse">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dateString">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="difference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="double2bool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="env">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="variable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="envelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="EqualInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExact">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExactTolerance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="tolarance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exp">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exteriorRing">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Feature">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="typeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FeatureClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="floor">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FormatDateTimezone">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="timezone">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geometry">
            <fes:Returns>gml:AbstractGeometryType</fes:Returns>
         </fes:Function>
         <fes:Function name="geometryType">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomFromWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomLength">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getGeometryN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getID">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="getX">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getY">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getz">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Grid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="vertexSpacing">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Heatmap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="radiusPixels">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="weightAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="id">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="IEEEremainder">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="if_then_else">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="condition">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="then">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="else">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="candidate">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="v">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in10">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in10">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in2">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in3">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in4">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in5">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in6">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in7">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in8">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in9">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="InclusionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2bbool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2ddouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorRingN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="n">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Interpolate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data value pairs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="IntersectionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="first attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="intersectionMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="percentagesEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="areasEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isClosed">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isCoverage">
            <fes:Returns>xs:boolean</fes:Returns>
         </fes:Function>
         <fes:Function name="isEmpty">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isInstanceOf">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isLike">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isNull">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isometric">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="extrusion">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isRing">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isSimple">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isValid">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Jenks">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="length">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="list">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="item">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="log">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSGeocode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSMeasure">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSSegment">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="mincircle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minimumdiameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minrectangle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="modulo">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="MultiplyCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="NormalizeCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="not">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="logicValue">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="notEqualTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="minus">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="decimal">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="separator">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numGeometries">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numInteriorRing">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numPoints">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="octagonalenvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="offset">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetX">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetY">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="overlaps">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="argumentName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="values">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseBoolean">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseInt">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseLong">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pi">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="PointBuffers">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="center">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distances">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="quadrantSegments">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pointN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PointStacker">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cellSize">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="normalize">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveLocation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PolygonExtraction">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="insideEdges">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pow">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="base">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="exponent">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="property">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PropertyExists">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Quantile">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Query">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="filter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="random">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="RangeLookup">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputPixelValues">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterAsPointCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="emisphere">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classification">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="source">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bands">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifier">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mask">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="useROIAccessor">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="statistics">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="minbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="numbins">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rangeData">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="localStats">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Recode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RectangularClip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relatePattern">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Reproject">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="forcedCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rescaleToPixels">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultUnit">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaleFactor">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="rescalingMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rint">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="roundDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ScaleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="xScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="xTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="setCRS">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="CRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Simplify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveTopology">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Snap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sqrt">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StandardDeviation">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strCapitalize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strConcat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="string2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEndsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="postfix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEqualsIgnoreCase">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="stringTemplate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="input">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="template">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLastIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLength">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strMatches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strReplace">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="search">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="replace">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="all">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strStartsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="prefix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstring">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="endIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstringStart">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToLowerCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToUpperCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="character">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strURLEncode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="encodeable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="formUrlEncode">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StyleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="style">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="symDifference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="tan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDegrees">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDirectPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ToEnvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toLineString">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="parameter">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toRadians">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="degree">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="touches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toXlinkHref">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="REFERENCE_VALUE">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Transform">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transform">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="TransparencyFill">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="union">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UnionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UniqueInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorToRaster">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="title">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="vertices">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Vocab">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="vocab">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="within">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
      </fes:Functions>
   </fes:Filter_Capabilities>
</wfs:WFS_Capabilities>]]></con:value></con:property><con:property><con:name>service</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">wfs</con:value></con:property><con:property><con:name>version</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2.0.0</con:value></con:property><con:property><con:name>qaf.ShortDescription</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.Author</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.CreationDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.Version</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.ExpectedResults</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.Status</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>qaf.LastUpdateDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:setupScript/><con:reportParameters/></con:testSuite><con:testSuite id="95796ea6-cb02-4cdb-9cdf-8c62ca853396" name="Capabilities"><con:description>Test module for checking Capabilities related information.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="938f750f-00ed-4100-b6ad-cc32c10ffeb3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SimpleWFS and HTTP GET - Mandatory" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description><![CDATA[The test case performs a GetCapabilities request and checks if the response contains the mandatory elements for the NL profile.
<br/>
<br/>
Relevant Requirements:
<ul>
<li>TG Requirement 60: The Extended Capabilities shall use the XML Schema as defined in the INSPIRE online schema repository.</li>
</ul>
<br/>
<br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/download-service/3.1/wfs-pre-defined/extended-capabilities" target="_blank">Abstract Test Case 'Extended capabilities'</a>]]></con:description><con:settings/><con:testStep type="calltestcase" name="Initialization and basic checks" id="5e89fb25-c6e0-486b-a73a-de3eb2cee547"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>96964cba-9ef1-4188-9e87-47bca74559d4</con:targetTestCase><con:properties><con:property><con:name>capabilities</con:name></con:property><con:property><con:name>service</con:name></con:property><con:property><con:name>version</con:name></con:property><con:property><con:name>qaf.ShortDescription</con:name></con:property><con:property><con:name>qaf.Author</con:name></con:property><con:property><con:name>qaf.CreationDate</con:name></con:property><con:property><con:name>qaf.Version</con:name></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name></con:property><con:property><con:name>qaf.ExpectedResults</con:name></con:property><con:property><con:name>qaf.Status</con:name></con:property><con:property><con:name>qaf.LastUpdateDate</con:name></con:property></con:properties><con:returnProperties/><con:runMode>SINGLETON_AND_WAIT</con:runMode></con:config></con:testStep><con:testStep type="properties" name="Properties" id="ef24fc1f-03cd-499e-9161-373b3d3ca939"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Capabilities</con:name><con:value><![CDATA[<wfs:WFS_Capabilities version="2.0.0" xsi:schemaLocation="http://www.opengis.net/wfs/2.0 http://geodata.nationaalgeoregister.nl/schemas/wfs/2.0/wfs.xsd http://inspire.ec.europa.eu/schemas/inspire_dls/1.0 http://inspire.ec.europa.eu/schemas/inspire_dls/1.0/inspire_dls.xsd" updateSequence="1913" xmlns:wfs="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wfs/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:inspire_dls="http://inspire.ec.europa.eu/schemas/inspire_dls/1.0" xmlns:inspire_common="http://inspire.ec.europa.eu/schemas/common/1.0" xmlns:natura2000="http://natura2000.geonovum.nl">
   <ows:ServiceIdentification>
      <ows:Title>Natura2000</ows:Title>
      <ows:Abstract>Samenvatting: Natura 2000 is het samenhangend netwerk van beschermde natuurgebieden in de Europese Unie bestaande uit Vogelrichtlijn- en Habitatrichtlijngebieden. Natura 2000-gebieden zijn een samenvoeging van beide en de daarin gelegen beschermde natuurmonumenten. In Nederland gaat het om 163 gebieden waarvan drie mariene gebieden in de Exclusieve Economische Zone (EEZ) op de Noordzee (incl. een voorgenomen Vogelrichtlijngebied in de EEZ). De Vogelrichtlijngebieden zijn merendeels aangewezen in de periode 1986-2000. De Habitatrichtlijngebieden worden aangewezen met de aanwijzing van de betreffende Natura 2000-gebieden. Deze service bevat de grenzen van de definitief aangewezen gebieden en de grenzen conform het ontwerp-besluit van de meeste overige gebieden. Voor enkele Habitatrichtlijngebieden waarvoor nog geen ontwerp-besluiten zijn gepubliceerd, bevat deze service de grenzen zoals die aan de Europese Commissie gemeld zijn.</ows:Abstract>
      <ows:Keywords>
         <ows:Keyword>Natuur</ows:Keyword>
         <ows:Keyword>Habitatrichtlijn</ows:Keyword>
         <ows:Keyword>Vogelrichtlijn</ows:Keyword>
         <ows:Keyword>Natuurmonumenten</ows:Keyword>
         <ows:Keyword>Natura2000</ows:Keyword>
         <ows:Keyword>Beschermde gebieden</ows:Keyword>
      </ows:Keywords>
      <ows:ServiceType>WFS</ows:ServiceType>
      <ows:ServiceTypeVersion>2.0.0</ows:ServiceTypeVersion>
      <ows:Fees>NONE</ows:Fees>
      <ows:AccessConstraints>otherRestrictions;http://creativecommons.org/publicdomain/mark/1.0/deed.nl;Geen beperkingen</ows:AccessConstraints>
   </ows:ServiceIdentification>
   <ows:ServiceProvider>
      <ows:ProviderName>PDOK</ows:ProviderName>
      <ows:ServiceContact>
         <ows:IndividualName>KlantContactCenter PDOK</ows:IndividualName>
         <ows:PositionName>pointOfContact</ows:PositionName>
         <ows:ContactInfo>
            <ows:Phone>
               <ows:Voice/>
               <ows:Facsimile/>
            </ows:Phone>
            <ows:Address>
               <ows:DeliveryPoint/>
               <ows:City>Apeldoorn</ows:City>
               <ows:AdministrativeArea/>
               <ows:PostalCode/>
               <ows:Country>Nederland</ows:Country>
               <ows:ElectronicMailAddress>BeheerPDOK@kadaster.nl</ows:ElectronicMailAddress>
            </ows:Address>
         </ows:ContactInfo>
      </ows:ServiceContact>
   </ows:ServiceProvider>
   <ows:OperationsMetadata>
      <ows:Operation name="GetCapabilities">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="AcceptVersions">
            <ows:AllowedValues>
               <ows:Value>1.0.0</ows:Value>
               <ows:Value>1.1.0</ows:Value>
               <ows:Value>2.0.0</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="AcceptFormats">
            <ows:AllowedValues>
               <ows:Value>text/xml</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="DescribeFeatureType">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="GetFeature">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resultType">
            <ows:AllowedValues>
               <ows:Value>results</ows:Value>
               <ows:Value>hits</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
               <ows:Value>GML2</ows:Value>
               <ows:Value>KML</ows:Value>
               <ows:Value>application/gml+xml; version=3.2</ows:Value>
               <ows:Value>application/json</ows:Value>
               <ows:Value>application/vnd.google-earth.kml xml</ows:Value>
               <ows:Value>application/vnd.google-earth.kml+xml</ows:Value>
               <ows:Value>csv</ows:Value>
               <ows:Value>gml3</ows:Value>
               <ows:Value>gml32</ows:Value>
               <ows:Value>json</ows:Value>
               <ows:Value>text/xml; subtype=gml/2.1.2</ows:Value>
               <ows:Value>text/xml; subtype=gml/3.1.1</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Constraint name="PagingIsTransactionSafe">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </ows:Constraint>
         <ows:Constraint name="CountDefault">
            <ows:NoValues/>
            <ows:DefaultValue>15000</ows:DefaultValue>
         </ows:Constraint>
      </ows:Operation>
      <ows:Operation name="GetPropertyValue">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resolve">
            <ows:AllowedValues>
               <ows:Value>none</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="ListStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Operation name="DescribeStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Constraint name="ImplementsBasicWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTransactionalWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsLockingWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="KVPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="XMLEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="SOAPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsInheritance">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsRemoteResolve">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsResultPaging">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsStandardJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsSpatialJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTemporalJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsFeatureVersioning">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ManageStoredQueries">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="PagingIsTransactionSafe">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="QueryExpressions">
         <ows:AllowedValues>
            <ows:Value>wfs:Query</ows:Value>
            <ows:Value>wfs:StoredQuery</ows:Value>
         </ows:AllowedValues>
      </ows:Constraint>
      <ows:ExtendedCapabilities>
         <inspire_dls:ExtendedCapabilities>
            <inspire_common:MetadataUrl>
               <inspire_common:URL>http://www.nationaalgeoregister.nl/geonetwork/srv/eng/csw?service=CSW&amp;version=2.0.2&amp;request=GetRecordById&amp;outputschema=http://www.isotc211.org/2005/gmd&amp;elementsetname=full&amp;id=32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:URL>
               <inspire_common:MediaType>application/vnd.ogc.csw.GetRecordByIdResponse_xml</inspire_common:MediaType>
            </inspire_common:MetadataUrl>
            <inspire_common:SupportedLanguages>
               <inspire_common:DefaultLanguage>
                  <inspire_common:Language>eng</inspire_common:Language>
               </inspire_common:DefaultLanguage>
            </inspire_common:SupportedLanguages>
            <inspire_common:ResponseLanguage>
               <inspire_common:Language>eng</inspire_common:Language>
            </inspire_common:ResponseLanguage>
            <inspire_dls:SpatialDataSetIdentifier>
               <inspire_common:Code>32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:Code>
            </inspire_dls:SpatialDataSetIdentifier>
         </inspire_dls:ExtendedCapabilities>
      </ows:ExtendedCapabilities>
   </ows:OperationsMetadata>
   <FeatureTypeList>
      <FeatureType>
         <Name>natura2000:natura2000</Name>
         <Title>natura2000</Title>
         <Abstract>Natura2000 Beschermde gebieden</Abstract>
         <ows:Keywords>
            <ows:Keyword>Beschermde gebieden</ows:Keyword>
         </ows:Keywords>
         <DefaultCRS>urn:ogc:def:crs:EPSG::28992</DefaultCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4326</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4258</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3035</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3034</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3857</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25831</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25832</OtherCRS>
         <ows:WGS84BoundingBox>
            <ows:LowerCorner>2.682936644143043 50.72928077346555</ows:LowerCorner>
            <ows:UpperCorner>7.320942623544802 55.65692322166641</ows:UpperCorner>
         </ows:WGS84BoundingBox>
         <MetadataURL xlink:href="http://www.nationaalgeoregister.nl/geonetwork/srv/dut/xml.metadata.get?uuid=8829e5dd-c861-4639-a6c8-fdbb6e3440d2"/>
      </FeatureType>
   </FeatureTypeList>
   <fes:Filter_Capabilities>
      <fes:Conformance>
         <fes:Constraint name="ImplementsQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <!--Not functioning, only used for passing the 'OPTIONAL' test cases for INSPIRE-->
         <fes:Constraint name="ImplementsMinimumXPath">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsAdHocQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsFunctions">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsVersionNav">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSorting">
            <ows:AllowedValues>
               <ows:Value>ASC</ows:Value>
               <ows:Value>DESC</ows:Value>
            </ows:AllowedValues>
            <ows:DefaultValue>ASC</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsExtendedOperators">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
      </fes:Conformance>
      <fes:Id_Capabilities>
         <fes:ResourceIdentifier name="fes:ResourceId"/>
      </fes:Id_Capabilities>
      <fes:Scalar_Capabilities>
         <fes:LogicalOperators/>
         <fes:ComparisonOperators>
            <fes:ComparisonOperator name="PropertyIsLessThan"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThan"/>
            <fes:ComparisonOperator name="PropertyIsLessThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsNotEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsLike"/>
            <fes:ComparisonOperator name="PropertyIsBetween"/>
            <fes:ComparisonOperator name="PropertyIsNull"/>
            <fes:ComparisonOperator name="PropertyIsNil"/>
         </fes:ComparisonOperators>
      </fes:Scalar_Capabilities>
      <fes:Spatial_Capabilities>
         <fes:GeometryOperands>
            <fes:GeometryOperand name="gml:Envelope"/>
            <fes:GeometryOperand name="gml:Point"/>
            <fes:GeometryOperand name="gml:MultiPoint"/>
            <fes:GeometryOperand name="gml:LineString"/>
            <fes:GeometryOperand name="gml:MultiLineString"/>
            <fes:GeometryOperand name="gml:Polygon"/>
            <fes:GeometryOperand name="gml:MultiPolygon"/>
            <fes:GeometryOperand name="gml:MultiGeometry"/>
         </fes:GeometryOperands>
         <fes:SpatialOperators>
            <fes:SpatialOperator name="Disjoint"/>
            <fes:SpatialOperator name="Equals"/>
            <fes:SpatialOperator name="DWithin"/>
            <fes:SpatialOperator name="Beyond"/>
            <fes:SpatialOperator name="Intersects"/>
            <fes:SpatialOperator name="Touches"/>
            <fes:SpatialOperator name="Crosses"/>
            <fes:SpatialOperator name="Within"/>
            <fes:SpatialOperator name="Contains"/>
            <fes:SpatialOperator name="Overlaps"/>
            <fes:SpatialOperator name="BBOX"/>
         </fes:SpatialOperators>
      </fes:Spatial_Capabilities>
      <fes:Temporal_Capabilities>
         <fes:TemporalOperands>
            <fes:TemporalOperand name="gml:TimeInstant"/>
            <fes:TemporalOperand name="gml:TimePeriod"/>
         </fes:TemporalOperands>
         <fes:TemporalOperators>
            <fes:TemporalOperator name="After"/>
            <fes:TemporalOperator name="Before"/>
            <fes:TemporalOperator name="Begins"/>
            <fes:TemporalOperator name="BegunBy"/>
            <fes:TemporalOperator name="TContains"/>
            <fes:TemporalOperator name="During"/>
            <fes:TemporalOperator name="TEquals"/>
            <fes:TemporalOperator name="TOverlaps"/>
            <fes:TemporalOperator name="Meets"/>
            <fes:TemporalOperator name="OverlappedBy"/>
            <fes:TemporalOperator name="MetBy"/>
            <fes:TemporalOperator name="EndedBy"/>
         </fes:TemporalOperators>
      </fes:Temporal_Capabilities>
      <fes:Functions>
         <fes:Function name="abs">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:long</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_4">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="acos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AddCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Affine">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scalex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaley">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="shearx">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="sheary">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatey">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Aggregate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="aggregationAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="function">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="singlePass">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="groupByAttributes">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Area">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="area2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AreaGrid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="envelope">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asMultiGeometry">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="x">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="y">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandMerge">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverages">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transformChoice">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandSelect">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="SampleDimensions">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="VisibleSampleDimension">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BarnesSurface">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="valueAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataLimit">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="convergence">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="passes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="minObservations">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxObservationDistance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="noDataValue">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="queryBuffer">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="between">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="low">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="high">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundary">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundaryDimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="buffer">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BufferFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="attributeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="bufferWithSegments">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="numberOfSegments">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Categorize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="succeeding or preceding">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ceil">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Centroid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="classify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifer">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Clip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CollectGeometries">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Average">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Count">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="Collection_Max">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Median">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Min">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Sum">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Concatenate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="text">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="contains">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Contour">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="levels">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interval">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="simplify">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="smooth">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convert">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convexHull">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ConvolveCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernel">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelRadius">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="cos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Count">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CoverageClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CropCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cropShape">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="crosses">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateParse">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dateString">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="difference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="double2bool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="env">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="variable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="envelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="EqualInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExact">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExactTolerance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="tolarance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exp">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exteriorRing">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Feature">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="typeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FeatureClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="floor">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FormatDateTimezone">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="timezone">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geometry">
            <fes:Returns>gml:AbstractGeometryType</fes:Returns>
         </fes:Function>
         <fes:Function name="geometryType">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomFromWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomLength">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getGeometryN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getID">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="getX">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getY">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getz">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Grid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="vertexSpacing">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Heatmap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="radiusPixels">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="weightAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="id">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="IEEEremainder">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="if_then_else">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="condition">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="then">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="else">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="candidate">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="v">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in10">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in10">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in2">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in3">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in4">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in5">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in6">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in7">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in8">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in9">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="InclusionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2bbool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2ddouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorRingN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="n">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Interpolate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data value pairs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="IntersectionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="first attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="intersectionMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="percentagesEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="areasEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isClosed">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isCoverage">
            <fes:Returns>xs:boolean</fes:Returns>
         </fes:Function>
         <fes:Function name="isEmpty">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isInstanceOf">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isLike">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isNull">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isometric">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="extrusion">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isRing">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isSimple">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isValid">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Jenks">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="length">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="list">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="item">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="log">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSGeocode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSMeasure">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSSegment">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="mincircle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minimumdiameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minrectangle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="modulo">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="MultiplyCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="NormalizeCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="not">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="logicValue">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="notEqualTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="minus">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="decimal">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="separator">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numGeometries">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numInteriorRing">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numPoints">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="octagonalenvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="offset">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetX">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetY">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="overlaps">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="argumentName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="values">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseBoolean">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseInt">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseLong">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pi">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="PointBuffers">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="center">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distances">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="quadrantSegments">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pointN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PointStacker">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cellSize">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="normalize">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveLocation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PolygonExtraction">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="insideEdges">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pow">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="base">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="exponent">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="property">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PropertyExists">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Quantile">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Query">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="filter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="random">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="RangeLookup">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputPixelValues">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterAsPointCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="emisphere">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classification">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="source">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bands">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifier">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mask">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="useROIAccessor">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="statistics">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="minbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="numbins">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rangeData">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="localStats">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Recode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RectangularClip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relatePattern">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Reproject">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="forcedCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rescaleToPixels">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultUnit">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaleFactor">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="rescalingMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rint">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="roundDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ScaleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="xScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="xTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="setCRS">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="CRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Simplify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveTopology">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Snap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sqrt">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StandardDeviation">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strCapitalize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strConcat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="string2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEndsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="postfix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEqualsIgnoreCase">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="stringTemplate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="input">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="template">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLastIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLength">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strMatches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strReplace">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="search">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="replace">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="all">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strStartsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="prefix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstring">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="endIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstringStart">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToLowerCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToUpperCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="character">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strURLEncode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="encodeable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="formUrlEncode">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StyleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="style">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="symDifference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="tan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDegrees">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDirectPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ToEnvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toLineString">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="parameter">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toRadians">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="degree">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="touches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toXlinkHref">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="REFERENCE_VALUE">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Transform">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transform">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="TransparencyFill">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="union">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UnionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UniqueInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorToRaster">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="title">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="vertices">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Vocab">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="vocab">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="within">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
      </fes:Functions>
   </fes:Filter_Capabilities>
</wfs:WFS_Capabilities>]]></con:value></con:property><con:property><con:name>DescribeFeatureTypeURL</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>TypeNames</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep name="Get Capabilities" type="httprequest" id="3e62a8a6-4d3b-4d8a-bcfc-23c3aeb457f4">
        <con:settings/>
        <con:config method="GET" name="Get Capabilities" timeout="0" xsi:type="con:HttpRequest" id="e3aa2120-0f06-4e06-9b86-e8ab26261ba2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#serviceEndpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="OwsExceptionReportAssertion" name="Expect no exception" id="377ecd8e-bc4f-4810-bbfc-1fc26abd8aea"/><con:assertion type="GroovyScriptAssertion" id="efa4fb4d-41e2-4da2-9719-2d97223a91c1" name="HttpGet KVPEncoding is advertized"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
	"//ows:Constraint[@name='KVPEncoding' and ./ows:DefaultValue='TRUE']", 
	"TR.capabilities.httpGetDeclared");</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="bb9849d3-c0c7-4f5a-a12c-f1532dd12c28" name="Outputformat GML 3.2 is advertized"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("//ows:Parameter[@name='outputFormat']/ows:AllowedValues/ows:Value[.='application/gml+xml; version=3.2']",
 "TR.capabilities.noOutputFormatGML32")</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>


            <con:parameter>
              <con:name>request</con:name>
              <con:value>GetCapabilities</con:value>
              <con:style>QUERY</con:style>
              <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
              <con:default>GetCapabilities</con:default>
              <con:description xsi:nil="true"/>
            </con:parameter>
          <con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>${#TestSuite#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>service</con:name><con:value>${#TestSuite#service}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters>
        </con:config>
      </con:testStep><con:testStep type="transfer" name="Property Transfer" id="f6246a04-58ac-4dfe-b8aa-8b3341e39482"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Capabilities</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Get Capabilities</con:sourceStep><con:sourcePath/><con:targetType>Capabilities</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DescribeFeatureTypeURL</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Get Capabilities</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace ows='http://www.opengis.net/ows/1.1';
declare namespace xlink='http://www.w3.org/1999/xlink';

//ows:Operation[@name='DescribeFeatureType'][1]/ows:DCP/ows:HTTP/ows:Get/@xlink:href</con:sourcePath><con:targetType>DescribeFeatureTypeURL</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="RunDescribeFeatureTypeForAllfeatureTypes" id="5617027c-554f-43ff-8e7a-23755c38ef4e"><con:settings/><con:config><script>import de.interactive_instruments.xtf.*;
SOAPUI_I.init(log,context,testRunner);
import com.eviware.soapui.support.XmlHolder;

def ph = new ProjectHelper();

// TODO: projecthelper
// props = testRunner.testCase.testSteps['Properties']

// log.info("Caps: " + props.getPropertyValue("Capabilities"))

XmlHolder capsXmlHolder = ph.getTestStepResult("Get Capabilities");
capsXmlHolder.namespaces["wfs"] = "http://www.opengis.net/wfs/2.0";
capsXmlHolder.namespaces["ows"] = "http://www.opengis.net/ows/1.1";
capsXmlHolder.namespaces["gml"] = "http://www.opengis.net/gml/3.2";
capsXmlHolder.namespaces["fes"] = "http://www.opengis.net/fes/2.0";
capsXmlHolder.namespaces["xlink"] = "http://www.w3.org/1999/xlink";

//Pull out the dataSetUrlNodes
def featureTypeNodes = capsXmlHolder.getNodeValues("//wfs:FeatureTypeList/wfs:FeatureType/wfs:Name");
log.debug("featureTypeNodes: " + featureTypeNodes);

// then run Feed test for each dataSetUrl
for( i in featureTypeNodes )
{   
   
   log.info("Executing DescribeFeatureType for featureType: " + i)
   ph.getTestCase().setPropertyValue("TypeNames",i)
   testRunner.runTestStepByName("DescribeFeatureType")
}</script></con:config></con:testStep><con:testStep type="httprequest" name="DescribeFeatureType" id="5036d263-292f-41aa-a52d-5cff42d7c266"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a411454d-42ab-4f07-bfe1-16c3bca3539a" name="DescribeFeatureType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.DescribeFeatureType.Get}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="013f70e2-c38d-4f18-9c88-c3eb19d09039" name="DescribeFeatureType returns XSD"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*

Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/*:schema",
 "TR.missingSchemaRootElement")
 </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style><con:default>WFS</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>DescribeFeatureType</con:value><con:style>QUERY</con:style><con:default>DescribeFeatureType</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>TYPENAMES</con:name><con:value>${#TestSuite#typeNames}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outputformat</con:name><con:value>application/gml+xml; version=3.2</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>TypeNames</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SimpleWFS - GetFeatureById support - Mandatory" searchProperties="true" id="913f43f2-ac3e-4349-8283-52120be59d3a"><con:settings/><con:testStep type="properties" name="Properties" id="4379cb1b-561b-4d9a-9976-25e5cabdec94"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Capabilities</con:name><con:value><![CDATA[<wfs:WFS_Capabilities version="2.0.0" xsi:schemaLocation="http://www.opengis.net/wfs/2.0 http://geodata.nationaalgeoregister.nl/schemas/wfs/2.0/wfs.xsd http://inspire.ec.europa.eu/schemas/inspire_dls/1.0 http://inspire.ec.europa.eu/schemas/inspire_dls/1.0/inspire_dls.xsd" updateSequence="1913" xmlns:wfs="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.opengis.net/wfs/2.0" xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:inspire_dls="http://inspire.ec.europa.eu/schemas/inspire_dls/1.0" xmlns:inspire_common="http://inspire.ec.europa.eu/schemas/common/1.0" xmlns:natura2000="http://natura2000.geonovum.nl">
   <ows:ServiceIdentification>
      <ows:Title>Natura2000</ows:Title>
      <ows:Abstract>Samenvatting: Natura 2000 is het samenhangend netwerk van beschermde natuurgebieden in de Europese Unie bestaande uit Vogelrichtlijn- en Habitatrichtlijngebieden. Natura 2000-gebieden zijn een samenvoeging van beide en de daarin gelegen beschermde natuurmonumenten. In Nederland gaat het om 163 gebieden waarvan drie mariene gebieden in de Exclusieve Economische Zone (EEZ) op de Noordzee (incl. een voorgenomen Vogelrichtlijngebied in de EEZ). De Vogelrichtlijngebieden zijn merendeels aangewezen in de periode 1986-2000. De Habitatrichtlijngebieden worden aangewezen met de aanwijzing van de betreffende Natura 2000-gebieden. Deze service bevat de grenzen van de definitief aangewezen gebieden en de grenzen conform het ontwerp-besluit van de meeste overige gebieden. Voor enkele Habitatrichtlijngebieden waarvoor nog geen ontwerp-besluiten zijn gepubliceerd, bevat deze service de grenzen zoals die aan de Europese Commissie gemeld zijn.</ows:Abstract>
      <ows:Keywords>
         <ows:Keyword>Natuur</ows:Keyword>
         <ows:Keyword>Habitatrichtlijn</ows:Keyword>
         <ows:Keyword>Vogelrichtlijn</ows:Keyword>
         <ows:Keyword>Natuurmonumenten</ows:Keyword>
         <ows:Keyword>Natura2000</ows:Keyword>
         <ows:Keyword>Beschermde gebieden</ows:Keyword>
      </ows:Keywords>
      <ows:ServiceType>WFS</ows:ServiceType>
      <ows:ServiceTypeVersion>2.0.0</ows:ServiceTypeVersion>
      <ows:Fees>NONE</ows:Fees>
      <ows:AccessConstraints>otherRestrictions;http://creativecommons.org/publicdomain/mark/1.0/deed.nl;Geen beperkingen</ows:AccessConstraints>
   </ows:ServiceIdentification>
   <ows:ServiceProvider>
      <ows:ProviderName>PDOK</ows:ProviderName>
      <ows:ServiceContact>
         <ows:IndividualName>KlantContactCenter PDOK</ows:IndividualName>
         <ows:PositionName>pointOfContact</ows:PositionName>
         <ows:ContactInfo>
            <ows:Phone>
               <ows:Voice/>
               <ows:Facsimile/>
            </ows:Phone>
            <ows:Address>
               <ows:DeliveryPoint/>
               <ows:City>Apeldoorn</ows:City>
               <ows:AdministrativeArea/>
               <ows:PostalCode/>
               <ows:Country>Nederland</ows:Country>
               <ows:ElectronicMailAddress>BeheerPDOK@kadaster.nl</ows:ElectronicMailAddress>
            </ows:Address>
         </ows:ContactInfo>
      </ows:ServiceContact>
   </ows:ServiceProvider>
   <ows:OperationsMetadata>
      <ows:Operation name="GetCapabilities">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="AcceptVersions">
            <ows:AllowedValues>
               <ows:Value>1.0.0</ows:Value>
               <ows:Value>1.1.0</ows:Value>
               <ows:Value>2.0.0</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="AcceptFormats">
            <ows:AllowedValues>
               <ows:Value>text/xml</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="DescribeFeatureType">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="GetFeature">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resultType">
            <ows:AllowedValues>
               <ows:Value>results</ows:Value>
               <ows:Value>hits</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Parameter name="outputFormat">
            <ows:AllowedValues>
               <ows:Value>text/xml; subtype=gml/3.2</ows:Value>
               <ows:Value>GML2</ows:Value>
               <ows:Value>KML</ows:Value>
               <ows:Value>application/gml+xml; version=3.2</ows:Value>
               <ows:Value>application/json</ows:Value>
               <ows:Value>application/vnd.google-earth.kml xml</ows:Value>
               <ows:Value>application/vnd.google-earth.kml+xml</ows:Value>
               <ows:Value>csv</ows:Value>
               <ows:Value>gml3</ows:Value>
               <ows:Value>gml32</ows:Value>
               <ows:Value>json</ows:Value>
               <ows:Value>text/xml; subtype=gml/2.1.2</ows:Value>
               <ows:Value>text/xml; subtype=gml/3.1.1</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
         <ows:Constraint name="PagingIsTransactionSafe">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </ows:Constraint>
         <ows:Constraint name="CountDefault">
            <ows:NoValues/>
            <ows:DefaultValue>15000</ows:DefaultValue>
         </ows:Constraint>
      </ows:Operation>
      <ows:Operation name="GetPropertyValue">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
         <ows:Parameter name="resolve">
            <ows:AllowedValues>
               <ows:Value>none</ows:Value>
            </ows:AllowedValues>
         </ows:Parameter>
      </ows:Operation>
      <ows:Operation name="ListStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Operation name="DescribeStoredQueries">
         <ows:DCP>
            <ows:HTTP>
               <ows:Get xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
               <ows:Post xlink:href="http://geodata.nationaalgeoregister.nl/natura2000/wfs"/>
            </ows:HTTP>
         </ows:DCP>
      </ows:Operation>
      <ows:Constraint name="ImplementsBasicWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTransactionalWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsLockingWFS">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="KVPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="XMLEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="SOAPEncoding">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsInheritance">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsRemoteResolve">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsResultPaging">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsStandardJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsSpatialJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsTemporalJoins">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ImplementsFeatureVersioning">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="ManageStoredQueries">
         <ows:NoValues/>
         <ows:DefaultValue>TRUE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="PagingIsTransactionSafe">
         <ows:NoValues/>
         <ows:DefaultValue>FALSE</ows:DefaultValue>
      </ows:Constraint>
      <ows:Constraint name="QueryExpressions">
         <ows:AllowedValues>
            <ows:Value>wfs:Query</ows:Value>
            <ows:Value>wfs:StoredQuery</ows:Value>
         </ows:AllowedValues>
      </ows:Constraint>
      <ows:ExtendedCapabilities>
         <inspire_dls:ExtendedCapabilities>
            <inspire_common:MetadataUrl>
               <inspire_common:URL>http://www.nationaalgeoregister.nl/geonetwork/srv/eng/csw?service=CSW&amp;version=2.0.2&amp;request=GetRecordById&amp;outputschema=http://www.isotc211.org/2005/gmd&amp;elementsetname=full&amp;id=32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:URL>
               <inspire_common:MediaType>application/vnd.ogc.csw.GetRecordByIdResponse_xml</inspire_common:MediaType>
            </inspire_common:MetadataUrl>
            <inspire_common:SupportedLanguages>
               <inspire_common:DefaultLanguage>
                  <inspire_common:Language>eng</inspire_common:Language>
               </inspire_common:DefaultLanguage>
            </inspire_common:SupportedLanguages>
            <inspire_common:ResponseLanguage>
               <inspire_common:Language>eng</inspire_common:Language>
            </inspire_common:ResponseLanguage>
            <inspire_dls:SpatialDataSetIdentifier>
               <inspire_common:Code>32b1eb9e-c54f-4598-92d2-328eb77fa0d3</inspire_common:Code>
            </inspire_dls:SpatialDataSetIdentifier>
         </inspire_dls:ExtendedCapabilities>
      </ows:ExtendedCapabilities>
   </ows:OperationsMetadata>
   <FeatureTypeList>
      <FeatureType>
         <Name>natura2000:natura2000</Name>
         <Title>natura2000</Title>
         <Abstract>Natura2000 Beschermde gebieden</Abstract>
         <ows:Keywords>
            <ows:Keyword>Beschermde gebieden</ows:Keyword>
         </ows:Keywords>
         <DefaultCRS>urn:ogc:def:crs:EPSG::28992</DefaultCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4326</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::4258</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3035</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3034</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::3857</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25831</OtherCRS>
         <OtherCRS>urn:ogc:def:crs:EPSG::25832</OtherCRS>
         <ows:WGS84BoundingBox>
            <ows:LowerCorner>2.682936644143043 50.72928077346555</ows:LowerCorner>
            <ows:UpperCorner>7.320942623544802 55.65692322166641</ows:UpperCorner>
         </ows:WGS84BoundingBox>
         <MetadataURL xlink:href="http://www.nationaalgeoregister.nl/geonetwork/srv/dut/xml.metadata.get?uuid=8829e5dd-c861-4639-a6c8-fdbb6e3440d2"/>
      </FeatureType>
   </FeatureTypeList>
   <fes:Filter_Capabilities>
      <fes:Conformance>
         <fes:Constraint name="ImplementsQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <!--Not functioning, only used for passing the 'OPTIONAL' test cases for INSPIRE-->
         <fes:Constraint name="ImplementsMinimumXPath">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsAdHocQuery">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsFunctions">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsStandardFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSpatialFilter">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsMinTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsTemporalFilter">
            <ows:NoValues/>
            <ows:DefaultValue>TRUE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsVersionNav">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsSorting">
            <ows:AllowedValues>
               <ows:Value>ASC</ows:Value>
               <ows:Value>DESC</ows:Value>
            </ows:AllowedValues>
            <ows:DefaultValue>ASC</ows:DefaultValue>
         </fes:Constraint>
         <fes:Constraint name="ImplementsExtendedOperators">
            <ows:NoValues/>
            <ows:DefaultValue>FALSE</ows:DefaultValue>
         </fes:Constraint>
      </fes:Conformance>
      <fes:Id_Capabilities>
         <fes:ResourceIdentifier name="fes:ResourceId"/>
      </fes:Id_Capabilities>
      <fes:Scalar_Capabilities>
         <fes:LogicalOperators/>
         <fes:ComparisonOperators>
            <fes:ComparisonOperator name="PropertyIsLessThan"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThan"/>
            <fes:ComparisonOperator name="PropertyIsLessThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsGreaterThanOrEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsNotEqualTo"/>
            <fes:ComparisonOperator name="PropertyIsLike"/>
            <fes:ComparisonOperator name="PropertyIsBetween"/>
            <fes:ComparisonOperator name="PropertyIsNull"/>
            <fes:ComparisonOperator name="PropertyIsNil"/>
         </fes:ComparisonOperators>
      </fes:Scalar_Capabilities>
      <fes:Spatial_Capabilities>
         <fes:GeometryOperands>
            <fes:GeometryOperand name="gml:Envelope"/>
            <fes:GeometryOperand name="gml:Point"/>
            <fes:GeometryOperand name="gml:MultiPoint"/>
            <fes:GeometryOperand name="gml:LineString"/>
            <fes:GeometryOperand name="gml:MultiLineString"/>
            <fes:GeometryOperand name="gml:Polygon"/>
            <fes:GeometryOperand name="gml:MultiPolygon"/>
            <fes:GeometryOperand name="gml:MultiGeometry"/>
         </fes:GeometryOperands>
         <fes:SpatialOperators>
            <fes:SpatialOperator name="Disjoint"/>
            <fes:SpatialOperator name="Equals"/>
            <fes:SpatialOperator name="DWithin"/>
            <fes:SpatialOperator name="Beyond"/>
            <fes:SpatialOperator name="Intersects"/>
            <fes:SpatialOperator name="Touches"/>
            <fes:SpatialOperator name="Crosses"/>
            <fes:SpatialOperator name="Within"/>
            <fes:SpatialOperator name="Contains"/>
            <fes:SpatialOperator name="Overlaps"/>
            <fes:SpatialOperator name="BBOX"/>
         </fes:SpatialOperators>
      </fes:Spatial_Capabilities>
      <fes:Temporal_Capabilities>
         <fes:TemporalOperands>
            <fes:TemporalOperand name="gml:TimeInstant"/>
            <fes:TemporalOperand name="gml:TimePeriod"/>
         </fes:TemporalOperands>
         <fes:TemporalOperators>
            <fes:TemporalOperator name="After"/>
            <fes:TemporalOperator name="Before"/>
            <fes:TemporalOperator name="Begins"/>
            <fes:TemporalOperator name="BegunBy"/>
            <fes:TemporalOperator name="TContains"/>
            <fes:TemporalOperator name="During"/>
            <fes:TemporalOperator name="TEquals"/>
            <fes:TemporalOperator name="TOverlaps"/>
            <fes:TemporalOperator name="Meets"/>
            <fes:TemporalOperator name="OverlappedBy"/>
            <fes:TemporalOperator name="MetBy"/>
            <fes:TemporalOperator name="EndedBy"/>
         </fes:TemporalOperators>
      </fes:Temporal_Capabilities>
      <fes:Functions>
         <fes:Function name="abs">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:long</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="abs_4">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="acos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AddCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Affine">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scalex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaley">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="shearx">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="sheary">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatex">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="translatey">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Aggregate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="aggregationAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="function">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="singlePass">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="groupByAttributes">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Area">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="area2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="AreaGrid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="envelope">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="asMultiGeometry">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="atan2">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="x">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="y">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandMerge">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverages">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transformChoice">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BandSelect">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="SampleDimensions">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="VisibleSampleDimension">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BarnesSurface">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="valueAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataLimit">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="convergence">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="passes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="minObservations">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxObservationDistance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="noDataValue">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="queryBuffer">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="between">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="low">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="high">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundary">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="boundaryDimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="buffer">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="BufferFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="attributeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="bufferWithSegments">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="numberOfSegments">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Categorize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Threshold 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="succeeding or preceding">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ceil">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="centroid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="classify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifer">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Clip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CollectGeometries">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Average">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Bounds">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Count">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="Collection_Max">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Median">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Min">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Sum">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Collection_Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expression">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Concatenate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="text">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="contains">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Contour">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="levels">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="interval">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="simplify">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="smooth">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convert">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="convexHull">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ConvolveCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernel">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelRadius">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="kernelHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="cos">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Count">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CoverageClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="CropCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cropShape">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="crosses">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:dateTime</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dateParse">
            <fes:Returns>xs:dateTime</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dateString">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="difference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="dimension">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="disjoint3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="distance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="double2bool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="endPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="env">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="variable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="envelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="EqualInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExact">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalsExactTolerance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="tolarance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="equalTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exp">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="exteriorRing">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Feature">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="typeName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FeatureClassStats">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="stats">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="floor">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="FormatDateTimezone">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="date">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="timezone">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geometry">
            <fes:Returns>gml:AbstractGeometryType</fes:Returns>
         </fes:Function>
         <fes:Function name="geometryType">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomFromWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="geomLength">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getGeometryN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getID">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="getX">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getY">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="getz">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="greaterThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="object2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Grid">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="width">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="height">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="vertexSpacing">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Heatmap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="radiusPixels">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="weightAttr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pixelsPerCell">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="id">
            <fes:Returns>xs:string</fes:Returns>
         </fes:Function>
         <fes:Function name="IEEEremainder">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="if_then_else">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="condition">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="then">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="else">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="candidate">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="v">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in10">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in10">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in2">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in3">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in4">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in5">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in6">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in7">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in8">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="in9">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="in1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in3">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in4">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in5">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in6">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in7">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in8">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="in9">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="InclusionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2bbool">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="int2ddouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="interiorRingN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="n">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Interpolate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data value pairs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="IntersectionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second feature collection">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="first attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second attributes to retain">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="intersectionMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="percentagesEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="areasEnabled">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="intersects3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isClosed">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isCoverage">
            <fes:Returns>xs:boolean</fes:Returns>
         </fes:Function>
         <fes:Function name="isEmpty">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isInstanceOf">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="class">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isLike">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isNull">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="object">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isometric">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="extrusion">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isRing">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isSimple">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isValid">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="isWithinDistance3D">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Jenks">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="length">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessEqualThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="lessThan">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="list">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="item">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="log">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSGeocode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSMeasure">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="LRSSegment">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure_attb">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="from_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="to_measure">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="max_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="double">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="long">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_3">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="float">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="min_4">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="int">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="mincircle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minimumdiameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="minrectangle">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="modulo">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="dividend">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="divisor">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="MultiplyCoverages">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverageA">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="coverageB">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Nearest">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="NormalizeCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="not">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="logicValue">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="notEqualTo">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="a">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="b">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numberFormat2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="format">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="minus">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="decimal">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="separator">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numGeometries">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numInteriorRing">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="numPoints">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="octagonalenvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="offset">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetX">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="offsetY">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="overlaps">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parameter">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="argumentName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="values">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseBoolean">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseInt">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="parseLong">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pi">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="PointBuffers">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="center">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distances">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="quadrantSegments">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pointN">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="index">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PointStacker">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="cellSize">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="normalize">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveLocation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputBBOX">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PolygonExtraction">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="insideEdges">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="pow">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="base">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="exponent">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="property">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="PropertyExists">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="propertyName">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Quantile">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Query">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="filter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="random">
            <fes:Returns>xs:double</fes:Returns>
         </fes:Function>
         <fes:Function name="RangeLookup">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="ranges">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="outputPixelValues">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="noData">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterAsPointCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scale">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="emisphere">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="band">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classification">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RasterZonalStatistics2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="source">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bands">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="classifier">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="nodata">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="mask">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="useROIAccessor">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
               <fes:Argument name="roi">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="statistics">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="minbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="maxbounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="numbins">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rangeData">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="localStats">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Recode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="LookupValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Data 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="Value 2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="RectangularClip">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="clip">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveZ">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="relatePattern">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Reproject">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="forcedCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="targetCRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rescaleToPixels">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultUnit">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="scaleFactor">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="rescalingMode">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="rint">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="double">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round">
            <fes:Returns>xs:float</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="round_2">
            <fes:Returns>xs:long</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="roundDouble">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ScaleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="xScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yScale">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="xTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="yTranslate">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="interpolation">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="setCRS">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="CRS">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Simplify">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="distance">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="preserveTopology">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sin">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Snap">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="point">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="crs">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="sqrt">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="number">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StandardDeviation">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startAngle">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="startPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="linestring">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strCapitalize">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strConcat">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string1">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="string2">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEndsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="postfix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strEqualsIgnoreCase">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="stringTemplate">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="input">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="pattern">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="template">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="defaultValue">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLastIndexOf">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="String">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strLength">
            <fes:Returns>xs:int</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strMatches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="regex">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="lookup">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strReplace">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="search">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="replace">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="all">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strStartsWith">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="prefix">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstring">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="endIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strSubstringStart">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="beginIndex">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToLowerCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strToUpperCase">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strTrim2">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="string">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="method">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="character">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="strURLEncode">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="encodeable">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="formUrlEncode">
                  <fes:Type>xs:boolean</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="StyleCoverage">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="coverage">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="style">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="symDifference">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="tan">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDegrees">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="radians">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toDirectPosition">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="ToEnvelope">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toLineString">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="parameter">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toPoint">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="parameter">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toRadians">
            <fes:Returns>xs:double</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="degree">
                  <fes:Type>xs:float</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="touches">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toWKT">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="toXlinkHref">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="REFERENCE_VALUE">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Transform">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="transform">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="TransparencyFill">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="union">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UnionFeatureCollection">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="first">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="second">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Unique">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="UniqueInterval">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="value">
                  <fes:Type>xs:double</fes:Type>
               </fes:Argument>
               <fes:Argument name="classes">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorToRaster">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="features">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterWidth">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="rasterHeight">
                  <fes:Type>xs:int</fes:Type>
               </fes:Argument>
               <fes:Argument name="title">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="attribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="bounds">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="VectorZonalStatistics">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="data">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="dataAttribute">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="zones">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="vertices">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="Vocab">
            <fes:Returns>xs:string</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="expr">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
               <fes:Argument name="vocab">
                  <fes:Type>xs:string</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
         <fes:Function name="within">
            <fes:Returns>xs:boolean</fes:Returns>
            <fes:Arguments>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
               <fes:Argument name="geometry">
                  <fes:Type>gml:AbstractGeometryType</fes:Type>
               </fes:Argument>
            </fes:Arguments>
         </fes:Function>
      </fes:Functions>
   </fes:Filter_Capabilities>
</wfs:WFS_Capabilities>]]></con:value></con:property><con:property><con:name>typeNames</con:name><con:value/></con:property><con:property><con:name>FirstFeature</con:name><con:value/></con:property><con:property><con:name>FirstFeatureId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GetCapabilities" id="9c6de7eb-97a2-4346-be64-13074ce6add6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetCapabilities" id="c177528f-0d5b-4417-9f27-d5be63a5d7eb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Response SLA Assertion" name="Timely reponse" id="902a3631-1112-478e-bd12-dc0a85f5f1cd"><con:configuration><SLA>10000</SLA></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="5caa21ad-3f3e-4ad1-bd0c-94814fe06dd6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="false" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Capabilities</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath/><con:targetType>Capabilities</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" disabled="true"><con:name>FirstFeatureTypeName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace ows='http://www.opengis.net/ows/1.1';
declare namespace xlink='http://www.w3.org/1999/xlink';

(//wfs:FeatureTypeList/wfs:FeatureType[not(contains(',${#Project#excludeFeatureTypes},',concat(',',./wfs:Name,',')))]/wfs:Name)[1]</con:sourcePath><con:targetType>FirstFeatureTypeName</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="ListStoredQueries" id="f6f20421-0d79-4be1-89e4-05b16d15c51a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="ListStoredQueries" id="275946b5-53d9-4b07-bb90-c2f219bb395b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.ListStoredQueries.Get}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="42ca77a1-436a-44ed-a9b7-3a4d1814a004" name="GetFeatureById exists in StoredQueries"><con:configuration><scriptText>
import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:ListStoredQueriesResponse/wfs:StoredQuery[@id='urn:ogc:def:query:OGC-WFS::GetFeatureById']",
 "TR.storedQueries.getFeatureByIdExists")
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>ListStoredQueries</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>filter</con:name><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GetFeatureFirstTypeName" id="901c0d34-9ff1-40f9-91f1-7aab287b88dd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetFeatureFirstTypeName" id="fe2e0b94-ce4d-46f1-bf07-ef72669364d4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.GetFeature.Get}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="f833698c-b5d5-448a-855f-12b5d9f31981" name="The result contains a wfs:FeatureCollection with one feature"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("//wfs:FeatureCollection[@numberReturned='1']",
 "TR.getFeature.getFeatureByIdReturns1feature")</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetFeature</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>typeNames</con:name><con:value>${#Project#FirstFeatureTypeName}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>count</con:name><con:value>1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer Feature" id="1f828aae-575e-4f19-8f55-6588e51ce8ec"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="false" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="true"><con:name>FirstFeature</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetFeatureFirstTypeName</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace gml='http://www.opengis.net/gml/3.2';

//wfs:member[1]/*</con:sourcePath><con:targetType>FirstFeature</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>FirstFeatureId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetFeatureFirstTypeName</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace gml='http://www.opengis.net/gml/3.2';

//wfs:member[1]/*/@gml:id</con:sourcePath><con:targetType>FirstFeatureId</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="GetFeatureById" id="cb781054-a387-4916-bd8d-e8ee7c274ba1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetFeatureById" id="af95dde6-8759-4a5e-8abe-baa785e2d651" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.GetFeature.Get}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2df6a1e4-51f9-4e28-b445-09d06fa92a2d"><con:configuration><codes>200,301,302,303</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c4ea5303-e3dd-4c4e-bf75-731211a442d1" name="A GML feature is returned"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("//*[@gml:id]",
 "TR.getFeature.featureExists")
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c4ea5303-e3dd-4c4e-bf75-731211a442d1" name="The requested GML feature is returned"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
import de.interactive_instruments.xtf.*;
ProjectHelper ph = new ProjectHelper();
// Thijs: try to parse the excludeFeatureTypes property. Throws an exception if not set, so make it an empty string then.
try {
    featureId = Util.getProjectProperty("FirstFeatureId");
} catch (error) {
    featureId = ""
}
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("//*[@gml:id='"+featureId+"']",
 "TR.getFeature.getFeatureByidReturnsRequestedFeature")
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a85ce7ee-3d49-41e5-ad21-f059bb60602e" name="GetFeatureById returns 1 feature"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.equals("//wfs:FeatureCollection/@numberReturned","numberReturned","1",
 "TR.getFeature.getFeatureByidReturnsNoOtherFeatures")
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetFeature</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>storedquery_id</con:name><con:value>urn:ogc:def:query:OGC-WFS::GetFeatureById</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>outputformat</con:name><con:value>application/gml+xml; version=3.2</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>id</con:name><con:value>${#Project#FirstFeatureId}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>typenames</con:name><con:value>${#Project#FirstFeatureTypeName}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>ListStoredQueries</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../tmp/</con:value></con:property><con:property><con:name>qaf.AssociatedRequirements</con:name><con:value>M-01##M-01-GFI-Listed###M-01##M-01-GetFeature</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>SERVICE</con:name><con:value>wfs</con:value></con:property><con:property><con:name>VERSION</con:name><con:value>2.0.0</con:value></con:property></con:properties></con:testSuite>
<con:testSuite id="6186f6be-d559-4f6e-95db-7cdf792cb8b4" name="Stored Query" disabled="true"><con:description>Test module for checking Stored Query specific functionalities.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4133a101-ccf7-448e-b5ff-7af5e4f04cd5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Predefined Stored Query" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description><![CDATA[
The test case performs a DescribeStoredQueries request and checks that the response contains at least one StoredQueryDescription with the Parameters: 'CRS', 'DataSetIdCode', 'DataSetIdNamespace' and 'Language'.
The parameter arguments for these parameters are extracted from the Capabilities and for each combination of these parameters the Stored Query is invoked.
<br/>
<br/>
Known limitations: The response is currently parsed in memory so that the test case is limited to smaller datasets. If a service does not fullfill TG recommendation 13 ( GetSpatialDataSet identifier) the assertion 'Contains the recommended 'GetSpatialDataSet' identifier' will fail.
<br/>
<br/>
Relevant Requirements:
<ul>
<li>TG Requirement 49: Pre-defined Stored Queries shall be provided to make pre-defined datasets available.</li>
<li>TG Requirement 50: Any possible (i.e. available) combinations of CRS/DataSetIdCode/ DataSetIdNamespace/language shall be made available through pre-defined
stored queries.</li>
<li>TG Requirement 51: Pre-defined Stored Queries shall use the parameter names 'CRS', 'DataSetIdCode', 'DataSetIdNamespace' and 'Language' to identify the CRS, dataset ID code, dataset ID namespace and language components of a
query.</li>
</ul>
<br/>
<br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/download-service/3.1/wfs-pre-defined/predefined-stored-query" target="_blank">Abstract Test Case 'Predefined Stored Query'</a>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="SimpleWFS and HTTP GET - Mandatory" id="72fd9bfd-4a87-4b44-9b04-6275e4e50437"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>938f750f-00ed-4100-b6ad-cc32c10ffeb3</con:targetTestCase><con:properties><con:property><con:name>TypeNames</con:name></con:property></con:properties><con:returnProperties/><con:runMode>SINGLETON_AND_WAIT</con:runMode></con:config></con:testStep><con:testStep type="properties" name="Transfer_Properties" id="36368c49-e9eb-4fe8-a94f-8b4117631179"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>supportedCrs</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>supportedLanguages</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>spatialDataSetIdentifierCodes</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>spatialDataSetIdentifierNamespaces</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>storedQueryId</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>crs</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>language</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>dataSetIdCode</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>dataSetIdNamespace</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Request and check DescribeStoredQueries" id="64e1a4d0-0cf4-4dc3-a5ee-1f538884f561"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Request and check DescribeStoredQueries" id="a4b63ca6-b8fb-4bb9-885c-47fdcdae8ef9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Reqest DescribeStoreQueries and test that the DescribeStoredQueries response contains at least one StoredQueryDescription with the Parameters: 'CRS', 'DataSetIdCode', 'DataSetIdNamespace' and 'Language'.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpt.DescribeStoredQueries.Get}</con:endpoint><con:request/><con:assertion type="OwsExceptionReportAssertion" id="970fe58b-bb3a-44ab-a056-9155ecf24baf" name="Expect no exception"/><con:assertion type="Simple Schema Validator" id="793cc0fc-2192-4fbb-bd90-b75a56fcbe60" name="Response validates agains schema"><con:configuration><pathToXSD>xsi:schemaLocation</pathToXSD></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="f7ba721e-03a3-4192-ab3d-23289d021d39" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="dca8ea30-bca2-44cd-93e9-b731ab1e793c" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="67921fc4-bc73-402b-8882-d660a11fcf4a" name="Contains  at least one StoredQuery with the parameters 'CRS', 'DataSetID' , 'DataSetIdNamespace', 'Language'"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:DescribeStoredQueriesResponse/wfs:StoredQueryDescription[./wfs:Parameter/@name='DataSetIdCode' and ./wfs:Parameter/@name='DataSetIdCode' and ./wfs:Parameter/@name='DataSetIdNamespace' and ./wfs:Parameter/@name='Language']", "TR.missingInspireStoredQuery");
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ff6b4670-07ca-499c-8a04-2cad813b4671" name="Contains the recommended 'GetSpatialDataSet' identifier"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);

// Todo warning for TG Recommendation 13
a.exists("/wfs:DescribeStoredQueriesResponse/wfs:StoredQueryDescription[@id='http://inspire.ec.europa.eu/operation/download/GetSpatialDataSet']", "TR.recommendation.GetSpatialDataSetIdentifier");</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f73ac0fa-d4f7-43fb-9271-33f924202c5b" name="Root element is DescribeStoredQueriesResponse"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
	"/wfs:DescribeStoredQueriesResponse",
  "missingStoredQueriesRootElement"
)</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>DescribeStoredQueries</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Extract Stored Query ID" id="c721efbb-b84a-4a45-a820-9a8131c08f1c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Stored Query ID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Request and check DescribeStoredQueries</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace inspire_dls='http://inspire.ec.europa.eu/schemas/inspire_dls/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

/wfs:DescribeStoredQueriesResponse/wfs:StoredQueryDescription[./wfs:Parameter/@name='DataSetIdCode' and ./wfs:Parameter/@name='DataSetIdCode' and ./wfs:Parameter/@name='DataSetIdNamespace' and ./wfs:Parameter/@name='Language']/@id</con:sourcePath><con:targetType>storedQueryId</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="Request GetCapabilities" id="f37288d2-2883-4a1a-ae2d-7a874dc0f898"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Request GetCapabilities" id="14e940e5-b4ec-4f37-b1c1-c4432ac2c4ca" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Request GetCapabilities and check that SpatialDataSetIdentifier exist.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="OwsExceptionReportAssertion" id="f11fe012-d2c4-4917-897e-f652ce2b8a32" name="Expect no exception"/><con:assertion type="GroovyScriptAssertion" id="76bf11cf-64e0-4ca9-8af3-3bb5adce1559" name="SpatialDataSetIdentifier Namespace exists"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
	"//inspire_dls:ExtendedCapabilities/inspire_dls:SpatialDataSetIdentifier/inspire_common:Namespace",
  "TR.missingSpatialDataSetIdentifierNamespace"
)</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="05dd30c4-a0b0-4680-b00c-0158b0675d8d" name="SpatialDataSetIdentifier Code exists"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
	"//inspire_dls:ExtendedCapabilities/inspire_dls:SpatialDataSetIdentifier/inspire_common:Code",
  "TR.capabilities.extended.inspire.missingElement"
)


</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Extract supported CRS, language, SpatialDataSetIdentifier ID code and Namespace" id="e1ad46f8-9b6d-406c-95de-7e031064c597"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>supportedCrs</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Request GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';

string-join( distinct-values( (//wfs:DefaultCRS, //wfs:OtherCRS) ), ',' )</con:sourcePath><con:targetType>supportedCrs</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>supportedLanguages</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Request GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace ows='http://www.opengis.net/ows/1.1';
declare namespace fes='http://www.opengis.net/fes/2.0';
declare namespace gml='http://www.opengis.net/gml/3.2';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_dls='http://inspire.ec.europa.eu/schemas/inspire_dls/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

string-join(
	distinct-values((/wfs:WFS_Capabilities/ows:OperationsMetadata/ows:ExtendedCapabilities/inspire_dls:ExtendedCapabilities[1]/inspire_common:SupportedLanguages/inspire_common:DefaultLanguage/inspire_common:Language,
	/wfs:WFS_Capabilities/ows:OperationsMetadata/ows:ExtendedCapabilities/inspire_dls:ExtendedCapabilities[1]/inspire_common:SupportedLanguages/inspire_common:SupportedLanguage/inspire_common:Language)),
',')</con:sourcePath><con:targetType>supportedLanguages</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>spatialDataSetIdentifierCodes</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Request GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace inspire_dls='http://inspire.ec.europa.eu/schemas/inspire_dls/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

string-join( (//inspire_dls:ExtendedCapabilities/inspire_dls:SpatialDataSetIdentifier/inspire_common:Code), ',' )</con:sourcePath><con:targetType>spatialDataSetIdentifierCodes</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>spatialDataSetIdentifierNamespaces</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Request GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wfs='http://www.opengis.net/wfs/2.0';
declare namespace inspire_dls='http://inspire.ec.europa.eu/schemas/inspire_dls/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

string-join( (//inspire_dls:ExtendedCapabilities/inspire_dls:SpatialDataSetIdentifier/inspire_common:Namespace), ',' )</con:sourcePath><con:targetType>spatialDataSetIdentifierNamespaces</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Loop through CRS, Language,  SpatialDataSetIdentifier" id="631e41b4-090e-4e74-b6e7-f25fdcb92c65"><con:description>Technical test step. 'CRS', 'DataSetIdCode', 'DataSetIdNamespace' and 'Language' are extracted from the previous GetCapabilities response (test step 'Request GetCapabilities'). Executes 'Invoke Stored Query with CRS, Language, SpatialDataSetIdentifier' for each parameter combination.</con:description><con:settings/><con:config><script>import de.interactive_instruments.xtf.*;
SOAPUI_I.init(log,context,testRunner);
import de.interactive_instruments.UriUtils;

ProjectHelper ph = new ProjectHelper();

def supportedCrs = ph.getTransferProperty("supportedCrs").tokenize(',')
def supportedLanguages = ph.getTransferProperty("supportedLanguages").tokenize(',')
def spatialDataSetIdentifierCodes = ph.getTransferProperty("spatialDataSetIdentifierCodes").tokenize(',')
def spatialDataSetIdentifierNamespaces = ph.getTransferProperty("spatialDataSetIdentifierNamespaces").tokenize(',')


for( crs in supportedCrs ) {
	for( language in supportedLanguages ) {
		spatialDataSetIdentifierCodes.eachWithIndex{ dataSetIdCode, i ->
			ph.setTransferProperty("crs", crs)
			ph.setTransferProperty("language", language)
			ph.setTransferProperty("dataSetIdCode", dataSetIdCode)
			ph.setTransferProperty("dataSetIdNamespace", spatialDataSetIdentifierNamespaces[i])
   			ph.runTestStep("Invoke Stored Query with CRS, Language, SpatialDataSetIdentifier")
		}
	}
}

testRunner.gotoStepByName("End test");</script></con:config></con:testStep><con:testStep type="httprequest" name="Invoke Stored Query with CRS, Language, SpatialDataSetIdentifier" id="da5c2412-c5c5-42d4-84e5-390f250d7d15"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Invoke Stored Query with CRS, Language, SpatialDataSetIdentifier" id="bfdf02a0-61b1-4110-8533-99e918ee2db8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>A GetFeature request executed by 'Loop through CRS, Language,  SpatialDataSetIdentifier' with all combinations of the 'CRS', 'DataSetIdCode', 'DataSetIdNamespace' and 'Language' parameters and the Stored Query ID extracted from the previous DescribeStoredQueries response (test step 'Request and check DescribeStoredQueries').</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#endpt.DescribeStoredQueries.Get}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="87c7a9cd-fd7f-4320-8487-edaf657927c3" name="HTTP status code is 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="fd70a526-a715-4203-9d52-2162b487742b" name="30 seconds timeout"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="3b7fb95b-059c-4771-bbf8-e6de4516077c" name="Expect no exception"/><con:assertion type="Simple Schema Validator" id="8205c7bc-d537-462b-84d0-6eb5846966cd" name="Response validates agains schema"><con:configuration><pathToXSD>xsi:schemaLocation</pathToXSD></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8898ea8e-b928-4833-a223-2ee9250c7c6c" name="Root element is wfs:FeatureCollection"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*

Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists("/wfs:FeatureCollection", "TR.missingFeatureCollectionRootElement");</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="bae987ca-0d10-4298-853e-836c6aeed85f" name="FeatureCollection in requested CRS"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
import de.interactive_instruments.xtf.*
SOAPUI_I.init(log, context, messageExchange)
final ProjectHelper ph = new ProjectHelper()
String expectedCrs = ph.getTransferProperty("crs");

Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.equals("/wfs:FeatureCollection/wfs:boundedBy/gml:Envelope/@srsName", "CRS", expectedCrs, "TR.unexpectedCRS");</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetFeature</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>2.0.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WFS</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STOREDQUERY_ID</con:name><con:value>${Transfer_Properties#storedQueryId}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${Transfer_Properties#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>DataSetIdCode</con:name><con:value>${Transfer_Properties#dataSetIdCode}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>DataSetIdNamespace</con:name><con:value>${Transfer_Properties#dataSetIdNamespace}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>Language</con:name><con:value>${Transfer_Properties#language}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties>
  <con:property>
    <con:name>serviceEndpoint</con:name>
    <con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs?SERVICE=WFS&amp;request=GetCapabilities</con:value>
    </con:property>
    <con:property><con:name>excludeFeatureTypes</con:name><con:value/></con:property>





    <con:property>
      <con:name>featureTypeList</con:name>
      <con:value/>
    </con:property>
    <con:property>
      <con:name>srsnamelist</con:name>
      <con:value/>
    </con:property>











 <con:property><con:name>datasetIdentifiersList</con:name><con:value/></con:property><con:property><con:name>FirstFeature</con:name><con:value/></con:property><con:property><con:name>FirstFeatureId</con:name><con:value>natura2000.1</con:value></con:property><con:property><con:name>authUser</con:name><con:value/></con:property><con:property><con:name>authPwd</con:name><con:value/></con:property><con:property><con:name>etf.ignore.properties</con:name><con:value>excludeFeatureTypes, srsnamelist, blacklisted.outputFormats, authUser, authPwd, authMethod, FirstFeature, FirstFeatureId, GetFeatureURL, featureTypeList, datasetIdentifiersList, featureTypeList, FirstFeatureTypeName, testIntensive, endpt.GetFeature.Get, endpt.DescribeFeatureType.Get, endpt.GetFeature.Post, endpt.DescribeFeatureType.Post, endpt.GetPropertyValue.Get, endpt.GetPropertyValue.Post, endpt.ListStoredQueries.Get, endpt.ListStoredQueries.Post, endpt.DescribeStoredQueries.Get, endpt.DescribeStoredQueries.Post, etf.translation.template.collection.id, etf.tag.ids, etf.author, etf.version, etf.last.editor, etf.reference, etf.creation.date</con:value></con:property><con:property><con:name>authMethod</con:name><con:value>basic</con:value></con:property><con:property><con:name>FirstFeatureTypeName</con:name><con:value>natura2000:natura2000</con:value></con:property><con:property><con:name>testIntensive</con:name><con:value/></con:property><con:property><con:name>endpt.GetFeature.Get</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.DescribeFeatureType.Get</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.GetFeature.Post</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.DescribeFeatureType.Post</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.GetPropertyValue.Get</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.GetPropertyValue.Post</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.ListStoredQueries.Get</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.ListStoredQueries.Post</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.DescribeStoredQueries.Get</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>endpt.DescribeStoredQueries.Post</con:name><con:value>http://geodata.nationaalgeoregister.nl/natura2000/wfs</con:value></con:property><con:property><con:name>blacklisted.outputFormats</con:name><con:value>text/xml; subtype=gml/3.1.1, application/gml+xml; version=3.1</con:value></con:property><con:property><con:name>etf.tag.ids</con:name><con:value>EIDe51620af-bcf5-4719-ab0e-ef6226a572fa</con:value></con:property><con:property><con:name>etf.translation.template.collection.id</con:name><con:value>EIDfadd4929-fa60-4781-b658-703bbfe3f4eb</con:value></con:property><con:property><con:name>etf.author</con:name><con:value>interactive instruments GmbH</con:value></con:property><con:property><con:name>etf.version</con:name><con:value>0.0.1</con:value></con:property><con:property><con:name>etf.last.editor</con:name><con:value>interactive instruments GmbH</con:value></con:property><con:property><con:name>etf.creation.date</con:name><con:value>2017-01-27T00:00:00</con:value></con:property><con:property><con:name>etf.supported.test.object.type.ids</con:name><con:value>EID9b6ef734-981e-4d60-aa81-d6730a1c6389</con:value></con:property><con:property><con:name>etf.last.update.date</con:name><con:value>2017-02-05T00:00:00</con:value></con:property></con:properties>
 <con:afterLoadScript>
 </con:afterLoadScript>
 <con:wssContainer/>
 <con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:afterRunScript>import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.model.testsuite.TestStepResult;


// Get the "requirements" test step
def requirements = project.getTestSuiteByName("TestSetup")?.
	getTestCaseByName("Requirements")?.getTestStepByName("Requirements");

log.info("Results: ");
for( testSuiteR in runner?.getResults() ) {
	for( testCaseR in testSuiteR?.getResults() ) {
		for( testStepR in testCaseR?.getResults() ) {

			if(testStepR.getStatus()!=TestStepResult.TestStepStatus.OK) {
				if (testStepR.testStep instanceof HttpTestRequestStep || testStepR.testStep instanceof  RestTestRequestStep) {
					testStepR.testStep.testRequest.assertionList.each{
						// Extract ID which is seperated with a whitespace and a doublecolon
						String assertionName = it.name;
						if (assertionName.indexOf(": ") > -1) {
							String id = assertionName?.substring( 0, assertionName.indexOf(": ") );
							if(it.valid) {
								log.info("Assertion "+assertionName+" passed");
							}else if(it.failed) {
								log.error("Assertion "+assertionName+" failed with error:");
								log.error("  -   "+it.getErrors()[0].getMessage());
								log.error("  -   Requirements:");

								// Todo: Save the requirements as an object in a map
								requirements.getPropertyList().each {
									log.info(it.getName())
									if(it.getName().contains(id)) {
										log.error("   -   "+it.getName()+" :" );
										log.error("        "+it.getValue());
									}
								}
							}else{
								log.warn("Assertion "+assertionName+" is deactivated");
							}
						}
					}
				}
			}
		}
	}
}
</con:afterRunScript>
    <con:sensitiveInformation/></con:soapui-project>